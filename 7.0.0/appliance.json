{
    "basePath": "",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "appliance.infraprofile.configs.import_profile_spec": {
            "properties": {
                "config_spec": {
                    "description": "The JSON string representing the desired config specification.",
                    "type": "string"
                },
                "profile_spec": {
                    "$ref": "#/definitions/appliance.infraprofile.configs.profiles_spec",
                    "description": "The profile specification, if any\nonly set if there is a profilespec avaliable for this import profilespec."
                }
            },
            "required": [
                "config_spec"
            ],
            "type": "object"
        },
        "appliance.infraprofile.configs.profile_info": {
            "properties": {
                "info": {
                    "description": "Description of the profile.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the profile which is also a profile identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: infraprofile.profile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: infraprofile.profile.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "info"
            ],
            "type": "object"
        },
        "appliance.infraprofile.configs.profiles_spec": {
            "properties": {
                "description": {
                    "description": "Custom description provided by the user.\nIf unset description will be empty.",
                    "type": "string"
                },
                "encryption_key": {
                    "description": "Encryption Key to encrypt/decrypt profiles.\nIf unset encryption will not be used for the profile.",
                    "format": "password",
                    "type": "string"
                },
                "profiles": {
                    "description": "Profiles to be exported/imported.\nIf unset or empty, all profiles will be returned.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: infraprofile.profile. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: infraprofile.profile.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "appliance.infraprofile.configs_export": {
            "$ref": "#/definitions/appliance.infraprofile.configs.profiles_spec",
            "description": "information to export the profile."
        },
        "appliance.infraprofile.configs_import_profile_task": {
            "$ref": "#/definitions/appliance.infraprofile.configs.import_profile_spec",
            "description": "information to import the profile."
        },
        "appliance.infraprofile.configs_validate_task": {
            "$ref": "#/definitions/appliance.infraprofile.configs.import_profile_spec",
            "description": "information to validate the profile."
        },
        "appliance.monitoring.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.monitoring.monitored_item"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.monitoring.monitored_item": {
            "properties": {
                "category": {
                    "description": "category Ex: network, storage etc",
                    "type": "string"
                },
                "description": {
                    "description": "monitored item description Ex: applmgmt.mon.descr.net.rx.packetRate.eth0",
                    "type": "string"
                },
                "id": {
                    "description": "monitored item ID Ex: CPU, MEMORY",
                    "type": "string"
                },
                "instance": {
                    "description": "instance name Ex: eth0",
                    "type": "string"
                },
                "name": {
                    "description": "monitored item name Ex: \"Network write speed\"",
                    "type": "string"
                },
                "units": {
                    "description": "Y-axis label EX: \"Mbps\", \"%\"",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name",
                "units",
                "category",
                "instance",
                "description"
            ],
            "type": "object"
        },
        "appliance.monitoring.monitored_item_data": {
            "properties": {
                "data": {
                    "description": "list of values",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "end_time": {
                    "description": "End time in UTC",
                    "format": "date-time",
                    "type": "string"
                },
                "function": {
                    "$ref": "#/definitions/appliance.monitoring.function_type",
                    "description": "aggregation function"
                },
                "interval": {
                    "$ref": "#/definitions/appliance.monitoring.interval_type",
                    "description": "interval between values in hours, minutes"
                },
                "name": {
                    "description": "Monitored item IDs Ex: CPU, MEMORY, STORAGE_TOTAL",
                    "type": "string"
                },
                "start_time": {
                    "description": "Start time in UTC",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "interval",
                "function",
                "start_time",
                "end_time",
                "data"
            ],
            "type": "object"
        },
        "appliance.monitoring.query_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.monitoring.monitored_item_data"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.monitoring_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.monitoring.monitored_item"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.backup_request": {
            "properties": {
                "backup_password": {
                    "description": "a password for a backup piece The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "format": "password",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment",
                    "type": "string"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "format": "password",
                    "type": "string"
                },
                "location_type": {
                    "$ref": "#/definitions/appliance.recovery.backup.location_type",
                    "description": "a type of location"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "parts": {
                    "description": "a list of optional parts. Run backup parts APIs to get list of optional parts and description",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "parts",
                "location_type",
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.backup_job_status": {
            "properties": {
                "end_time": {
                    "description": "Time when the backup was finished.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "TimeStamp based ID.",
                    "type": "string"
                },
                "messages": {
                    "description": "List of messages.",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.job.localizable_message"
                    },
                    "type": "array"
                },
                "progress": {
                    "description": "Progress of the job in percentage.",
                    "format": "int64",
                    "type": "integer"
                },
                "start_time": {
                    "description": "Time when the backup was started.",
                    "format": "date-time",
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_restore_process_state",
                    "description": "The state of the backup job."
                }
            },
            "required": [
                "id",
                "state",
                "messages",
                "progress",
                "start_time"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.backup_request": {
            "properties": {
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "format": "password",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment provided by the user.",
                    "type": "string"
                },
                "location": {
                    "description": "Path or URL of the backup location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "format": "password",
                    "type": "string"
                },
                "location_type": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.location_type",
                    "description": "Type of backup location."
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "parts": {
                    "description": "List of optional parts that will be included in the backup. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "parts",
                "location_type",
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.backup_restore_process_state": {
            "description": "The {@name BackupRestoreProcessState} {@term enumerated type} defines the possible states of a backup/restore process.",
            "enum": [
                "FAILED",
                "INPROGRESS",
                "NONE",
                "SUCCEEDED"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.job.cancel_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.return_result"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.create_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.details.build_info": {
            "properties": {
                "build_number": {
                    "description": "Build Number of the appliance",
                    "type": "string"
                },
                "version": {
                    "description": "Appliance version, for example 6.8.2.10000",
                    "type": "string"
                },
                "version_name": {
                    "description": "Appliance product type, for example 6.8.2 GA",
                    "type": "string"
                }
            },
            "required": [
                "version_name",
                "version",
                "build_number"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.details.filter_spec": {
            "properties": {
                "jobs": {
                    "description": "Identifiers of backup jobs that can match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "appliance.recovery.backup.job.details.info": {
            "properties": {
                "build": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.details.build_info",
                    "description": "Information about the build of the appliance."
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the operation associated with the task."
                },
                "duration": {
                    "description": "Time in seconds since the backup job was started or the time it took to complete the backup job.",
                    "format": "int64",
                    "type": "integer"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "object"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "format": "uri",
                    "type": "string"
                },
                "location_user": {
                    "description": "The username for the remote backup location.",
                    "type": "string"
                },
                "messages": {
                    "description": "List of any info/warning/error messages returned by the backup job.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/definitions/cis.task.progress",
                    "description": "Progress of the job."
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "size": {
                    "description": "Size of the backup data transferred to remote location.",
                    "format": "int64",
                    "type": "integer"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/cis.task.status",
                    "description": "Status of the operation associated with the task."
                },
                "target": {
                    "$ref": "#/definitions/vapi.std.dynamic_ID",
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                },
                "type": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.details.type",
                    "description": "Type of the backup job. Indicates whether the backup was started manually or as a scheduled backup."
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "location",
                "location_user",
                "type",
                "messages",
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.details.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.recovery.backup.job.details.info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.details.type": {
            "description": "The {@name Type} {@term enumerated type} defines the type of backup job.",
            "enum": [
                "SCHEDULED",
                "MANUAL"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.job.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.localizable_message": {
            "properties": {
                "args": {
                    "description": "Nested data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "Text in english.",
                    "type": "string"
                },
                "id": {
                    "description": "Id in message bundle.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.location_type": {
            "description": "The {@name LocationType} {@term enumerated type} defines the type of destination location for backup/restore. You specify the location type when you create a backup job. See {@link BackupRequest}.",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.job.return_result": {
            "properties": {
                "messages": {
                    "description": "List of messages.",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.job.localizable_message"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.return_status",
                    "description": "Status of the cancel operation."
                }
            },
            "required": [
                "status",
                "messages"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job.return_status": {
            "description": "The {@name ReturnStatus} {@term enumerated type} defines the return type for the cancel operation. You specify the return status when you return the result of cancel job. See {@link ReturnResult}.",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.job_create": {
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_request",
                    "description": "BackupRequest Structure"
                }
            },
            "required": [
                "piece"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.job_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.localizable_message": {
            "properties": {
                "args": {
                    "description": "nested data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.location_spec": {
            "properties": {
                "location": {
                    "description": "Backup location URL.",
                    "format": "uri",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "format": "password",
                    "type": "string"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                }
            },
            "required": [
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.location_type": {
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.parts.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.parts.part"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.parts.localizable_message": {
            "properties": {
                "args": {
                    "description": "nested data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.parts.part": {
            "properties": {
                "description": {
                    "$ref": "#/definitions/appliance.recovery.backup.parts.localizable_message",
                    "description": "part description id in message bundle"
                },
                "id": {
                    "description": "part ID",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/appliance.recovery.backup.parts.localizable_message",
                    "description": "part name id in message bundle"
                },
                "optional": {
                    "description": "Is this part optional.",
                    "type": "boolean"
                },
                "selected_by_default": {
                    "description": "Is this part selected by default in the user interface.",
                    "type": "boolean"
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "selected_by_default",
                "optional"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.parts_resp": {
            "properties": {
                "value": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.return_result": {
            "properties": {
                "messages": {
                    "description": "List of messages",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.localizable_message"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/appliance.recovery.backup.return_status",
                    "description": "Check status"
                }
            },
            "required": [
                "status",
                "messages"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.return_status": {
            "description": "{@name ReturnStatus} {@term enumerated type} Defines the state of precheck",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.schedules.create_spec": {
            "properties": {
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "format": "password",
                    "type": "string"
                },
                "enable": {
                    "description": "Enable or disable a schedule.",
                    "type": "boolean"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "format": "uri",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "format": "password",
                    "type": "string"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "parts": {
                    "description": "List of optional parts to be backed up. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recurrence_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info",
                    "description": "Recurrence information for the schedule."
                },
                "retention_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info",
                    "description": "Retention information for the schedule."
                }
            },
            "required": [
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.day_of_week": {
            "description": "The {@name DayOfWeek} {@term enumerated type} defines the set of days when backup can be scheduled. The days can be specified as a list of individual days. You specify the days when you set the recurrence for a schedule. See {@link RecurrenceInfo#days}.",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ],
            "type": "string"
        },
        "appliance.recovery.backup.schedules.info": {
            "properties": {
                "enable": {
                    "description": "Enable or disable a schedule, by default when created a schedule will be enabled.",
                    "type": "boolean"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "format": "uri",
                    "type": "string"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "parts": {
                    "description": "List of optional parts that will be included in backups based on this schedule details. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recurrence_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info",
                    "description": "Recurrence information for the schedule."
                },
                "retention_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info",
                    "description": "Retention information for the schedule."
                }
            },
            "required": [
                "parts",
                "location",
                "enable"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.recovery.backup.schedules.info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.recurrence_info": {
            "properties": {
                "days": {
                    "description": "Day of week when the backup should be run. Days can be specified as list of days.",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.schedules.day_of_week"
                    },
                    "type": "array"
                },
                "hour": {
                    "description": "Hour when backup should run. The hour should be specified in 24-hour clock format.",
                    "format": "int64",
                    "type": "integer"
                },
                "minute": {
                    "description": "Minute when backup should run.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "minute",
                "hour"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.retention_info": {
            "properties": {
                "max_count": {
                    "description": "Number of backups which should be retained. If retention is not set, all the backups will be retained forever.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "max_count"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.run_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules.update_spec": {
            "properties": {
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "format": "password",
                    "type": "string"
                },
                "enable": {
                    "description": "Enable or disable a schedule.",
                    "type": "boolean"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "format": "uri",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "format": "password",
                    "type": "string"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "parts": {
                    "description": "List of optional parts. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recurrence_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info",
                    "description": "Recurrence information for the schedule."
                },
                "retention_info": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info",
                    "description": "Retention information for the schedule."
                }
            },
            "type": "object"
        },
        "appliance.recovery.backup.schedules_create": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.create_spec",
                    "description": "CreateSpec Structure"
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.schedules_run": {
            "properties": {
                "comment": {
                    "description": "field that specifies the description for the backup.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "appliance.recovery.backup.schedules_update": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.update_spec",
                    "description": "UpdateSpec Structure"
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.system_name.archive.filter_spec": {
            "properties": {
                "comment_substring": {
                    "description": "Backup comment must contain this {@term string} to match the filter.",
                    "type": "string"
                },
                "end_timestamp": {
                    "description": "Backup must have been taken on or before this time to match the filter.",
                    "format": "date-time",
                    "type": "string"
                },
                "max_results": {
                    "description": "Limit result to a max count of most recent backups.",
                    "format": "int64",
                    "type": "integer"
                },
                "start_timestamp": {
                    "description": "Backup must have been taken on or after this time to match the filter.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "appliance.recovery.backup.system_name.archive.info": {
            "properties": {
                "comment": {
                    "description": "Custom comment added by the user for this backup.",
                    "type": "string"
                },
                "location": {
                    "description": "Backup location URL.",
                    "format": "uri",
                    "type": "string"
                },
                "parts": {
                    "description": "List of parts included in the backup.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "system_name": {
                    "description": "The system name identifier of the appliance represented by the backup.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time when this backup was completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the appliance represented by the backup.",
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "location",
                "parts",
                "version",
                "system_name",
                "comment"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.system_name.archive.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.summary"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.system_name.archive.summary": {
            "properties": {
                "archive": {
                    "description": "Backup archive identifier.",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment added by the user for this backup.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time when this backup was started.",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the appliance represented by the backup archive.",
                    "type": "string"
                }
            },
            "required": [
                "archive",
                "timestamp",
                "version",
                "comment"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.system_name.archive_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.system_name.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup.validate_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.return_result"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.backup_validate": {
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.backup.backup_request",
                    "description": "BackupRequest Structure"
                }
            },
            "required": [
                "piece"
            ],
            "type": "object"
        },
        "appliance.recovery.reconciliation.job.create_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.reconciliation.job.create_spec": {
            "properties": {
                "ignore_warnings": {
                    "description": "Flag indicating whether warnings should be ignored during reconciliation.",
                    "type": "boolean"
                },
                "sso_admin_user_name": {
                    "description": "Administrators username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "Password for SSO admin user.",
                    "format": "password",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "appliance.recovery.reconciliation.job.info": {
            "properties": {
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the operation associated with the task."
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "object"
                },
                "messages": {
                    "description": "A list of localized messages.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "operation": {
                    "description": "Name of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "progress": {
                    "description": "The progress of the job as a percentage.",
                    "format": "int64",
                    "type": "integer"
                },
                "service": {
                    "description": "Name of the service containing the operation.",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.status",
                    "description": "Status of the operation associated with the task."
                },
                "target": {
                    "$ref": "#/definitions/vapi.std.dynamic_ID",
                    "description": "Identifier of the target resource the operation modifies."
                }
            },
            "required": [
                "description",
                "service",
                "operation",
                "status",
                "messages",
                "progress"
            ],
            "type": "object"
        },
        "appliance.recovery.reconciliation.job.status": {
            "description": "The {@name Status} {@term enumerated type} defines the status values that can be reported for an operation.",
            "enum": [
                "NONE",
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
            ],
            "type": "string"
        },
        "appliance.recovery.reconciliation.job_create": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.create_spec",
                    "description": "CreateSpec Structure"
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "appliance.recovery.reconciliation.job_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.backup_restore_process_state": {
            "description": "{@name BackupRestoreProcessState} {@term enumerated type} Defines state of backup/restore process",
            "enum": [
                "FAILED",
                "INPROGRESS",
                "NONE",
                "SUCCEEDED"
            ],
            "type": "string"
        },
        "appliance.recovery.restore.job.cancel_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.return_result"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.create_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_job_status"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.localizable_message": {
            "properties": {
                "args": {
                    "description": "nested data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.location_type": {
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ],
            "type": "string"
        },
        "appliance.recovery.restore.job.restore_job_status": {
            "properties": {
                "messages": {
                    "description": "list of messages",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.job.localizable_message"
                    },
                    "type": "array"
                },
                "progress": {
                    "description": "percentage complete",
                    "format": "int64",
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.backup_restore_process_state",
                    "description": "process state"
                }
            },
            "required": [
                "state",
                "messages",
                "progress"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.restore_request": {
            "properties": {
                "backup_password": {
                    "description": "a password for a backup piece",
                    "format": "password",
                    "type": "string"
                },
                "ignore_warnings": {
                    "description": "The flag to ignore warnings during restore",
                    "type": "boolean"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "format": "password",
                    "type": "string"
                },
                "location_type": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.location_type",
                    "description": "a type of location"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "sso_admin_user_name": {
                    "description": "Administrators Username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "The password for SSO admin user.",
                    "format": "password",
                    "type": "string"
                }
            },
            "required": [
                "location_type",
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.return_result": {
            "properties": {
                "messages": {
                    "description": "List of messages",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.job.localizable_message"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.return_status",
                    "description": "Check status"
                }
            },
            "required": [
                "status",
                "messages"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job.return_status": {
            "description": "{@name ReturnStatus} {@term enumerated type} Defines the state of precheck",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ],
            "type": "string"
        },
        "appliance.recovery.restore.job_create": {
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_request",
                    "description": "RestoreRequest Structure"
                }
            },
            "required": [
                "piece"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.job_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_job_status"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.localizable_message": {
            "properties": {
                "args": {
                    "description": "nested data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.location_type": {
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ],
            "type": "string"
        },
        "appliance.recovery.restore.metadata": {
            "properties": {
                "applicable": {
                    "description": "Does the VCSA match the deployment type, network properties            and version of backed up VC",
                    "type": "boolean"
                },
                "boxname": {
                    "description": "Box name is PNID/ FQDN etc",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment",
                    "type": "string"
                },
                "messages": {
                    "description": "Any messages if the backup is not aplicable",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.localizable_message"
                    },
                    "type": "array"
                },
                "parts": {
                    "description": "List of parts included in the backup.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sso_login_required": {
                    "description": "Is SSO login required for the vCenter server.",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "Time when this backup was completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "VCSA version",
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "parts",
                "version",
                "boxname",
                "comment",
                "applicable",
                "messages"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.restore_request": {
            "properties": {
                "backup_password": {
                    "description": "a password for a backup piece",
                    "format": "password",
                    "type": "string"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "format": "password",
                    "type": "string"
                },
                "location_type": {
                    "$ref": "#/definitions/appliance.recovery.restore.location_type",
                    "description": "a type of location"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "sso_admin_user_name": {
                    "description": "Administrators username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "The password for SSO admin user.",
                    "format": "password",
                    "type": "string"
                }
            },
            "required": [
                "location_type",
                "location"
            ],
            "type": "object"
        },
        "appliance.recovery.restore.validate_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.metadata"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.recovery.restore_validate": {
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.restore.restore_request",
                    "description": "RestoreRequest Structure"
                }
            },
            "required": [
                "piece"
            ],
            "type": "object"
        },
        "appliance.vmon.service.health": {
            "description": "The Service.Health enumerated type defines the possible values for health of a service.",
            "enum": [
                "DEGRADED",
                "HEALTHY",
                "HEALTHY_WITH_WARNINGS"
            ],
            "type": "string"
        },
        "appliance.vmon.service.info": {
            "properties": {
                "description_key": {
                    "description": "Service description key. Can be used to lookup resource bundle",
                    "type": "string"
                },
                "health": {
                    "$ref": "#/definitions/appliance.vmon.service.health",
                    "description": "Health of service.\nThis field is optional and it is only relevant when the value of Service.Info.state is STARTED."
                },
                "health_messages": {
                    "description": "Localizable messages associated with the health of the service\nThis field is optional and it is only relevant when the value of Service.Info.state is STARTED.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "name_key": {
                    "description": "Service name key. Can be used to lookup resource bundle",
                    "type": "string"
                },
                "startup_type": {
                    "$ref": "#/definitions/appliance.vmon.service.startup_type",
                    "description": "Startup Type."
                },
                "state": {
                    "$ref": "#/definitions/appliance.vmon.service.state",
                    "description": "Running State."
                }
            },
            "required": [
                "name_key",
                "description_key",
                "startup_type",
                "state"
            ],
            "type": "object"
        },
        "appliance.vmon.service.list_details_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.vmon.service.info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.vmon.service.startup_type": {
            "description": "The Service.StartupType enumerated type defines valid Startup Type for services managed by vMon.",
            "enum": [
                "MANUAL",
                "AUTOMATIC",
                "DISABLED"
            ],
            "type": "string"
        },
        "appliance.vmon.service.state": {
            "description": "The Service.State enumerated type defines valid Run State for services.",
            "enum": [
                "STARTING",
                "STOPPING",
                "STARTED",
                "STOPPED"
            ],
            "type": "string"
        },
        "appliance.vmon.service.update_spec": {
            "properties": {
                "startup_type": {
                    "$ref": "#/definitions/appliance.vmon.service.startup_type",
                    "description": "Startup Type\nIf unspecified, leaves value unchanged."
                }
            },
            "type": "object"
        },
        "appliance.vmon.service_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.vmon.service.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "appliance.vmon.service_update": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.vmon.service.update_spec",
                    "description": "Service Update specification."
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.consolecli_resp": {
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.consolecli_set": {
            "properties": {
                "enabled": {
                    "description": "Console-based controlled CLI is enabled.",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.dcui_resp": {
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.dcui_set": {
            "properties": {
                "enabled": {
                    "description": "DCUI is enabled.",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.shell.shell_config": {
            "properties": {
                "enabled": {
                    "description": "Enabled can be set to true or false",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "The timeout (in seconds) specifies how long you enable the Shell access. The maximum timeout is 86400 seconds(1 day).",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "enabled",
                "timeout"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.shell_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.access.shell.shell_config"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.shell_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.access.shell.shell_config",
                    "description": "Shell configuration"
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.ssh_resp": {
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.access.ssh_set": {
            "properties": {
                "enabled": {
                    "description": "SSH-based controlled CLI is enabled.",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.applmgmt_resp": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.databasestorage.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines service health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.databasestorage_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.databasestorage.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.load.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.load_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.load.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.mem.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.mem_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.mem.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.messages_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.softwarepackages.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.softwarepackages_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.softwarepackages.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.storage.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.storage_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.storage.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.swap.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.swap_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.swap.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.system.health_level": {
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ],
            "type": "string"
        },
        "com.vmware.appliance.health.system.lastcheck_resp": {
            "properties": {
                "value": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.health.system_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.system.health_level"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.config": {
            "properties": {
                "days_after_password_expiration": {
                    "description": "Number of days after password expiration before the account will be locked",
                    "format": "int64",
                    "type": "integer"
                },
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "full_name": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "inactive_after_password_expiration": {
                    "description": "Flag indicating if the account will be locked after password expiration",
                    "type": "boolean"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "old_password": {
                    "description": "Old password of the user (required in case of the password change, not required if superAdmin user changes the password of the other user)",
                    "format": "password",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "format": "password",
                    "type": "string"
                },
                "password_expires": {
                    "description": "Flag indicating if the account password expires",
                    "type": "boolean"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "format": "date-time",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "password",
                "roles"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.info": {
            "properties": {
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "fullname": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "has_password": {
                    "description": "Is the user password set.",
                    "type": "boolean"
                },
                "inactive_at": {
                    "description": "Date and time account will be locked after password expiration.",
                    "format": "date-time",
                    "type": "string"
                },
                "last_password_change": {
                    "description": "Date and time password was changed.",
                    "format": "date-time",
                    "type": "string"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "format": "date-time",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "roles",
                "enabled",
                "has_password"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.policy.info": {
            "properties": {
                "max_days": {
                    "description": "Maximum number of days a password may be used. If the password is older than this, a password change will be forced.",
                    "format": "int64",
                    "type": "integer"
                },
                "min_days": {
                    "description": "Minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected.",
                    "format": "int64",
                    "type": "integer"
                },
                "warn_days": {
                    "description": "Number of days warning given before a password expires. A zero means warning is given only upon the day of expiration.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.policy_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.local_accounts.policy.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.policy_set": {
            "properties": {
                "policy": {
                    "$ref": "#/definitions/appliance.local_accounts.policy.info",
                    "description": "Global password policy"
                }
            },
            "required": [
                "policy"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts.update_config": {
            "properties": {
                "days_after_password_expiration": {
                    "description": "Number of days after password expiration before the account will be locked",
                    "format": "int64",
                    "type": "integer"
                },
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "full_name": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "inactive_after_password_expiration": {
                    "description": "Flag indicating if the account will be locked after password expiration",
                    "type": "boolean"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "format": "int64",
                    "type": "integer"
                },
                "old_password": {
                    "description": "Old password of the user (required in case of the password change, not required if superAdmin user changes the password of the other user)",
                    "format": "password",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "format": "password",
                    "type": "string"
                },
                "password_expires": {
                    "description": "Flag indicating if the account password expires",
                    "type": "boolean"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "format": "date-time",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "com.vmware.appliance.local_accounts_create": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.local_accounts.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.local_accounts_update": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.update_config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding.config": {
            "properties": {
                "hostname": {
                    "description": "FQDN or IP address of the logging server to which messages are forwarded.",
                    "type": "string"
                },
                "port": {
                    "description": "The port on which the remote logging server is listening for forwarded log messages.",
                    "format": "int64",
                    "type": "integer"
                },
                "protocol": {
                    "$ref": "#/definitions/appliance.logging.forwarding.protocol",
                    "description": "Transport protocol used to forward log messages."
                }
            },
            "required": [
                "hostname",
                "port",
                "protocol"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding.connection_status": {
            "properties": {
                "hostname": {
                    "description": "FQDN or IP address of the configured remote logging servers.",
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Message associated with the state of the configured remote logging server."
                },
                "state": {
                    "$ref": "#/definitions/appliance.logging.forwarding.connection_status.state",
                    "description": "State of the configured remote logging server."
                }
            },
            "required": [
                "hostname",
                "state"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding.connection_status.state": {
            "description": "The {@name State} {@term enumerated type} defines the state values that a remote logging server can be in.",
            "enum": [
                "UP",
                "DOWN",
                "UNKNOWN"
            ],
            "type": "string"
        },
        "com.vmware.appliance.logging.forwarding.protocol": {
            "description": "The {@name Protocol} {@term enumerated type} defines transport protocols for outbound log messages.",
            "enum": [
                "TLS",
                "UDP",
                "TCP"
            ],
            "type": "string"
        },
        "com.vmware.appliance.logging.forwarding.test_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.connection_status"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.config"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding_set": {
            "properties": {
                "cfg_list": {
                    "description": "The cfgList is a list of Config structure that contains the log message forwarding rules in terms of the host, port, protocol of the log message.",
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.config"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cfg_list"
            ],
            "type": "object"
        },
        "com.vmware.appliance.logging.forwarding_test": {
            "properties": {
                "send_test_message": {
                    "description": "Flag specifying whether a default test message should be sent to the configured logging servers.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "com.vmware.appliance.monitoring.function_type": {
            "description": "{@name FunctionType} {@term enumerated type} Defines aggregation function",
            "enum": [
                "COUNT",
                "MAX",
                "AVG",
                "MIN"
            ],
            "type": "string"
        },
        "com.vmware.appliance.monitoring.interval_type": {
            "description": "{@name IntervalType} {@term enumerated type} Defines interval between the values in hours and mins,                    for which aggregation will apply",
            "enum": [
                "MINUTES30",
                "HOURS2",
                "MINUTES5",
                "DAY1",
                "HOURS6"
            ],
            "type": "string"
        },
        "com.vmware.appliance.monitoring.monitored_item_data_request": {
            "properties": {
                "end_time": {
                    "description": "End time in UTC",
                    "format": "date-time",
                    "type": "string"
                },
                "function": {
                    "$ref": "#/definitions/appliance.monitoring.function_type",
                    "description": "aggregation function"
                },
                "interval": {
                    "$ref": "#/definitions/appliance.monitoring.interval_type",
                    "description": "interval between values in hours, minutes"
                },
                "names": {
                    "description": "monitored item IDs Ex: CPU, MEMORY",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "start_time": {
                    "description": "Start time in UTC",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "names",
                "interval",
                "function",
                "start_time",
                "end_time"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.DNS_info": {
            "properties": {
                "hostname": {
                    "description": "Hostname.",
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/appliance.networking.DNS_info.DNS_mode",
                    "description": "DNS mode."
                },
                "servers": {
                    "description": "Servers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "mode",
                "hostname",
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.DNS_info.DNS_mode": {
            "description": "The {@name DnsMode} {@term enumerated type} describes the source of DNS servers.",
            "enum": [
                "DHCP",
                "STATIC"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.change$task_resp": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.change_spec": {
            "properties": {
                "SSO_password": {
                    "description": "vCenter Server SSO administrator Password",
                    "format": "password",
                    "type": "string"
                },
                "SSO_user": {
                    "description": "vCenter Server SSO administrator username",
                    "type": "string"
                },
                "dns": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config",
                    "description": "DNS Configuration to set for the machine"
                },
                "hostname": {
                    "description": "New hostname to assign to the management network of vCenter appliance",
                    "type": "string"
                },
                "ipv4": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.config",
                    "description": "IPv4 Configuration to set for the machine"
                },
                "ipv6": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.config",
                    "description": "IPv6 Configuration to set for the machine"
                }
            },
            "required": [
                "hostname",
                "SSO_user",
                "SSO_password"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.domains.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.domains_add": {
            "properties": {
                "domain": {
                    "description": "Domain to add.",
                    "type": "string"
                }
            },
            "required": [
                "domain"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.domains_set": {
            "properties": {
                "domains": {
                    "description": "List of domains.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "domains"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname.message": {
            "properties": {
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/appliance.networking.dns.hostname.message_status",
                    "description": "result of the test"
                }
            },
            "required": [
                "message",
                "result"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname.message_status": {
            "description": "{@name MessageStatus} {@term enumerated type} Individual test result",
            "enum": [
                "failure",
                "success"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.dns.hostname.test_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.hostname.test_status_info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname.test_status": {
            "description": "{@name TestStatus} {@term enumerated type} Health indicator",
            "enum": [
                "orange",
                "green",
                "red"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.dns.hostname.test_status_info": {
            "properties": {
                "messages": {
                    "description": "messages",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.dns.hostname.message"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/appliance.networking.dns.hostname.test_status",
                    "description": "Overall status of tests run."
                }
            },
            "required": [
                "status",
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname_resp": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname_set": {
            "properties": {
                "name": {
                    "description": "FQDN.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.hostname_test": {
            "properties": {
                "name": {
                    "description": "FQDN.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers.DNS_server_config": {
            "properties": {
                "mode": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_mode",
                    "description": "Define how to determine the DNS servers. Leave the servers argument empty if the mode argument is \"DHCP\". Set the servers argument to a comma-separated list of DNS servers if the mode argument is \"static\". The DNS server are assigned from the specified list."
                },
                "servers": {
                    "description": "List of the currently used DNS servers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "mode",
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers.DNS_server_mode": {
            "description": "{@name DNSServerMode} {@term enumerated type} Describes DNS Server source (DHCP,static)",
            "enum": [
                "dhcp",
                "is_static"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.dns.servers.message": {
            "properties": {
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.message_status",
                    "description": "result of the test"
                }
            },
            "required": [
                "message",
                "result"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers.message_status": {
            "description": "{@name MessageStatus} {@term enumerated type} Individual test result",
            "enum": [
                "failure",
                "success"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.dns.servers.test_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.test_status_info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers.test_status": {
            "description": "{@name TestStatus} {@term enumerated type} Health indicator",
            "enum": [
                "orange",
                "green",
                "red"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.dns.servers.test_status_info": {
            "properties": {
                "messages": {
                    "description": "messages",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.dns.servers.message"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.test_status",
                    "description": "Overall status of tests run."
                }
            },
            "required": [
                "status",
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers_add": {
            "properties": {
                "server": {
                    "description": "DNS server.",
                    "type": "string"
                }
            },
            "required": [
                "server"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config",
                    "description": "DNS server configuration."
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.dns.servers_test": {
            "properties": {
                "servers": {
                    "description": "DNS servers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.firewall.inbound.policy": {
            "description": "{@name Policy} {@term enumerated type} Defines firewall rule policies.",
            "enum": [
                "IGNORE",
                "ACCEPT",
                "REJECT",
                "RETURN"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.firewall.inbound.rule": {
            "properties": {
                "address": {
                    "description": "IPv4 or IPv6 address.",
                    "type": "string"
                },
                "interface_name": {
                    "description": "The interface to which this rule applies. An empty string indicates that the rule applies to all interfaces.",
                    "type": "string"
                },
                "policy": {
                    "$ref": "#/definitions/appliance.networking.firewall.inbound.policy",
                    "description": "The allow or deny policy of this rule."
                },
                "prefix": {
                    "description": "CIDR prefix used to mask address. For example, an IPv4 prefix of 24 ignores the low-order 8 bits of address.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "prefix",
                "policy"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.firewall.inbound_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.networking.firewall.inbound.rule"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.firewall.inbound_set": {
            "properties": {
                "rules": {
                    "description": "List of address-based firewall rules.",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.firewall.inbound.rule"
                    },
                    "type": "array"
                }
            },
            "required": [
                "rules"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.info": {
            "properties": {
                "dns": {
                    "$ref": "#/definitions/appliance.networking.DNS_info",
                    "description": "DNS configuration."
                },
                "interfaces": {
                    "description": "Interface configuration as a key-value map where key is a network interface name, for example, \"nic0\".",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "dns",
                "interfaces"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.interface_info": {
            "properties": {
                "ipv4": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.info",
                    "description": "IPv4 Address information."
                },
                "ipv6": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.info",
                    "description": "IPv6 Address information."
                },
                "mac": {
                    "description": "MAC address. For example 00:0C:29:94:BB:5A.",
                    "type": "string"
                },
                "name": {
                    "description": "Interface name, for example, \"nic0\", \"nic1\".",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/appliance.networking.interfaces.interface_status",
                    "description": "Interface status."
                }
            },
            "required": [
                "name",
                "status",
                "mac"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.interface_status": {
            "description": "{@name InterfaceStatus} {@term enumerated type} Defines interface status",
            "enum": [
                "down",
                "up"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.interfaces.ipv4.config": {
            "properties": {
                "address": {
                    "description": "The IPv4 address, for example, \"10.20.80.191\".",
                    "type": "string"
                },
                "default_gateway": {
                    "description": "The IPv4 address of the default gateway. This configures the global default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.mode",
                    "description": "The Address assignment mode."
                },
                "prefix": {
                    "description": "The IPv4 CIDR prefix, for example, 24.  See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv4.info": {
            "properties": {
                "address": {
                    "description": "The IPv4 address, for example, \"10.20.80.191\".",
                    "type": "string"
                },
                "configurable": {
                    "description": "The specified network interface is configurable or not.",
                    "type": "boolean"
                },
                "default_gateway": {
                    "description": "The IPv4 address of the default gateway. This configures the global default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.mode",
                    "description": "The Address assignment mode."
                },
                "prefix": {
                    "description": "The IPv4 CIDR prefix, for example, 24.  See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "configurable",
                "mode"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv4.mode": {
            "description": "The {@name Mode} {@term enumerated type} defines different IPv4 address assignment modes.",
            "enum": [
                "DHCP",
                "STATIC",
                "UNCONFIGURED"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.interfaces.ipv4_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv4_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.config",
                    "description": "The IPv4 Network configuration to set."
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.address": {
            "properties": {
                "address": {
                    "description": "The IPv6 address, for example, fc00:10:20:83:20c:29ff:fe94:bb5a.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The IPv6 CIDR prefix, for example, 64.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "prefix"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.address_info": {
            "properties": {
                "address": {
                    "description": "The IPv6 address, for example, fc00:10:20:83:20c:29ff:fe94:bb5a.",
                    "type": "string"
                },
                "origin": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.origin",
                    "description": "The Origin of the IPv6 address. For more information, see RFC 4293."
                },
                "prefix": {
                    "description": "The IPv6 CIDR prefix, for example, 64.",
                    "format": "int64",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.status",
                    "description": "The Status of the IPv6 address. For more information, see RFC 4293."
                }
            },
            "required": [
                "origin",
                "status",
                "address",
                "prefix"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.config": {
            "properties": {
                "addresses": {
                    "description": "The list of addresses to be statically assigned.",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.ipv6.address"
                    },
                    "type": "array"
                },
                "autoconf": {
                    "description": "An address will be assigned by Stateless Address Autoconfiguration (SLAAC).",
                    "type": "boolean"
                },
                "default_gateway": {
                    "description": "The default gateway for static IP address assignment. This configures the global IPv6 default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                },
                "dhcp": {
                    "description": "An address will be assigned by a DHCP server.",
                    "type": "boolean"
                }
            },
            "required": [
                "dhcp",
                "autoconf",
                "addresses",
                "default_gateway"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.info": {
            "properties": {
                "addresses": {
                    "description": "List of addresses with their origins and statuses.",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.ipv6.address_info"
                    },
                    "type": "array"
                },
                "autoconf": {
                    "description": "Stateless Address Autoconfiguration (SLAAC) is on.",
                    "type": "boolean"
                },
                "configurable": {
                    "description": "Is NIC configurable or not.",
                    "type": "boolean"
                },
                "default_gateway": {
                    "description": "The default gateway for static IP address assignment. This configures the global IPv6 default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                },
                "dhcp": {
                    "description": "DHCP is on.",
                    "type": "boolean"
                }
            },
            "required": [
                "dhcp",
                "autoconf",
                "addresses",
                "default_gateway",
                "configurable"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.origin": {
            "description": "The {@name Origin} {@term enumerated type} defines IPv6 address origin values.",
            "enum": [
                "DHCP",
                "RANDOM",
                "MANUAL",
                "LINKLAYER",
                "OTHER"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.interfaces.ipv6.status": {
            "description": "The {@name Status} {@term enumerated type} defines IPv6 address status values. See RFC 4293.",
            "enum": [
                "TENTATIVE",
                "UNKNOWN",
                "INACCESSIBLE",
                "INVALID",
                "DUPLICATE",
                "PREFERRED",
                "DEPRECATED",
                "OPTIMISTIC"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.interfaces.ipv6_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.ipv6_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.config",
                    "description": "The IPv6 configuration."
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.interfaces_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.no_proxy_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.no_proxy_set": {
            "properties": {
                "servers": {
                    "description": "List of strings representing servers to bypass proxy. A server can be a FQDN, IP address, FQDN:port or IP:port combinations.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy.config": {
            "properties": {
                "enabled": {
                    "description": "In the result of the {@name #get} and {@name #list} {@term operations} this {@term field} indicates whether proxying is enabled for a particular protocol. In the input to the {@name test} and {@name set} {@term operations} this {@term field} specifies whether proxying should be enabled for a particular protocol.",
                    "type": "boolean"
                },
                "password": {
                    "description": "Password for proxy server.",
                    "format": "password",
                    "type": "string"
                },
                "port": {
                    "description": "Port to connect to the proxy server. In a 'get' call, indicates the port connected to the proxy server. In a 'set' call, specifies the port to connect to the proxy server. A value of -1 indicates the default port.",
                    "format": "int64",
                    "type": "integer"
                },
                "server": {
                    "description": "URL of the proxy server",
                    "type": "string"
                },
                "username": {
                    "description": "Username for proxy server.",
                    "type": "string"
                }
            },
            "required": [
                "server",
                "port",
                "enabled"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "$ref": "#/definitions/appliance.networking.proxy.protocol"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.networking.proxy.config"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy.protocol": {
            "description": "{@name Protocol} {@term enumerated type} defines the protocols for which proxying is supported.",
            "enum": [
                "HTTP",
                "HTTPS",
                "FTP"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.proxy.server_status": {
            "description": "{@name ServerStatus} {@term enumerated type} defines the status of the server associated with the test run.",
            "enum": [
                "SERVER_REACHABLE",
                "SERVER_UNREACHABLE"
            ],
            "type": "string"
        },
        "com.vmware.appliance.networking.proxy.test_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.proxy.test_result"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy.test_result": {
            "properties": {
                "message": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Message associated with status."
                },
                "status": {
                    "$ref": "#/definitions/appliance.networking.proxy.server_status",
                    "description": "Status of the proxy server indicating whether the proxy server is reachable."
                }
            },
            "required": [
                "status",
                "message"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.proxy.config"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy_set": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.proxy.config",
                    "description": "Proxy configuration for the specific protocol."
                }
            },
            "required": [
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.proxy_test": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.proxy.config",
                    "description": "Proxy configuration to test."
                },
                "host": {
                    "description": "A hostname, IPv4 or Ipv6 address.",
                    "type": "string"
                }
            },
            "required": [
                "host",
                "config"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking.update_spec": {
            "properties": {
                "ipv6_enabled": {
                    "description": "IPv6 Enabled or not",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "com.vmware.appliance.networking_change$task": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.networking.change_spec",
                    "description": "Information required to change the hostname."
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.networking_update": {
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.networking.update_spec",
                    "description": "update spec with optional boolean value"
                }
            },
            "required": [
                "spec"
            ],
            "type": "object"
        },
        "com.vmware.appliance.notification": {
            "properties": {
                "id": {
                    "description": "The notification id.",
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "The notification message."
                },
                "resolution": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "The resolution message, if any."
                },
                "time": {
                    "description": "The time the notification was raised/found.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "message"
            ],
            "type": "object"
        },
        "com.vmware.appliance.notifications": {
            "properties": {
                "errors": {
                    "description": "Error notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    },
                    "type": "array"
                },
                "info": {
                    "description": "Info notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    },
                    "type": "array"
                },
                "warnings": {
                    "description": "Warning notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "com.vmware.appliance.ntp.localizable_message": {
            "properties": {
                "args": {
                    "description": "nested data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "com.vmware.appliance.ntp.server_status": {
            "description": "{@name ServerStatus} {@term enumerated type} Status of server during test",
            "enum": [
                "SERVER_REACHABLE",
                "SERVER_UNREACHABLE"
            ],
            "type": "string"
        },
        "com.vmware.appliance.ntp.test_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.ntp.test_run_status"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.ntp.test_run_status": {
            "properties": {
                "message": {
                    "$ref": "#/definitions/appliance.ntp.localizable_message",
                    "description": "Message associated with status"
                },
                "server": {
                    "description": "Server name associated with the test run.",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/appliance.ntp.server_status",
                    "description": "Server status"
                }
            },
            "required": [
                "server",
                "status",
                "message"
            ],
            "type": "object"
        },
        "com.vmware.appliance.ntp_resp": {
            "properties": {
                "value": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.ntp_set": {
            "properties": {
                "servers": {
                    "description": "List of host names or ip addresses of ntp servers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.ntp_test": {
            "properties": {
                "servers": {
                    "description": "List of host names or IP addresses of NTP servers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "servers"
            ],
            "type": "object"
        },
        "com.vmware.appliance.recovery.info": {
            "properties": {
                "supported": {
                    "description": "Is recovery supported in this appliance.",
                    "type": "boolean"
                }
            },
            "required": [
                "supported"
            ],
            "type": "object"
        },
        "com.vmware.appliance.recovery_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.services.info": {
            "properties": {
                "description": {
                    "description": "Service description",
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/appliance.services.state",
                    "description": "Running State"
                }
            },
            "required": [
                "description",
                "state"
            ],
            "type": "object"
        },
        "com.vmware.appliance.services.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.services.info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.services.state": {
            "description": "The {@name State} {@term enumerated type} defines valid Run State for services.",
            "enum": [
                "STARTING",
                "STOPPING",
                "STARTED",
                "STOPPED"
            ],
            "type": "string"
        },
        "com.vmware.appliance.services_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.services.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.shutdown.shutdown_config": {
            "properties": {
                "action": {
                    "description": "The pending shutdown operation. The string values for pending operations can be 'poweroff', 'reboot' or ''.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason behind the shutdown action",
                    "type": "string"
                },
                "shutdown_time": {
                    "description": "Shutdown time.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "action",
                "reason"
            ],
            "type": "object"
        },
        "com.vmware.appliance.shutdown_poweroff": {
            "properties": {
                "delay": {
                    "description": "Minutes after which poweroff should start. If 0 is specified, poweroff will start immediately.",
                    "format": "int64",
                    "type": "integer"
                },
                "reason": {
                    "description": "Reason for peforming poweroff.",
                    "type": "string"
                }
            },
            "required": [
                "delay",
                "reason"
            ],
            "type": "object"
        },
        "com.vmware.appliance.shutdown_reboot": {
            "properties": {
                "delay": {
                    "description": "Minutes after which reboot should start. If 0 is specified, reboot will start immediately.",
                    "format": "int64",
                    "type": "integer"
                },
                "reason": {
                    "description": "Reason for peforming reboot.",
                    "type": "string"
                }
            },
            "required": [
                "delay",
                "reason"
            ],
            "type": "object"
        },
        "com.vmware.appliance.shutdown_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.shutdown.shutdown_config"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.subtask_info": {
            "properties": {
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the operation associated with the task."
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "object"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/definitions/cis.task.progress",
                    "description": "Progress of the operation."
                },
                "result": {
                    "$ref": "#/definitions/appliance.notifications",
                    "description": "Result of the operation. If an operation reports partial results before it completes, this {@term field} could be {@term set} before the {@link CommonInfo#status} has the value {@link Status#SUCCEEDED}. The value could change as the operation progresses."
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/cis.task.status",
                    "description": "Status of the operation associated with the task."
                },
                "target": {
                    "$ref": "#/definitions/vapi.std.dynamic_ID",
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.storage.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.system.storage.storage_mapping"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.storage.resize_ex_resp": {
            "properties": {
                "value": {
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.system.storage.storage_change"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.storage.storage_change": {
            "properties": {
                "new_size": {
                    "description": "Nedw size of the partition in MB.",
                    "format": "int64",
                    "type": "integer"
                },
                "old_size": {
                    "description": "Original size of the partition in MB.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "old_size",
                "new_size"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.storage.storage_mapping": {
            "properties": {
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of partition"
                },
                "disk": {
                    "description": "The disk number in the vSphere Web Client.",
                    "type": "string"
                },
                "partition": {
                    "description": "Storage partition name.",
                    "type": "string"
                }
            },
            "required": [
                "disk",
                "partition"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.time.system_time_struct": {
            "properties": {
                "date": {
                    "description": "date format: Thu 07-31-2014",
                    "type": "string"
                },
                "seconds_since_epoch": {
                    "description": "seconds since the epoch",
                    "format": "double",
                    "type": "number"
                },
                "time": {
                    "description": "time format: 18:18:32",
                    "type": "string"
                },
                "timezone": {
                    "description": "timezone",
                    "type": "string"
                }
            },
            "required": [
                "seconds_since_epoch",
                "date",
                "time",
                "timezone"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.time.timezone_resp": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.time.timezone_set": {
            "properties": {
                "name": {
                    "description": "Time zone name.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.time_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.system.time.system_time_struct"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.uptime_resp": {
            "properties": {
                "value": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.version.version_struct": {
            "properties": {
                "build": {
                    "description": "Appliance build number.",
                    "type": "string"
                },
                "install_time": {
                    "description": "Display the date and time when this system was first installed. Value will not change on subsequent updates.",
                    "type": "string"
                },
                "product": {
                    "description": "Appliance name.",
                    "type": "string"
                },
                "releasedate": {
                    "description": "Release date of patch (empty string, if the appliance has not been patched)",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of patch (empty string, if the appliance has not been patched)",
                    "type": "string"
                },
                "type": {
                    "description": "Type of product. Same product can have different deployment options, which is represented by type.",
                    "type": "string"
                },
                "version": {
                    "description": "Appliance version.",
                    "type": "string"
                }
            },
            "required": [
                "version",
                "product",
                "build",
                "type",
                "summary",
                "releasedate",
                "install_time"
            ],
            "type": "object"
        },
        "com.vmware.appliance.system.version_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.system.version.version_struct"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.task_info": {
            "properties": {
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the operation associated with the task."
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "object"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/definitions/cis.task.progress",
                    "description": "Progress of the task."
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/cis.task.status",
                    "description": "Status of the operation associated with the task."
                },
                "subtask_order": {
                    "description": "List of tasks that make up this appliance task in the order they are being run.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subtasks": {
                    "description": "Information about the subtasks that this appliance task consists of.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.subtask_info"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "#/definitions/vapi.std.dynamic_ID",
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "subtask_order",
                "subtasks",
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ],
            "type": "object"
        },
        "com.vmware.appliance.timesync.time_sync_mode": {
            "description": "The {@name TimeSyncMode} {@term enumerated type} defines time synchronization modes",
            "enum": [
                "DISABLED",
                "NTP",
                "HOST"
            ],
            "type": "string"
        },
        "com.vmware.appliance.timesync_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.timesync.time_sync_mode"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.timesync_set": {
            "properties": {
                "mode": {
                    "$ref": "#/definitions/appliance.timesync.time_sync_mode",
                    "description": "Time synchronization mode."
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.common_info.category": {
            "description": "The {@name Category} {@term enumerated type} defines update type",
            "enum": [
                "SECURITY",
                "FIX",
                "UPDATE",
                "UPGRADE"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.common_info.priority": {
            "description": "The {@name Priority} {@term enumerated type} defines the update installation priority recommendations.",
            "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.common_info.severity": {
            "description": "The {@name Severity} {@term enumerated type} defines the severity of the issues fixed in the update.",
            "enum": [
                "CRITICAL",
                "IMPORTANT",
                "MODERATE",
                "LOW"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.info": {
            "properties": {
                "latest_query_time": {
                    "description": "Timestamp of latest query to update repository.",
                    "format": "date-time",
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/appliance.update.state",
                    "description": "State of the appliance update."
                },
                "task": {
                    "$ref": "#/definitions/appliance.task_info",
                    "description": "The running or completed update task."
                },
                "version": {
                    "description": "Version of base appliance if state is UP_TO_DATE Version of update being staged or installed if state is INSTALL_IN_PROGRESS or STAGE_IN_PROGRESS Version of update staged if state is UPDATES_PENDING Version of update failed if state is INSTALL_FAILED or ROLLBACK_IN_PROGRESS",
                    "type": "string"
                }
            },
            "required": [
                "state",
                "version"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.info": {
            "properties": {
                "contents": {
                    "description": "List of the 1. issues addressed since previous/current version 2. new features/improvements",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\""
                },
                "eulas": {
                    "description": "List of EULAs. This list has multiple entries and can be dynamic based on what we are actually installing.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "priority": {
                    "$ref": "#/definitions/appliance.update.common_info.priority",
                    "description": "Update priority"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "release_date": {
                    "description": "Update release date.",
                    "format": "date-time",
                    "type": "string"
                },
                "services_will_be_stopped": {
                    "description": "List of the services that will be stopped and restarted during the update installation.",
                    "items": {
                        "$ref": "#/definitions/appliance.update.service_info"
                    },
                    "type": "array"
                },
                "severity": {
                    "$ref": "#/definitions/appliance.update.common_info.severity",
                    "description": "Update severity"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "format": "int64",
                    "type": "integer"
                },
                "staged": {
                    "description": "Is the update staged",
                    "type": "boolean"
                },
                "update_type": {
                    "$ref": "#/definitions/appliance.update.common_info.category",
                    "description": "Update category"
                }
            },
            "required": [
                "contents",
                "services_will_be_stopped",
                "eulas",
                "staged",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.list_resp": {
            "properties": {
                "value": {
                    "items": {
                        "$ref": "#/definitions/appliance.update.summary"
                    },
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.precheck_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.pending.precheck_result"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.precheck_result": {
            "properties": {
                "check_time": {
                    "description": "Time when this precheck was run",
                    "format": "date-time",
                    "type": "string"
                },
                "estimated_time_to_install": {
                    "description": "Rough estimate of time to install the update (minutes).",
                    "format": "int64",
                    "type": "integer"
                },
                "estimated_time_to_rollback": {
                    "description": "Rough estimate of time to rollback the update (minutes).",
                    "format": "int64",
                    "type": "integer"
                },
                "issues": {
                    "$ref": "#/definitions/appliance.notifications",
                    "description": "Lists of the issues and warnings"
                },
                "questions": {
                    "description": "List of questions that must be answered to install the update.",
                    "items": {
                        "$ref": "#/definitions/appliance.update.pending.question"
                    },
                    "type": "array"
                },
                "reboot_required": {
                    "description": "Is reboot required to install the update.",
                    "type": "boolean"
                }
            },
            "required": [
                "check_time",
                "reboot_required",
                "questions"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.question": {
            "properties": {
                "allowed_values": {
                    "description": "List of allowed values",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "data_item": {
                    "description": "ID of the data item",
                    "type": "string"
                },
                "default_answer": {
                    "description": "Default answer",
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the item"
                },
                "regexp": {
                    "description": "Regexp to validate the input",
                    "type": "string"
                },
                "text": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Label for the item to be used in GUI/CLI"
                },
                "type": {
                    "$ref": "#/definitions/appliance.update.pending.question.input_type",
                    "description": "How this field shoudl be represented in GUI or CLI"
                }
            },
            "required": [
                "data_item",
                "text",
                "description",
                "type"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending.question.input_type": {
            "description": "The {@name InputType} {@term enumerated type} defines representation of field fields in GUI or CLI",
            "enum": [
                "PLAIN_TEXT",
                "BOOLEAN",
                "PASSWORD"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.pending.source_type": {
            "description": "The {@name SourceType} {@term enumerated type} defines the supported types of sources of updates.",
            "enum": [
                "LAST_CHECK",
                "LOCAL",
                "LOCAL_AND_ONLINE"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.pending.validate_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.notifications"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending_install": {
            "properties": {
                "user_data": {
                    "description": "map of user provided data with IDs",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "user_data"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.pending.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending_stage_and_install": {
            "properties": {
                "user_data": {
                    "description": "map of user provided data with IDs",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "user_data"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.pending_validate": {
            "properties": {
                "user_data": {
                    "description": "map of user provided data with IDs",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "user_data"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.policy.config": {
            "properties": {
                "auto_stage": {
                    "description": "Automatically stage the latest update if available.",
                    "type": "boolean"
                },
                "check_schedule": {
                    "description": "Schedule when the automatic check will be run.",
                    "items": {
                        "$ref": "#/definitions/appliance.update.policy.time"
                    },
                    "type": "array"
                },
                "custom_URL": {
                    "description": "Current appliance update repository URL.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the update repository",
                    "format": "password",
                    "type": "string"
                },
                "username": {
                    "description": "Username for the update repository",
                    "type": "string"
                }
            },
            "required": [
                "check_schedule",
                "auto_stage"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.policy.day_of_week": {
            "description": "The {@name DayOfWeek} {@term enumerated type} defines the set of days",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.policy.info": {
            "properties": {
                "auto_stage": {
                    "description": "Automatically stage the latest update if available.",
                    "type": "boolean"
                },
                "auto_update": {
                    "description": "Is the appliance updated automatically. If {@term set} the appliance may ignore the check schedule or auto-stage settings.",
                    "type": "boolean"
                },
                "check_schedule": {
                    "description": "Schedule when the automatic check will be run.",
                    "items": {
                        "$ref": "#/definitions/appliance.update.policy.time"
                    },
                    "type": "array"
                },
                "custom_URL": {
                    "description": "Current appliance update custom repository URL.",
                    "type": "string"
                },
                "default_URL": {
                    "description": "Current appliance update default repository URL.",
                    "type": "string"
                },
                "manual_control": {
                    "description": "Whether API client should allow the user to start update manually",
                    "type": "boolean"
                },
                "username": {
                    "description": "Username for the update repository",
                    "type": "string"
                }
            },
            "required": [
                "default_URL",
                "check_schedule",
                "auto_stage",
                "auto_update",
                "manual_control"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.policy.time": {
            "properties": {
                "day": {
                    "$ref": "#/definitions/appliance.update.policy.day_of_week",
                    "description": "weekday to check for updates."
                },
                "hour": {
                    "description": "Hour: 0-24",
                    "format": "int64",
                    "type": "integer"
                },
                "minute": {
                    "description": "Minute: 0-59",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "day",
                "hour",
                "minute"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.policy_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.policy.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.policy_set": {
            "properties": {
                "policy": {
                    "$ref": "#/definitions/appliance.update.policy.config",
                    "description": "Info structure containing the policy for the appliance update."
                }
            },
            "required": [
                "policy"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.service_info": {
            "properties": {
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Service description"
                },
                "service": {
                    "description": "Service ID",
                    "type": "string"
                }
            },
            "required": [
                "service",
                "description"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.staged.info": {
            "properties": {
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\""
                },
                "priority": {
                    "$ref": "#/definitions/appliance.update.common_info.priority",
                    "description": "Update priority"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "release_date": {
                    "description": "Update release date.",
                    "format": "date-time",
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/appliance.update.common_info.severity",
                    "description": "Update severity"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "format": "int64",
                    "type": "integer"
                },
                "staging_complete": {
                    "description": "Is staging complete",
                    "type": "boolean"
                },
                "update_type": {
                    "$ref": "#/definitions/appliance.update.common_info.category",
                    "description": "Update category"
                },
                "version": {
                    "description": "Version in form of X.Y.Z.P. e.g. 6.5.1.5400",
                    "type": "string"
                }
            },
            "required": [
                "staging_complete",
                "version",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.staged_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.staged.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update.state": {
            "description": "The {@name State} {@term enumerated type} defines the various states the appliance update can be in.",
            "enum": [
                "UP_TO_DATE",
                "UPDATES_PENDING",
                "STAGE_IN_PROGRESS",
                "INSTALL_IN_PROGRESS",
                "INSTALL_FAILED",
                "ROLLBACK_IN_PROGRESS"
            ],
            "type": "string"
        },
        "com.vmware.appliance.update.summary": {
            "properties": {
                "description": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\""
                },
                "priority": {
                    "$ref": "#/definitions/appliance.update.common_info.priority",
                    "description": "Update priority"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "release_date": {
                    "description": "Update release date.",
                    "format": "date-time",
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/appliance.update.common_info.severity",
                    "description": "Update severity"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "format": "int64",
                    "type": "integer"
                },
                "update_type": {
                    "$ref": "#/definitions/appliance.update.common_info.category",
                    "description": "Update category"
                },
                "version": {
                    "description": "Version in form of X.Y.Z.P. e.g. 6.5.1.5400",
                    "type": "string"
                }
            },
            "required": [
                "version",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ],
            "type": "object"
        },
        "com.vmware.appliance.update_resp": {
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.info"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "com.vmware.cis.task.progress": {
            "properties": {
                "completed": {
                    "description": "The amount of work completed for the operation. The value can only be incremented.",
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/vapi.std.localizable_message",
                    "description": "Message about the work progress."
                },
                "total": {
                    "description": "Total amount of the work for the operation.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "total",
                "completed",
                "message"
            ],
            "type": "object"
        },
        "com.vmware.cis.task.status": {
            "description": "The Status enumerated type defines the status values that can be reported for an operation.",
            "enum": [
                "PENDING",
                "RUNNING",
                "BLOCKED",
                "SUCCEEDED",
                "FAILED"
            ],
            "type": "string"
        },
        "com.vmware.vapi.std.dynamic_ID": {
            "properties": {
                "id": {
                    "description": "The identifier for a resource whose type is specified by {@link #type}.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "id"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.already_exists": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.already_exists_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.already_exists"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.already_in_desired_state": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.already_in_desired_state_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.already_in_desired_state"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.error": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.error.type": {
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ],
            "type": "string"
        },
        "com.vmware.vapi.std.errors.error_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.error"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.invalid_argument": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.invalid_argument_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.invalid_argument"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_found": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_found_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_found"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.resource_busy": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.resource_busy_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.resource_busy"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.timed_out": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.timed_out_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.timed_out"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unable_to_allocate_resource": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unable_to_allocate_resource_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unable_to_allocate_resource"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthenticated": {
            "properties": {
                "challenge": {
                    "description": "Indicates the authentication challenges applicable to the target API provider. It can be used by a client to discover the correct authentication scheme to use. The exact syntax of the value is defined by the specific provider, the protocol and authentication schemes used. <p> For example, a provider using REST may adhere to the WWW-Authenticate HTTP header specification, RFC7235, section 4.1. In this case an example challenge value may be: SIGN realm=\"27da1358-2ba4-11e9-b210-d663bd873d93\",sts=\"http://vcenter/sso?vsphere.local\", Basic realm=\"vCenter\"",
                    "type": "string"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthenticated_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthorized": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthorized_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthorized"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unsupported": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unsupported_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unsupported"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.localizable_message": {
            "properties": {
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "localized": {
                    "description": "Localized string value as per request requirements.",
                    "type": "string"
                },
                "params": {
                    "description": "Named arguments to be substituted into the message template.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ],
            "type": "object"
        },
        "com.vmware.vapi.std.localization_param": {
            "properties": {
                "d": {
                    "description": "The {@term double} value associated with the parameter. The number of displayed fractional digits is changed via {@name #precision} {@term field}.",
                    "format": "double",
                    "type": "number"
                },
                "dt": {
                    "description": "Date and time value associated with the parameter. Use the {@name #format} {@term field} to specify date and time display style.",
                    "format": "date-time",
                    "type": "string"
                },
                "format": {
                    "$ref": "#/definitions/vapi.std.localization_param.date_time_format",
                    "description": "Format associated with the date and time value in {@name #dt} {@term field}. The {@term enumeration value} {@code SHORT_DATETIME} will be used as default."
                },
                "i": {
                    "description": "{@term long} value associated with the parameter.",
                    "format": "int64",
                    "type": "integer"
                },
                "l": {
                    "$ref": "#/definitions/vapi.std.nested_localizable_message",
                    "description": "Nested localizable value associated with the parameter. This is useful construct to convert to human readable localized form {@term enumerated type} and {@term boolean} values. It can also be used for proper handling of pluralization and gender forms in localization. Recursive {@name NestedLocalizableMessage} instances can be used for localizing short lists of items."
                },
                "precision": {
                    "description": "Number of fractional digits to include in formatted {@term double} value.",
                    "format": "int64",
                    "type": "integer"
                },
                "s": {
                    "description": "{@term String} value associated with the parameter.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.localization_param.date_time_format": {
            "description": "The {@name DateTimeFormat} {@term enumerated type} lists possible date and time formatting options. It combines the Unicode CLDR format types - full, long, medium and short with 3 different presentations - date only, time only and combined date and time presentation.",
            "enum": [
                "SHORT_DATE",
                "MED_DATE",
                "LONG_DATE",
                "FULL_DATE",
                "SHORT_TIME",
                "MED_TIME",
                "LONG_TIME",
                "FULL_TIME",
                "SHORT_DATE_TIME",
                "MED_DATE_TIME",
                "LONG_DATE_TIME",
                "FULL_DATE_TIME"
            ],
            "type": "string"
        },
        "com.vmware.vapi.std.nested_localizable_message": {
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "params": {
                    "description": "Named Arguments to be substituted into the message template.",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "vapi.std.errors.feature_in_use": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "vapi.std.errors.feature_in_use_error": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.feature_in_use"
                }
            },
            "type": "object"
        },
        "vapi.std.errors.service_unavailable": {
            "properties": {
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "$ref": "#/definitions/vapi.std.errors.error.type",
                    "description": "Discriminator field to help API consumers identify the structure type."
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        }
    },
    "host": "",
    "info": {
        "description": "The vCenter Server Appliance is a preconfigured Linux-based virtual machine optimized for running vCenter Server and associated services.",
        "termsOfService": "http://swagger.io/terms/",
        "title": "appliance",
        "version": "2.0.0"
    },
    "paths": {
        "/api/appliance/infraprofile/configs": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of profiles with description are registered.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/appliance.infraprofile.configs.profile_info"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.service_unavailable"
                        }
                    }
                },
                "summary": "List all the profiles which are registered.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "tags": [
                    "infraprofile/configs"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validate$task",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.infraprofile.configs_validate_task"
                        }
                    },
                    {
                        "description": "action=validate",
                        "enum": [
                            "validate"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "vmw-task=true",
                        "enum": [
                            "true"
                        ],
                        "in": "query",
                        "name": "vmw-task",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Result of validation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.service_unavailable"
                        }
                    }
                },
                "summary": "Validates the desired profile specification.",
                "tags": [
                    "infraprofile/configs"
                ]
            }
        },
        "/api/appliance/infraprofile/configs?action=export": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "export",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.infraprofile.configs_export"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration specification JSON in string format.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.service_unavailable"
                        }
                    }
                },
                "summary": "Exports the desired profile specification.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "tags": [
                    "infraprofile/configs"
                ]
            }
        },
        "/api/appliance/infraprofile/configs?action=import&vmw-task=true": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "import_profile$task",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.infraprofile.configs_import_profile_task"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Import version.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "If there is another operation in progress.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.service_unavailable"
                        }
                    }
                },
                "summary": "Imports the desired profile specification.",
                "tags": [
                    "infraprofile/configs"
                ]
            }
        },
        "/rest/appliance/access/consolecli": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Console-based controlled CLI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.consolecli_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get enabled state of the console-based controlled CLI (TTY1).",
                "tags": [
                    "access/consolecli"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.consolecli_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set enabled state of the console-based controlled CLI (TTY1).",
                "tags": [
                    "access/consolecli"
                ]
            }
        },
        "/rest/appliance/access/dcui": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "DCUI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.dcui_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get enabled state of Direct Console User Interface (DCUI TTY2).",
                "tags": [
                    "access/dcui"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.dcui_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set enabled state of Direct Console User Interface (DCUI TTY2).",
                "tags": [
                    "access/dcui"
                ]
            }
        },
        "/rest/appliance/access/shell": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Current shell configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.shell_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get enabled state of BASH, that is, access to BASH from within the controlled CLI.",
                "tags": [
                    "access/shell"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.shell_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set enabled state of BASH, that is, access to BASH from within the controlled CLI.",
                "tags": [
                    "access/shell"
                ]
            }
        },
        "/rest/appliance/access/ssh": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "SSH-based controlled CLI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.ssh_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get enabled state of the SSH-based controlled CLI.",
                "tags": [
                    "access/ssh"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.ssh_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set enabled state of the SSH-based controlled CLI.",
                "tags": [
                    "access/ssh"
                ]
            }
        },
        "/rest/appliance/health/applmgmt": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "health status",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.applmgmt_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get health status of applmgmt services.",
                "tags": [
                    "health/applmgmt"
                ]
            }
        },
        "/rest/appliance/health/database-storage": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Database storage health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.databasestorage_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get database storage health.",
                "tags": [
                    "health/databasestorage"
                ]
            }
        },
        "/rest/appliance/health/load": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Load health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.load_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get load health.",
                "tags": [
                    "health/load"
                ]
            }
        },
        "/rest/appliance/health/mem": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Memory health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.mem_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get memory health.",
                "tags": [
                    "health/mem"
                ]
            }
        },
        "/rest/appliance/health/software-packages": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "software updates available.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.softwarepackages_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get information on available software updates available in the remote vSphere Update Manager repository. Red indicates that security updates are available. Orange indicates that non-security updates are available. Green indicates that there are no updates available. Gray indicates that there was an error retreiving information on software updates.",
                "tags": [
                    "health/softwarepackages"
                ]
            }
        },
        "/rest/appliance/health/storage": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Storage health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.storage_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get storage health.",
                "tags": [
                    "health/storage"
                ]
            }
        },
        "/rest/appliance/health/swap": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Swap health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.swap_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get swap health.",
                "tags": [
                    "health/swap"
                ]
            }
        },
        "/rest/appliance/health/system": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.system_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get overall health of system.",
                "tags": [
                    "health/system"
                ]
            }
        },
        "/rest/appliance/health/system/lastcheck": {
            "get": {
                "operationId": "lastcheck",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System health last check timestamp",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.system.lastcheck_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get last check timestamp of the health of the system.",
                "tags": [
                    "health/system"
                ]
            }
        },
        "/rest/appliance/health/{item}/messages": {
            "get": {
                "operationId": "messages",
                "parameters": [
                    {
                        "description": "ID of the data item",
                        "in": "path",
                        "name": "item",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the health messages",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.messages_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "Unknown health item",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get health messages.",
                "tags": [
                    "health"
                ]
            }
        },
        "/rest/appliance/local-accounts": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of identifiers",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get a list of the local user accounts.",
                "tags": [
                    "local_accounts"
                ]
            }
        },
        "/rest/appliance/local-accounts/global-policy": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Global password policy",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.policy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the global password policy.",
                "tags": [
                    "local_accounts/policy"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.policy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set the global password policy.",
                "tags": [
                    "local_accounts/policy"
                ]
            }
        },
        "/rest/appliance/local-accounts/{username}": {
            "delete": {
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "User login name",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Delete a local user account.",
                "tags": [
                    "local_accounts"
                ]
            },
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "User login name",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Local user account information",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get the local user account information.",
                "tags": [
                    "local_accounts"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "description": "User login name",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Update selected fields in local user account properties.",
                "tags": [
                    "local_accounts"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "create",
                "parameters": [
                    {
                        "description": "User login name",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Create a new local user account.",
                "tags": [
                    "local_accounts"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "description": "User login name",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Set local user account properties.",
                "tags": [
                    "local_accounts"
                ]
            }
        },
        "/rest/appliance/logging/forwarding": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about the configuration for forwarding log messages to remote logging servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_resp"
                        }
                    }
                },
                "summary": "Returns the configuration for forwarding log messages to remote logging servers.",
                "tags": [
                    "logging/forwarding"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "test",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_test"
                        }
                    },
                    {
                        "description": "action=test",
                        "enum": [
                            "test"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the status of the connection to each of the remote logging servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding.test_resp"
                        }
                    }
                },
                "summary": "Validates the current log forwarding configuration by checking the liveness of the remote machine and optionally sending a test diagnostic log message from the appliance to all configured logging servers to allow manual end-to-end validation. The message that is sent is: \"This is a diagnostic log test message from vCenter Server.\"",
                "tags": [
                    "logging/forwarding"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if there is any internal error during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Sets the configuration for forwarding log messages to remote log servers.",
                "tags": [
                    "logging/forwarding"
                ]
            }
        },
        "/rest/appliance/monitoring": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of names",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get monitored items list",
                "tags": [
                    "monitoring"
                ]
            }
        },
        "/rest/appliance/monitoring/query": {
            "get": {
                "operationId": "query",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "monitored item IDs Ex: CPU, MEMORY",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "item.names",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "{@name IntervalType} {@term enumerated type} Defines interval between the values in hours and mins,                    for which aggregation will apply",
                        "enum": [
                            "MINUTES30",
                            "HOURS2",
                            "MINUTES5",
                            "DAY1",
                            "HOURS6"
                        ],
                        "in": "query",
                        "name": "item.interval",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "{@name FunctionType} {@term enumerated type} Defines aggregation function",
                        "enum": [
                            "COUNT",
                            "MAX",
                            "AVG",
                            "MIN"
                        ],
                        "in": "query",
                        "name": "item.function",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Start time in UTC",
                        "in": "query",
                        "name": "item.start_time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "End time in UTC",
                        "in": "query",
                        "name": "item.end_time",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of MonitoredItemData structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring.query_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get monitoring data.",
                "tags": [
                    "monitoring"
                ]
            }
        },
        "/rest/appliance/monitoring/{stat_id}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "statistic item id",
                        "in": "path",
                        "name": "stat_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredItem structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get monitored item info",
                "tags": [
                    "monitoring"
                ]
            }
        },
        "/rest/appliance/networking": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Map of network configuration info for all interfaces.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get Networking information for all configured interfaces.",
                "tags": [
                    "networking"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Enable or Disable ipv6 on all interfaces",
                "tags": [
                    "networking"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "reset",
                "parameters": [
                    {
                        "description": "action=reset",
                        "enum": [
                            "reset"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address.",
                "tags": [
                    "networking"
                ]
            }
        },
        "/rest/appliance/networking/dns/domains": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of domains.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get list of DNS search domains.",
                "tags": [
                    "networking/dns/domains"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "add",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains_add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Add domain to DNS search domains.",
                "tags": [
                    "networking/dns/domains"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set DNS search domains.",
                "tags": [
                    "networking/dns/domains"
                ]
            }
        },
        "/rest/appliance/networking/dns/hostname": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "FQDN.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the Fully Qualified Doman Name.",
                "tags": [
                    "networking/dns/hostname"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set the Fully Qualified Domain Name.",
                "tags": [
                    "networking/dns/hostname"
                ]
            }
        },
        "/rest/appliance/networking/dns/hostname/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "test",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FQDN status",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Test the Fully Qualified Domain Name.",
                "tags": [
                    "networking/dns/hostname"
                ]
            }
        },
        "/rest/appliance/networking/dns/servers": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "DNS server configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get DNS server configuration.",
                "tags": [
                    "networking/dns/servers"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "add",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Add a DNS server. This method fails if mode argument is \"dhcp\"",
                "tags": [
                    "networking/dns/servers"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set the DNS server configuration. If you set the mode argument to \"DHCP\", a DHCP refresh is forced.",
                "tags": [
                    "networking/dns/servers"
                ]
            }
        },
        "/rest/appliance/networking/dns/servers/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "test",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DNS reacable status",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Test if dns servers are reachable.",
                "tags": [
                    "networking/dns/servers"
                ]
            }
        },
        "/rest/appliance/networking/firewall/inbound": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of address-based firewall rules.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.firewall.inbound_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the ordered list of firewall rules. Within the list of traffic rules, rules are processed in order of appearance, from top to bottom. When a connection matches a firewall rule, further processing for the connection stops, and the appliance ignores any additional firewall rules you have set.",
                "tags": [
                    "networking/firewall/inbound"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.firewall.inbound_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses. This overwrites the existing firewall rules and creates a new rule list. Within the list of traffic rules, rules are processed in order of appearance, from top to bottom. For example, the list of rules can be as follows: <table> <tr> <th>Address</th><th>Prefix</th><th>Interface Name</th><th>Policy</th> </tr> <tr> <td>10.112.0.1</td><td>0</td><td>*</td><td>REJECT</td> </tr> <tr> <td>10.112.0.1</td><td>0</td><td>nic0</td><td>ACCEPT</td> </tr> </table> In the above example, the first rule drops all packets originating from 10.112.0.1 and<br> the second rule accepts all packets originating from 10.112.0.1 only on nic0. In effect, the second rule is always ignored which is not desired, hence the order has to be swapped. When a connection matches a firewall rule, further processing for the connection stops, and the appliance ignores any additional firewall rules you have set.",
                "tags": [
                    "networking/firewall/inbound"
                ]
            }
        },
        "/rest/appliance/networking/interfaces": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of InterfaceInfo structures.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get list of available network interfaces, including those that are not yet configured.",
                "tags": [
                    "networking/interfaces"
                ]
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Network interface, for example, \"nic0\".",
                        "in": "path",
                        "name": "interface_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network interface information.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the specified interface is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get information about a particular network interface.",
                "tags": [
                    "networking/interfaces"
                ]
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}/ipv4": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "The Network interface to query, for example, \"nic0\".",
                        "in": "path",
                        "name": "interface_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The IPv4 configuration for the queried NIC.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv4_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get IPv4 network configuration for specific NIC.",
                "tags": [
                    "networking/interfaces/ipv4"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "description": "Network interface to update, for example, \"nic0\".",
                        "in": "path",
                        "name": "interface_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv4_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Set IPv4 network configuration for specific network interface.",
                "tags": [
                    "networking/interfaces/ipv4"
                ]
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}/ipv6": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Network interface to query, for example, \"nic0\".",
                        "in": "path",
                        "name": "interface_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IPv6 configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv6_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get IPv6 network configuration for specific interface.",
                "tags": [
                    "networking/interfaces/ipv6"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "description": "Network interface to update, for example, \"nic0\".",
                        "in": "path",
                        "name": "interface_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv6_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "The specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Set IPv6 network configuration for specific interface.",
                "tags": [
                    "networking/interfaces/ipv6"
                ]
            }
        },
        "/rest/appliance/networking/noproxy": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of servers for which no proxy configuration will be applied.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.no_proxy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Returns servers for which no proxy configuration will be applied.",
                "tags": [
                    "networking/no_proxy"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.no_proxy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Sets servers for which no proxy configuration should be applied. This operation sets environment variables. In order for this operation to take effect, a logout from appliance or a service restart is required. If IPv4 is enabled, \"127.0.0.1\" and \"localhost\" will always bypass the proxy (even if they are not explicitly configured).",
                "tags": [
                    "networking/no_proxy"
                ]
            }
        },
        "/rest/appliance/networking/proxy": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Proxy configuration for all configured protocols.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Gets proxy configuration for all configured protocols.",
                "tags": [
                    "networking/proxy"
                ]
            }
        },
        "/rest/appliance/networking/proxy/{protocol}": {
            "delete": {
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "ID whose proxy is to be deleted.",
                        "in": "path",
                        "name": "protocol",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Deletes a proxy configuration for a specific protocol.",
                "tags": [
                    "networking/proxy"
                ]
            },
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "The protocol whose proxy configuration is requested.",
                        "in": "path",
                        "name": "protocol",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proxy configuration for a specific protocol.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Gets the proxy configuration for a specific protocol.",
                "tags": [
                    "networking/proxy"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "test",
                "parameters": [
                    {
                        "description": "Protocol whose proxy is to be tested.",
                        "in": "path",
                        "name": "protocol",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_test"
                        }
                    },
                    {
                        "description": "action=test",
                        "enum": [
                            "test"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status of proxy settings.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Tests a proxy configuration by testing the connection to the proxy server and test host.",
                "tags": [
                    "networking/proxy"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "description": "The protocol for which proxy should be set.",
                        "in": "path",
                        "name": "protocol",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Configures which proxy server to use for the specified protocol. This operation sets environment variables for using proxy. In order for this configuration to take effect a logout / service restart is required.",
                "tags": [
                    "networking/proxy"
                ]
            }
        },
        "/rest/appliance/networking?action=change&vmw-task=true": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "change$task",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_change_task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.change_task_resp"
                        }
                    },
                    "400": {
                        "description": "if another change task is in progress",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "if the user is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    }
                },
                "summary": "Changes the Hostname/IP of the management network of vCenter appliance. The Hostname/IP change invokes the PNID change process which involves LDAP entry modification, updating registry entries, configuration files modification and network configuration changes. vCenter server is expected to be down for few minutes during these changes",
                "tags": [
                    "networking"
                ]
            }
        },
        "/rest/appliance/ntp": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of NTP servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the NTP configuration status. If you run the 'timesync.get' command, you can retrieve the current time synchronization method (NTP- or VMware Tools-based). The 'ntp' command always returns the NTP server information, even when the time synchronization mode is not set to NTP. If the time synchronization mode is not NTP-based, the NTP server status is displayed as down.",
                "tags": [
                    "ntp"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set NTP servers. This method updates old NTP servers from configuration and sets the input NTP servers in the configuration. If NTP based time synchronization is used internally, the NTP daemon will be restarted to reload given NTP configuration. In case NTP based time synchronization is not used, this method only replaces servers in the NTP configuration.",
                "tags": [
                    "ntp"
                ]
            }
        },
        "/rest/appliance/ntp/test": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "test",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of test run statuses.",
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Test the connection to a list of ntp servers.",
                "tags": [
                    "ntp"
                ]
            }
        },
        "/rest/appliance/recovery": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Structure containing the properties of the Recovery subsystem.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Gets the properties of the appliance Recovery subsystem.",
                "tags": [
                    "recovery"
                ]
            }
        },
        "/rest/appliance/recovery/backup/job": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of BackupJob IDs",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get list of backup jobs",
                "tags": [
                    "recovery/backup/job"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Initiate backup.",
                "tags": [
                    "recovery/backup/job"
                ]
            }
        },
        "/rest/appliance/recovery/backup/job/details": {
            "get": {
                "operationId": "list",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "Identifiers of backup jobs that can match the filter.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter.jobs",
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Map of backup job identifier to Info Structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.details.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Returns detailed information about the current and historical backup jobs.",
                "tags": [
                    "recovery/backup/job/details"
                ]
            }
        },
        "/rest/appliance/recovery/backup/job/{id}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "ID (ID of job)",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if backup associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "See backup job progress/result.",
                "tags": [
                    "recovery/backup/job"
                ]
            }
        },
        "/rest/appliance/recovery/backup/job/{id}/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancel",
                "parameters": [
                    {
                        "description": "ID (ID of job)",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.cancel_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if backup associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Cancel the backup job.",
                "tags": [
                    "recovery/backup/job"
                ]
            }
        },
        "/rest/appliance/recovery/backup/parts": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about each of the backup parts.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.parts.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Gets a list of the backup parts.",
                "tags": [
                    "recovery/backup/parts"
                ]
            }
        },
        "/rest/appliance/recovery/backup/parts/{id}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the part.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "long Size of the part in megabytes.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.parts_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Gets the size (in MB) of the part.",
                "tags": [
                    "recovery/backup/parts"
                ]
            }
        },
        "/rest/appliance/recovery/backup/schedules": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of schedule id to Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Returns a list of existing schedules with details",
                "tags": [
                    "recovery/backup/schedules"
                ]
            }
        },
        "/rest/appliance/recovery/backup/schedules/update/{schedule}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Identifier of the schedule",
                        "in": "path",
                        "name": "schedule",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Updates a schedule",
                "tags": [
                    "recovery/backup/schedules"
                ]
            }
        },
        "/rest/appliance/recovery/backup/schedules/{schedule}": {
            "delete": {
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Identifier of the schedule",
                        "in": "path",
                        "name": "schedule",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Deletes an existing schedule",
                "tags": [
                    "recovery/backup/schedules"
                ]
            },
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the schedule",
                        "in": "path",
                        "name": "schedule",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns an existing schedule information based on id",
                "tags": [
                    "recovery/backup/schedules"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Identifier of the schedule",
                        "in": "path",
                        "name": "schedule",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Creates a schedule",
                "tags": [
                    "recovery/backup/schedules"
                ]
            }
        },
        "/rest/appliance/recovery/backup/schedules/{schedule}?action=run": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "run",
                "parameters": [
                    {
                        "description": "Identifier of the schedule",
                        "in": "path",
                        "name": "schedule",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_run"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules.run_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Initiate backup with the specified schedule",
                "tags": [
                    "recovery/backup/schedules"
                ]
            }
        },
        "/rest/appliance/recovery/backup/system-name": {
            "get": {
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Backup location URL.",
                        "in": "query",
                        "name": "loc_spec.location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Username for the given location.",
                        "in": "query",
                        "name": "loc_spec.location_user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Password for the given location.",
                        "in": "query",
                        "name": "loc_spec.location_password",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of system names",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if {@param.name locSpec} doesn't refer to an existing location on the backup server.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns a list of system names for which backup archives exist under {@param.name locSpec}.",
                "tags": [
                    "recovery/backup/system_name"
                ]
            }
        },
        "/rest/appliance/recovery/backup/system-name/{system_name}/archives": {
            "get": {
                "operationId": "list",
                "parameters": [
                    {
                        "description": "System name identifier.",
                        "in": "path",
                        "name": "system_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Backup location URL.",
                        "in": "query",
                        "name": "loc_spec.location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Username for the given location.",
                        "in": "query",
                        "name": "loc_spec.location_user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Password for the given location.",
                        "in": "query",
                        "name": "loc_spec.location_password",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Backup must have been taken on or after this time to match the filter.",
                        "in": "query",
                        "name": "filter_spec.start_timestamp",
                        "type": "string"
                    },
                    {
                        "description": "Backup must have been taken on or before this time to match the filter.",
                        "in": "query",
                        "name": "filter_spec.end_timestamp",
                        "type": "string"
                    },
                    {
                        "description": "Backup comment must contain this {@term string} to match the filter.",
                        "in": "query",
                        "name": "filter_spec.comment_substring",
                        "type": "string"
                    },
                    {
                        "description": "Limit result to a max count of most recent backups.",
                        "in": "query",
                        "name": "filter_spec.max_results",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commonly used information about the backup archives.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if combination of {@param.name locSpec} and system name does not refer to an existing location on the backup server.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns information about backup archives corresponding to given backup location and system name, which match the {@link FilterSpec}.",
                "tags": [
                    "recovery/backup/system_name/archive"
                ]
            }
        },
        "/rest/appliance/recovery/backup/system-name/{system_name}/archives/{archive}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "System name identifier.",
                        "in": "path",
                        "name": "system_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Archive identifier.",
                        "in": "path",
                        "name": "archive",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Backup location URL.",
                        "in": "query",
                        "name": "spec.location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Username for the given location.",
                        "in": "query",
                        "name": "spec.location_user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Password for the given location.",
                        "in": "query",
                        "name": "spec.location_password",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.archive_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if backup does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns the information for backup corresponding to given backup location and system name.",
                "tags": [
                    "recovery/backup/system_name/archive"
                ]
            }
        },
        "/rest/appliance/recovery/backup/validate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validate",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReturnResult Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.validate_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Check for backup errors without starting backup.",
                "tags": [
                    "recovery/backup"
                ]
            }
        },
        "/rest/appliance/recovery/reconciliation/job": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if there is no running reconciliation job.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Get reconciliation job progress/result.",
                "tags": [
                    "recovery/reconciliation/job"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Initiate reconciliation.",
                "tags": [
                    "recovery/reconciliation/job"
                ]
            }
        },
        "/rest/appliance/recovery/restore/job": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "See restore job progress/result.",
                "tags": [
                    "recovery/restore/job"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Initiate restore.",
                "tags": [
                    "recovery/restore/job"
                ]
            }
        },
        "/rest/appliance/recovery/restore/job/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job.cancel_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Cancel the restore job",
                "tags": [
                    "recovery/restore/job"
                ]
            }
        },
        "/rest/appliance/recovery/restore/validate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validate",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.validate_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get metadata before restore",
                "tags": [
                    "recovery/restore"
                ]
            }
        },
        "/rest/appliance/services": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of service identifiers to service Info structures.",
                        "schema": {
                            "$ref": "#/definitions/appliance.services.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Lists details of vCenter services.",
                "tags": [
                    "services"
                ]
            }
        },
        "/rest/appliance/services/{service}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "identifier of the service whose state is being queried.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Info structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.services_resp"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns the state of a service.",
                "tags": [
                    "services"
                ]
            }
        },
        "/rest/appliance/services/{service}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "restart",
                "parameters": [
                    {
                        "description": "identifier of the service to restart",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the restart operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "summary": "Restarts a service",
                "tags": [
                    "services"
                ]
            }
        },
        "/rest/appliance/services/{service}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "start",
                "parameters": [
                    {
                        "description": "identifier of the service to start",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the start operation. Timeout occurs when the service takes longer than StartTimeout to start.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "summary": "Starts a service",
                "tags": [
                    "services"
                ]
            }
        },
        "/rest/appliance/services/{service}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "stop",
                "parameters": [
                    {
                        "description": "identifier of the service to stop",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a stop operation is in progress, issuing another stop operation will lead to this error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Stops a service",
                "tags": [
                    "services"
                ]
            }
        },
        "/rest/appliance/shutdown": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Configuration of pending shutdown action.",
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get details about the pending shutdown action.",
                "tags": [
                    "shutdown"
                ]
            }
        },
        "/rest/appliance/shutdown/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Cancel pending shutdown action.",
                "tags": [
                    "shutdown"
                ]
            }
        },
        "/rest/appliance/shutdown/poweroff": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "poweroff",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_poweroff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Power off the appliance.",
                "tags": [
                    "shutdown"
                ]
            }
        },
        "/rest/appliance/shutdown/reboot": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "reboot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_reboot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Reboot the appliance.",
                "tags": [
                    "shutdown"
                ]
            }
        },
        "/rest/appliance/system/storage": {
            "get": {
                "operationId": "list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of mapping items",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.storage.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get disk to partition mapping.",
                "tags": [
                    "system/storage"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "resize_ex",
                "parameters": [
                    {
                        "description": "action=resize-ex",
                        "enum": [
                            "resize-ex"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the partitions with the size before and after resizing",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.storage.resize_ex_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Resize all partitions to 100 percent of disk size.",
                "tags": [
                    "system/storage"
                ]
            }
        },
        "/rest/appliance/system/storage/resize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "resize",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Resize all partitions to 100 percent of disk size.",
                "tags": [
                    "system/storage"
                ]
            }
        },
        "/rest/appliance/system/time": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System time",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get system time.",
                "tags": [
                    "system/time"
                ]
            }
        },
        "/rest/appliance/system/time/timezone": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Time zone name.",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time.timezone_resp"
                        }
                    },
                    "400": {
                        "description": "if timezone cannot be read.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get time zone.",
                "tags": [
                    "system/time/timezone"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time.timezone_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set time zone.",
                "tags": [
                    "system/time/timezone"
                ]
            }
        },
        "/rest/appliance/system/uptime": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "system uptime",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.uptime_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the system uptime.",
                "tags": [
                    "system/uptime"
                ]
            }
        },
        "/rest/appliance/system/version": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "version information about the appliance",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.version_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get the version.",
                "tags": [
                    "system/version"
                ]
            }
        },
        "/rest/appliance/timesync": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Time synchronization mode.",
                        "schema": {
                            "$ref": "#/definitions/appliance.timesync_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Get time synchronization mode.",
                "tags": [
                    "timesync"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.timesync_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Set time synchronization mode.",
                "tags": [
                    "timesync"
                ]
            }
        },
        "/rest/appliance/update": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info structure containing the status information about the appliance.",
                        "schema": {
                            "$ref": "#/definitions/appliance.update_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Gets the current status of the appliance update.",
                "tags": [
                    "update"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancel",
                "parameters": [
                    {
                        "description": "action=cancel",
                        "enum": [
                            "cancel"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Current task is not cancellable",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Request the cancellation the update operation that is currently in progress.",
                "tags": [
                    "update"
                ]
            }
        },
        "/rest/appliance/update/pending": {
            "get": {
                "operationId": "list",
                "parameters": [
                    {
                        "description": "The {@name SourceType} {@term enumerated type} defines the supported types of sources of updates.",
                        "enum": [
                            "LAST_CHECK",
                            "LOCAL",
                            "LOCAL_AND_ONLINE"
                        ],
                        "in": "query",
                        "name": "source_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "specific URL to check at",
                        "in": "query",
                        "name": "url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the update summaries",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "source is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Checks if new updates are available.",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/pending/{version}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_resp"
                        }
                    },
                    "400": {
                        "description": "if the update of this version is already installed",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.already_in_desired_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Gets update information",
                "tags": [
                    "update/pending"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "precheck",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "action=precheck",
                        "enum": [
                            "precheck"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PrecheckResult",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.precheck_resp"
                        }
                    },
                    "400": {
                        "description": "if another operation is in progress",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Runs update precheck",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/pending/{version}?action=install": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "install",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_install"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents running an update or not staged",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Starts operation of installing the appliance update. Will fail is the update is not staged",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/pending/{version}?action=stage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "stage",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents staging",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Starts staging the appliance update. The updates are searched for in the following order: staged, CDROM, URL",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/pending/{version}?action=stage-and-install": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "stage_and_install",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_stage_and_install"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents running an update",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Starts operation of installing the appliance update. Will stage update if not already staged The updates are searched for in the following order: staged, CDROM, URL",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/pending/{version}?action=validate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "validate",
                "parameters": [
                    {
                        "description": "Update version",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Issues struct with the issues found during the validation",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.validate_resp"
                        }
                    },
                    "400": {
                        "description": "if appliance update state prevents running an check",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Validates the user provided data before the update installation.",
                "tags": [
                    "update/pending"
                ]
            }
        },
        "/rest/appliance/update/policy": {
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Structure containing the policy for the appliance update.",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.policy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Gets the automatic update checking and staging policy.",
                "tags": [
                    "update/policy"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "set",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.policy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Sets the automatic update checking and staging policy.",
                "tags": [
                    "update/policy"
                ]
            }
        },
        "/rest/appliance/update/staged": {
            "delete": {
                "operationId": "delete",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Deletes the staged update",
                "tags": [
                    "update/staged"
                ]
            },
            "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info structure with information about staged update",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.staged_resp"
                        }
                    },
                    "400": {
                        "description": "if nothing is staged",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "summary": "Gets the current status of the staged update",
                "tags": [
                    "update/staged"
                ]
            }
        },
        "/rest/appliance/vmon/service": {
            "get": {
                "operationId": "list_details",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of service identifiers to service Info structures.\nThe key in the result map will be an identifier for the resource type: appliance.vmon.Service.",
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service.list_details_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "summary": "Lists details of services managed by vMon.",
                "tags": [
                    "vmon/service"
                ]
            }
        },
        "/rest/appliance/vmon/service/{service}": {
            "get": {
                "operationId": "get",
                "parameters": [
                    {
                        "description": "identifier of the service whose state is being queried.\nThe parameter must be an identifier for the resource type: appliance.vmon.Service.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Info structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service_resp"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Returns the state of a service.",
                "tags": [
                    "vmon/service"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "description": "identifier of the service whose properties are being updated.\nThe parameter must be an identifier for the resource type: appliance.vmon.Service.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a start, stop or restart operation is in progress, update operation will fail with this error.\nif a request to set the Service.UpdateSpec.startup-type field of spec to DISABLED comes in for a service that is not in STOPPED state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Updates the properties of a service.",
                "tags": [
                    "vmon/service"
                ]
            }
        },
        "/rest/appliance/vmon/service/{service}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "restart",
                "parameters": [
                    {
                        "description": "identifier of the service to restart\nThe parameter must be an identifier for the resource type: appliance.vmon.Service.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the restart operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "summary": "Restarts a service",
                "tags": [
                    "vmon/service"
                ]
            }
        },
        "/rest/appliance/vmon/service/{service}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "start",
                "parameters": [
                    {
                        "description": "identifier of the service to start\nThe parameter must be an identifier for the resource type: appliance.vmon.Service.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the start operation. Timeout occurs when the service takes longer than StartTimeout to start.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "summary": "Starts a service",
                "tags": [
                    "vmon/service"
                ]
            }
        },
        "/rest/appliance/vmon/service/{service}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "stop",
                "parameters": [
                    {
                        "description": "identifier of the service to stop\nThe parameter must be an identifier for the resource type: appliance.vmon.Service.",
                        "in": "path",
                        "name": "service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a stop operation is in progress, issuing another stop operation will lead to this error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "summary": "Stops a service",
                "tags": [
                    "vmon/service"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "security": [
        {
            "api_key": []
        }
    ],
    "securityDefinitions": {
        "api_key": {
            "in": "header",
            "name": "vmware-api-session-id",
            "type": "apiKey"
        },
        "basic_auth": {
            "type": "basic"
        }
    },
    "swagger": "2.0",
    "tags": []
}