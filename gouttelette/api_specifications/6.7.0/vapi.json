{
    "paths": {
        "/com/vmware/vapi": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.rest.navigation.options_get"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vapi.rest.navigation.operation"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "List of {@link Operation}s."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "If no service is registered for this URL."
                    }
                },
                "summary": "Retrieves operations for specific URL.",
                "tags": [
                    "rest/navigation/options "
                ]
            },
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vapi.rest.navigation.resource.info"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "{@link List} of {@link Resource#Info}s."
                    }
                },
                "summary": "Gets list of all vAPI REST {@link Resource}s.",
                "tags": [
                    "rest/navigation/resource "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/component": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the component elements that have authentication information."
                    }
                },
                "summary": "Returns the identifiers for the component elements that have authentication information.",
                "tags": [
                    "metadata/authentication/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/component/id:{component_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.component_data"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ComponentData} instance that corresponds to {@param.name componentId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} does not have any authentication information."
                    }
                },
                "summary": "Retrieves authentication information about the component element corresponding to {@param.name componentId}. <p> The {@link ComponentData} contains the authentication information about the component element and it's fingerprint. It contains information about all the package elements that belong to this component element.",
                "tags": [
                    "metadata/authentication/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/component/id:{component_id}?~action=fingerprint": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.component_fingerprint"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "fingerprint",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The fingerprint computed from the authentication metadata of the component."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} does not have any authentication information."
                    }
                },
                "summary": "Retrieves the fingerprint computed from the authentication metadata of the component element corresponding to {@param.name componentId}. <p> The fingerprint provides clients an efficient way to check if the metadata for a particular component has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of {@link com.vmware.vapi.metadata.authentication.Component#get}.",
                "tags": [
                    "metadata/authentication/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/package": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the package elements that have authentication information."
                    }
                },
                "summary": "Returns the identifiers for the package elements that have authentication information.",
                "tags": [
                    "metadata/authentication/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/package/id:{package_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "package_id",
                        "description": "Identifier of the package element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.package_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link PackageInfo} instance that corresponds to {@param.name packageId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the package element associated with {@param.name packageId} does not have any authentication information."
                    }
                },
                "summary": "Retrieves authentication information about the package element corresponding to {@param.name packageId}.",
                "tags": [
                    "metadata/authentication/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/service": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the service elements that have authentication information."
                    }
                },
                "summary": "Returns the identifiers for the service elements that have authentication information.",
                "tags": [
                    "metadata/authentication/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/service/id:{service_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.service_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ServiceInfo} instance that corresponds to {@param.name serviceId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not have any authentication information."
                    }
                },
                "summary": "Retrieves authentication information about the service element corresponding to {@param.name serviceId}.",
                "tags": [
                    "metadata/authentication/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/service/operation": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "List of identifiers for the operation elements contained in the service element that have authentication information."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not have any operation elements that have authentication information."
                    }
                },
                "summary": "Returns the identifiers for the operation elements contained in the service element corresponding to {@param.name serviceId} that have authentication information.",
                "tags": [
                    "metadata/authentication/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/metadata/authentication/service/operation/id:{service_id}?~action=get": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.service.operation_get"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.operation_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link com.vmware.vapi.metadata.authentication.OperationInfo} instance that corresponds to {@param.name operationId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not exist."
                    }
                },
                "summary": "Retrieves the authentication information about an operation element corresponding to {@param.name operationId} contained in the service element corresponding to {@param.name serviceId}.",
                "tags": [
                    "metadata/authentication/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/command": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.identity"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "Identifiers of the requested commands."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if a namespace corresponding to {@param.name path} doesn't exist."
                    }
                },
                "summary": "Returns the identifiers of all commands, or commands in a specific namespace.",
                "tags": [
                    "metadata/cli/command "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/command?~action=fingerprint": {
            "post": {
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "operationId": "fingerprint",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "Fingerprint of all the command metadata present on the server."
                    }
                },
                "summary": "Returns the aggregate fingerprint of all the command metadata from all the metadata sources. <p> The fingerprint provides clients an efficient way to check if the metadata for commands has been modified on the server.",
                "tags": [
                    "metadata/cli/command "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/command?~action=get": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command_get"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "Information about the command including information about how to execute that command."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if a command corresponding to {@param.name identity} doesn't exist."
                    }
                },
                "summary": "Retrieves information about a command including information about how to execute that command.",
                "tags": [
                    "metadata/cli/command "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/namespace": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace.identity"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "Identifiers of all the namespaces."
                    }
                },
                "summary": "Returns the identifiers of all namespaces registered with the infrastructure.",
                "tags": [
                    "metadata/cli/namespace "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/namespace?~action=fingerprint": {
            "post": {
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "operationId": "fingerprint",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "Fingerprint of all the namespace metadata present on the server."
                    }
                },
                "summary": "Returns the aggregate fingerprint of all the namespace metadata from all the metadata sources. <p> The fingerprint provides clients an efficient way to check if the metadata for namespaces has been modified on the server.",
                "tags": [
                    "metadata/cli/namespace "
                ]
            }
        },
        "/com/vmware/vapi/metadata/cli/namespace?~action=get": {
            "post": {
                "parameters": [
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace_get"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace.info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "Information about the namespace including information about child of that namespace."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if a namespace corresponding to {@param.name identity} doesn't exist."
                    }
                },
                "summary": "Retreives information about a namespace including information about children of that namespace.",
                "tags": [
                    "metadata/cli/namespace "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/component": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the component elements that are registered with the infrastructure."
                    }
                },
                "summary": "Returns the identifiers for the component elements that are registered with the infrastructure.",
                "tags": [
                    "metadata/metamodel/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/component/id:{component_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.component_data"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ComponentData} instance that corresponds to {@param.name componentId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} is not registered with the infrastructure."
                    }
                },
                "summary": "Retrieves metamodel information about the component element corresponding to {@param.name componentId}. <p> The {@link ComponentData} contains the metamodel information about the component and it's fingerprint. It contains information about all the package elements that are contained in this component element.",
                "tags": [
                    "metadata/metamodel/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/component/id:{component_id}?~action=fingerprint": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.component_fingerprint"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "fingerprint",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The fingerprint computed from the metamodel metadata of the component element."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} is not registered with the infrastructure."
                    }
                },
                "summary": "Retrieves the fingerprint computed from the metamodel metadata of the component element corresponding to {@param.name componentId}. <p> The fingerprint provides clients an efficient way to check if the metadata for a particular component element has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of {@link com.vmware.vapi.metadata.metamodel.Component#get}.",
                "tags": [
                    "metadata/metamodel/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/enumeration": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the enumeration elements."
                    }
                },
                "summary": "Returns the identifiers for the enumeration elements that are contained in all the package elements, service elements and structure elements.",
                "tags": [
                    "metadata/metamodel/enumeration "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/enumeration/id:{enumeration_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "enumeration_id",
                        "description": "Identifier of the enumeration element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.enumeration_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link EnumerationInfo} instance that corresponds to {@param.name enumerationId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the enumeration element associated with {@param.name enumerationId} is not contained in any of the package elements, service elements and structure elements."
                    }
                },
                "summary": "Retrieves information about the enumeration element corresponding to {@param.name enumerationId}. <p> The {@link EnumerationInfo} contains the metamodel information about the enumeration value element contained in the enumeration element.",
                "tags": [
                    "metadata/metamodel/enumeration "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/package": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the package elements that are contained in all the registered component elements."
                    }
                },
                "summary": "Returns the identifiers for the packages elements that are contained in all the registered component elements.",
                "tags": [
                    "metadata/metamodel/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/package/id:{package_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "package_id",
                        "description": "Identifier of the package element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.package_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link PackageInfo} instance that corresponds to {@param.name packageId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the package element associated with {@param.name packageId} does not exist."
                    }
                },
                "summary": "Retrieves information about the package element corresponding to {@param.name packageId}.",
                "tags": [
                    "metadata/metamodel/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/resource": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "Set of resource types"
                    }
                },
                "summary": "Returns the set of resource types present across all the service elements contained in all the package elements.",
                "tags": [
                    "metadata/metamodel/resource "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/resource/model": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The set of identifiers for the models that are associated with the resource type in {@param.name resourceId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the resource type associated with {@param.name resourceId} does not exist."
                    }
                },
                "summary": "Returns the set of identifiers for the structure elements that are models for the resource type corresponding to {@param.name resourceId}. <p> The {@link com.vmware.vapi.metadata.metamodel.Structure} {@term service} provides {@term operations} to retrieve more details about the structure elements corresponding to the identifiers returned by this {@term operation}.",
                "tags": [
                    "metadata/metamodel/resource/model "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/service": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the service elements that are currently registered with the infrastructure."
                    }
                },
                "summary": "Returns the identifiers for the service elements that are currently registered with the infrastructure. <p> The list of service elements is an aggregate list of all the service elements contained in all the package elements.",
                "tags": [
                    "metadata/metamodel/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/service/id:{service_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.service_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ServiceInfo} instance that corresponds to {@param.name serviceId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} is not registered with the infrastructure."
                    }
                },
                "summary": "Retrieves information about the service element corresponding to {@param.name serviceId}. <p> The {@link ServiceInfo} contains the metamodel information for the operation elements, structure elements and enumeration elements contained in the service element.",
                "tags": [
                    "metadata/metamodel/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/service/operation": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the operation elements that are defined in the scope of {@param.name serviceId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not exist in any of the package elements."
                    }
                },
                "summary": "Returns the identifiers for the operation elements that are defined in the scope of {@param.name serviceId}.",
                "tags": [
                    "metadata/metamodel/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/service/operation/id:{service_id}/id:{operation_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    },
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "operation_id",
                        "description": "Identifier of the operation element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.operation_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link com.vmware.vapi.metadata.metamodel.OperationInfo} instance that corresponds to {@param.name operationId} defined in scope {@param.name serviceId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not exist in any of the package elements."
                    }
                },
                "summary": "Retrieves the metamodel information about an operation element corresponding to {@param.name operationId} contained in the service element corresponding to {@param.name serviceId}.",
                "tags": [
                    "metadata/metamodel/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/structure": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the structure elements."
                    }
                },
                "summary": "Returns the identifiers for the structure elements that are contained in all the package elements and service elements.",
                "tags": [
                    "metadata/metamodel/structure "
                ]
            }
        },
        "/com/vmware/vapi/metadata/metamodel/structure/id:{structure_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "structure_id",
                        "description": "Identifier of the structure element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.structure_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link StructureInfo} instance that corresponds to {@param.name structureId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the structure element associated with {@param.name structureId} is not contained in any of the package elements or service elements."
                    }
                },
                "summary": "Retrieves information about the structure element corresponding to {@param.name structureId}. <p> The {@link StructureInfo} contains the metamodel information about the structure element. It contains information about all the field elements and enumeration elements contained in this structure element.",
                "tags": [
                    "metadata/metamodel/structure "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/component": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the component elements that have privilege information."
                    }
                },
                "summary": "Returns the identifiers for the component elements that have privilege information.",
                "tags": [
                    "metadata/privilege/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/component/id:{component_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.component_data"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ComponentData} instance that corresponds to {@param.name componentId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} does not have any privilege information."
                    }
                },
                "summary": "Retrieves privilege information about the component element corresponding to {@param.name componentId}. <p> The {@link ComponentData} contains the privilege information about the component element and its fingerprint. It contains information about all the package elements that belong to this component element.",
                "tags": [
                    "metadata/privilege/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/component/id:{component_id}?~action=fingerprint": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "component_id",
                        "description": "Identifier of the component element."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.component_fingerprint"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "fingerprint",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The fingerprint computed from the privilege metadata of the component."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the component element associated with {@param.name componentId} does not have any privilege information."
                    }
                },
                "summary": "Retrieves the fingerprint computed from the privilege metadata of the component element corresponding to {@param.name componentId}. <p> The fingerprint provides clients an efficient way to check if the metadata for a particular component has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of {@link com.vmware.vapi.metadata.privilege.Component#get}.",
                "tags": [
                    "metadata/privilege/component "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/package": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the package elements that have privilege information."
                    }
                },
                "summary": "Returns the identifiers for the package elements that have privilege information.",
                "tags": [
                    "metadata/privilege/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/package/id:{package_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "package_id",
                        "description": "Identifier of the package element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.package_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link PackageInfo} instance that corresponds to {@param.name packageId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the package element associated with {@param.name packageId} does not have any privilege information."
                    }
                },
                "summary": "Retrieves privilege information about the package element corresponding to {@param.name packageId}.",
                "tags": [
                    "metadata/privilege/package "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/service": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "The list of identifiers for the service elements that have privilege information."
                    }
                },
                "summary": "Returns the identifiers for the service elements that have privilege information.",
                "tags": [
                    "metadata/privilege/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/service/id:{service_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    }
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.service_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link ServiceInfo} instance that corresponds to {@param.name serviceId}"
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not have any privilege information."
                    }
                },
                "summary": "Retrieves privilege information about the service element corresponding to {@param.name serviceId}.",
                "tags": [
                    "metadata/privilege/service "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/service/operation": {
            "get": {
                "parameters": [],
                "operationId": "list",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "description": "List of identifiers for the operation elements contained in the service element that have privilege information."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not have any operation elements that have privilege information."
                    }
                },
                "summary": "Returns the identifiers for the operation elements contained in the service element corresponding to {@param.name serviceId} that have privilege information.",
                "tags": [
                    "metadata/privilege/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/metadata/privilege/service/operation/id:{service_id}?~action=get": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "service_id",
                        "description": "Identifier of the service element."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.service.operation_get"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get",
                "responses": {
                    "200": {
                        "schema": {
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.operation_info"
                                }
                            },
                            "type": "object"
                        },
                        "description": "The {@link com.vmware.vapi.metadata.privilege.OperationInfo} instance that corresponds to {@param.name operationId}."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the service element associated with {@param.name serviceId} does not exist."
                    }
                },
                "summary": "Retrieves the privilege information about an operation element corresponding to {@param.name operationId} contained in the service element corresponding to {@param.name serviceId}.",
                "tags": [
                    "metadata/privilege/service/operation "
                ]
            }
        },
        "/com/vmware/vapi/vcenter/activation/id:{activation_id}?~action=cancel": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "name": "activation_id",
                        "description": "the {@param.name activationId} associated with a vCenter Server task to be canceled."
                    },
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vapi.vcenter.activation_cancel"
                        },
                        "required": true,
                        "name": "request_body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "cancel",
                "responses": {
                    "400": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the vCenter Server task associated with the given {@param.name activationId} is not cancelable."
                    },
                    "401": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the user is not authenticated."
                    },
                    "403": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the user is not authorized to cancel the task."
                    },
                    "404": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if a vCenter Server task with the given {@param.name activationId} was not found."
                    },
                    "503": {
                        "schema": {
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "description": "if the task cancelation cannot be performed due to vCenter server is unreachable or it is not properly configured."
                    },
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Sends a request to cancel the task associated with the provided {@param.name activationId}.",
                "tags": [
                    "vcenter/activation "
                ]
            }
        }
    },
    "definitions": {
        "com.vmware.vapi.metadata.authentication.authentication_info": {
            "required": [
                "scheme_type",
                "scheme"
            ],
            "properties": {
                "scheme_type": {
                    "description": "The type of the authentication scheme.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.authentication_info.scheme_type"
                },
                "session_manager": {
                    "type": "string",
                    "description": "In a session aware authentication scheme, a session manager is required that supports {@code create}, {@code delete} and {@code keepAlive} {@term operations}. The fully qualified {@term service} name of the session manager is provided in {@link AuthenticationInfo#sessionManager} {@term field}. This {@term service} is responsible for handling sessions."
                },
                "scheme": {
                    "type": "string",
                    "description": "String identifier of the authentication scheme. <p> Following are the supported authentication schemes by the infrastructure: <ul> <li>The identifier {@code com.vmware.vapi.std.security.saml_hok_token} for SAML holder of key token based authentication mechanism. </li> <li>The identifier {@code com.vmware.vapi.std.security.bearer_token} for SAML bearer token based authentication mechanism. </li> <li>The identifier {@code com.vmware.vapi.std.security.session_id} for session based authentication mechanism. </li> <li>The identifier {@code com.vmware.vapi.std.security.user_pass} for username and password based authentication mechanism. </li> </ul>"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.authentication_info.scheme_type": {
            "type": "string",
            "enum": [
                "SESSIONLESS",
                "SESSION_AWARE"
            ],
            "description": "The {@name SchemeType} {@term enumerated type} provides {@term enumeration values} for the set of valid authentication scheme types."
        },
        "com.vmware.vapi.metadata.authentication.component_data": {
            "required": [
                "fingerprint",
                "info"
            ],
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the metadata of the component. <p> Authentication information could change when there is an infrastructure update. Since the data present in {@link ComponentData#info} could be quite large, {@name #fingerprint} provides a convenient way to check if the data for a particular component is updated. <p> You should store the fingerprint associated with a component. After an update, by invoking the {@link com.vmware.vapi.metadata.authentication.Component#fingerprint} {@term operation}, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can then use the {@link com.vmware.vapi.metadata.authentication.Component#get} to retrieve the new authentication information for the component."
                },
                "info": {
                    "description": "Authentication information of the component. This includes information about all the {@term packages} in the component.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.component_info"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.component_fingerprint": {
            "required": [
                "component_id"
            ],
            "properties": {
                "component_id": {
                    "type": "string",
                    "description": "Identifier of the component element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.component_info": {
            "required": [
                "packages"
            ],
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.package_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Authentication information of all the package elements. The key in the {@term map} is the identifier of the package element and the value in the {@term map} is the authentication information for the package element. <p> For an explanation of authentication information containment within package elements, see {@link com.vmware.vapi.metadata.authentication.Package}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.operation_info": {
            "required": [
                "schemes"
            ],
            "properties": {
                "schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.authentication_info"
                    },
                    "description": "List of authentication schemes used by an operation element. The authentication scheme specified on the service element corresponding to this operation element is ignored."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.package_info": {
            "required": [
                "schemes",
                "services"
            ],
            "properties": {
                "schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.authentication_info"
                    },
                    "description": "List of authentication schemes to be used for all the operation elements contained in this package element. If a particular service or operation element has no explicit authentications defined in the authentication defintion file, these authentication schemes are used for authenticating the user."
                },
                "services": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.service_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Information about all service elements contained in this package element that contain authentication information. The key in the {@term map} is the identifier of the service element and the value in the {@term map} is the authentication information for the service element. <p> For an explanation of authentication information containment within service elements, see {@link com.vmware.vapi.metadata.authentication.Service}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.service.operation_get": {
            "required": [
                "service_id",
                "operation_id"
            ],
            "properties": {
                "service_id": {
                    "type": "string",
                    "description": "Identifier of the service element."
                },
                "operation_id": {
                    "type": "string",
                    "description": "Identifier of the operation element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.authentication.service_info": {
            "required": [
                "operations",
                "schemes"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.operation_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Information about all operation elements contained in this service element that contain authentication information. The key in the {@term map} is the identifier of the operation element and the value in the {@term map} is the authentication information for the operation element. <p> For an explanation of containment of authentication information within operation elements, see {@link com.vmware.vapi.metadata.authentication.service.Operation}."
                },
                "schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.authentication.authentication_info"
                    },
                    "description": "List of authentication schemes to be used for all the operation elements contained in this service element. The authentication scheme specified on the package element corresponding to this service element is ignored."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command.formatter_type": {
            "type": "string",
            "enum": [
                "SIMPLE",
                "TABLE",
                "JSON",
                "XML",
                "CSV",
                "HTML"
            ],
            "description": "The {@name FormatterType} {@term enumerated type} defines supported CLI output formatter types. See {@link Info#formatter}."
        },
        "com.vmware.vapi.metadata.cli.command.generic_type": {
            "type": "string",
            "enum": [
                "NONE",
                "OPTIONAL",
                "LIST",
                "OPTIONAL_LIST",
                "LIST_OPTIONAL"
            ],
            "description": "The {@name GenericType} {@term enumerated type} defines generic types supported by {@name Command} {@term service}. See {@link OptionInfo#generic}."
        },
        "com.vmware.vapi.metadata.cli.command.identity": {
            "required": [
                "name",
                "path"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the command."
                },
                "path": {
                    "type": "string",
                    "description": "The dot-separated path of the namespace containing the command in the CLI command tree."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command.info": {
            "required": [
                "identity",
                "service_id",
                "output_field_list",
                "options",
                "operation_id",
                "description"
            ],
            "properties": {
                "formatter": {
                    "description": "The formatter to use when displaying the output of this command.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.formatter_type"
                },
                "identity": {
                    "description": "Basic command identity.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.identity"
                },
                "service_id": {
                    "type": "string",
                    "description": "The service identifier that contains the operations for this CLI command."
                },
                "output_field_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.output_info"
                    },
                    "description": "List of output structure name and output field info."
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.option_info"
                    },
                    "description": "The input for this command."
                },
                "operation_id": {
                    "type": "string",
                    "description": "The operation identifier corresponding to this CLI command."
                },
                "description": {
                    "type": "string",
                    "description": "The text description displayed to the user in help output."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command.option_info": {
            "required": [
                "long_option",
                "type",
                "field_name",
                "description",
                "generic"
            ],
            "properties": {
                "long_option": {
                    "type": "string",
                    "description": "The long option name of the parameter as used by the user."
                },
                "type": {
                    "type": "string",
                    "description": "The type of option. This is used to display information about what kind of data is expected (string, number, boolean, etc.) for the option when they request usage information for a CLI command. For {@term enumerated type} this stores the fully qualified {@term enumerated type} id."
                },
                "field_name": {
                    "type": "string",
                    "description": "The fully qualified name of the option referred to by the operation element in {@link Info#operationId}."
                },
                "short_option": {
                    "type": "string",
                    "description": "The single character value option name."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the option to be displayed to the user when they request usage information for a CLI command."
                },
                "generic": {
                    "description": "This is used to tell the user whether the option is required or optional, or whether they can specify the option multiple times.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.generic_type"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command.output_field_info": {
            "required": [
                "field_name",
                "display_name"
            ],
            "properties": {
                "field_name": {
                    "type": "string",
                    "description": "Name of the {@term field}."
                },
                "display_name": {
                    "type": "string",
                    "description": "Name used by the CLI to display the {@term field}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command.output_info": {
            "required": [
                "output_fields",
                "structure_id"
            ],
            "properties": {
                "output_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.output_field_info"
                    },
                    "description": "The order in which the {@term fields} of the {@term structure} will be displayed by the CLI as well as the names used to display the {@term fields}."
                },
                "structure_id": {
                    "type": "string",
                    "description": "Name of the {@term structure}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.command_get": {
            "required": [
                "identity"
            ],
            "properties": {
                "identity": {
                    "description": "Identifier of the command for which to retreive information.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.command.identity"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.namespace.identity": {
            "required": [
                "name",
                "path"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name displayed to the user for this namespace."
                },
                "path": {
                    "type": "string",
                    "description": "The dot-separated path of the namespace containing the namespace in the CLI node tree. For top-level namespace this will be empty."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.namespace.info": {
            "required": [
                "identity",
                "children",
                "description"
            ],
            "properties": {
                "identity": {
                    "description": "Basic namespace identity.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace.identity"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace.identity"
                    },
                    "description": "The children of this namespace in the tree of CLI namespaces."
                },
                "description": {
                    "type": "string",
                    "description": "The text description displayed to the user in help output."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.cli.namespace_get": {
            "required": [
                "identity"
            ],
            "properties": {
                "identity": {
                    "description": "Identifier of the namespace for which to retreive information.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.cli.namespace.identity"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.component_data": {
            "required": [
                "fingerprint",
                "info"
            ],
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the metamodel metadata of the component component. <p> Metamodel information could change when there is an infrastructure update and new functionality is added to an existing component. <p> Since the data present in {@link ComponentData#info} could be quite large, {@name #fingerprint} provides a convenient way to check if the data for a particular component is updated. <p> You should store the fingerprint associated with a component. After an update, by invoking the {@link com.vmware.vapi.metadata.metamodel.Component#fingerprint} {@term operation}, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can use the {@link com.vmware.vapi.metadata.metamodel.Component#get} to retrieve the new metamodel information for the component."
                },
                "info": {
                    "description": "Metamodel information of the component element. This includes information about all the package elements contained in this component element. <p> The metamodel information about a component could be quite large if there are a lot of package elements contained in this component.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.component_info"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.component_fingerprint": {
            "required": [
                "component_id"
            ],
            "properties": {
                "component_id": {
                    "type": "string",
                    "description": "Identifier of the component element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.component_info": {
            "required": [
                "metadata",
                "name",
                "documentation",
                "packages"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata for the component element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "name": {
                    "type": "string",
                    "description": "Dot separated name of the component element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for a component. It can contain HTML markup and documentation tags (similar to Javadoc tags). The first sentence of the package documentation is a complete sentence that identifies the component by name and summarizes the purpose of the component."
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.package_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel metadata information of all the package elements contained in the component element. The key in the {@term map} is the identifier of the package element and the value in the {@term map} is the metamodel information of the package element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.constant_info": {
            "required": [
                "value",
                "type",
                "documentation"
            ],
            "properties": {
                "value": {
                    "description": "Value of the constant element.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.constant_value"
                },
                "type": {
                    "description": "Type of the constant element.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for the constant element. It can contain HTML markup and documentation tags (similar to Javadoc tags)."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.constant_value": {
            "required": [
                "category"
            ],
            "properties": {
                "primitive_value": {
                    "description": "Primitive value of the constant element.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.primitive_value"
                },
                "list_value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.primitive_value"
                    },
                    "description": "List value of the constant element."
                },
                "category": {
                    "description": "Category of the type of constant value.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.constant_value.category"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.constant_value.category": {
            "type": "string",
            "enum": [
                "PRIMITIVE",
                "LIST"
            ],
            "description": "The {@name Category} {@term enumerated type} defines {@term enumeration values} for the valid kinds of values."
        },
        "com.vmware.vapi.metadata.metamodel.element_map": {
            "required": [
                "elements"
            ],
            "properties": {
                "elements": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_value"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of the metadata elements. The key parameter of the {@term map} is the identifier for the element and the value corresponds to the element value."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.element_value": {
            "required": [
                "type"
            ],
            "properties": {
                "list_value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings value of the metadata element."
                },
                "string_value": {
                    "type": "string",
                    "description": "String value of the metadata element."
                },
                "long_value": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Long value of the metadata element."
                },
                "type": {
                    "description": "Type of the value.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_value.type"
                },
                "structure_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identifiers of the structure elements."
                },
                "structure_id": {
                    "type": "string",
                    "description": "Identifier of the structure element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.element_value.type": {
            "type": "string",
            "enum": [
                "LONG",
                "STRING",
                "STRING_LIST",
                "STRUCTURE_REFERENCE",
                "STRUCTURE_REFERENCE_LIST"
            ],
            "description": "The {@name Type} {@term enumerated type} defines the valid types for values in metadata elements."
        },
        "com.vmware.vapi.metadata.metamodel.enumeration_info": {
            "required": [
                "metadata",
                "values",
                "name",
                "documentation"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for an enumeration element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.enumeration_value_info"
                    },
                    "description": "Metamodel information of all the enumeration value elements contained in this enumeration element. The order of the enumeration value elements in the list is same as the order in which they are defined in the interface definition file."
                },
                "name": {
                    "type": "string",
                    "description": "Dot separated name of the enumeration element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for an enumeration element. It can contain HTML markup and Javadoc tags. The first sentence of the enumeration documentation is a complete sentence that identifies the enumeration by name and summarizes the purpose of the enumeration. The documentation describes the context in which the enumeration is used. <p> The documentation also contains references to the context in which the enumeration is used. But if the enumeration is used in many contexts, the references may not be present."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.enumeration_value_info": {
            "required": [
                "metadata",
                "value",
                "documentation"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Additional metadata for enumeration value in the enumerated type. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "value": {
                    "type": "string",
                    "description": "Value in the enumerated type. All the characters in the string are capitalized."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for an enumeration value. It can contain HTML markup and documentation tags (similar to Javadoc tags). The first statement will be a noun or verb phrase that describes the purpose of the enumeration value."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.error_info": {
            "required": [
                "structure_id",
                "documentation"
            ],
            "properties": {
                "structure_id": {
                    "type": "string",
                    "description": "Identifier for the structure element corresponding to the error that is being reported by the operation."
                },
                "documentation": {
                    "type": "string",
                    "description": "The English language documentation for the service element. It can contain HTML markup and Javadoc tags."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.field_info": {
            "required": [
                "metadata",
                "type",
                "name",
                "documentation"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the field element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "type": {
                    "description": "Type information.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the field element in a canonical format. The format is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for the service element. It can contain HTML markup and Javadoc tags."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.generic_instantiation": {
            "required": [
                "generic_type"
            ],
            "properties": {
                "generic_type": {
                    "description": "The generic type that is being instantiated.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.generic_instantiation.generic_type"
                },
                "map_value_type": {
                    "description": "Type of the value parameter of the map generic type instantiation. The map generic type has a key parameter and value parameter. The type of the key parameter is described by {@link GenericInstantiation#mapKeyType}..",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                },
                "map_key_type": {
                    "description": "Type of the key parameter of the map generic type instantiation. The map generic type has a key parameter and value parameter. The type of the value parameter is described by {@link GenericInstantiation#mapValueType}..",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                },
                "element_type": {
                    "description": "Type of the element parameter if the generic type instantiation is a {@link GenericType#LIST}, {@link GenericType#OPTIONAL} or {@link GenericType#SET}.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.generic_instantiation.generic_type": {
            "type": "string",
            "enum": [
                "LIST",
                "MAP",
                "OPTIONAL",
                "SET"
            ],
            "description": "The {@name GenericType} {@term enumerated type} provides {@term enumeration values} for each of the generic types provided by the infrastructure."
        },
        "com.vmware.vapi.metadata.metamodel.operation_info": {
            "required": [
                "metadata",
                "params",
                "documentation",
                "errors",
                "name",
                "output"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the operation element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for key in the {@term map}."
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.field_info"
                    },
                    "description": "Metamodel information for the parameter elements. The order of the parameters elements in the list is same as the order of the parameters declared in the interface definition file."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for the service element. It can contain HTML markup and Javadoc tags."
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.error_info"
                    },
                    "description": "List of error elements that might be reported by the operation element. If the operation reports the same error for more than one reason, the list contains the error element associated with the error more than once with different documentation elements."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the operation element in a canonical format. The format is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "output": {
                    "description": "Metamodel type for the output element.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.operation_result_info"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.operation_result_info": {
            "required": [
                "metadata",
                "type",
                "documentation"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the service element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "type": {
                    "description": "Type information of the operation result element.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type"
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for the operation result element. It can contain HTML markup and Javadoc tags."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.package_info": {
            "required": [
                "metadata",
                "structures",
                "services",
                "documentation",
                "name",
                "enumerations"
            ],
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the package element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "structures": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.structure_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the structure elements contained in the package element. The key in the {@term map} is the identifier of the structure element and the value in the {@term map} is the metamodel information for the structure element. <p> This does not include the structure elements contained in the service elements that are contained in this package element."
                },
                "services": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.service_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the service elements contained in the package element. The key in the {@term map} is the identifier of the service element and the value in the {@term map} is the metamodel information for the service element."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for a package. It can contain HTML markup and Javadoc tags. The first sentence of the package documentation is a complete sentence that identifies the package by name and summarizes the purpose of the package. <p> The primary purpose of a package documentation is to provide high-level context that will provide a framework in which the users can put the detail about the package contents."
                },
                "name": {
                    "type": "string",
                    "description": "Dot separated name of the package element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "enumerations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.enumeration_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the enumeration elements contained in the package element. The key in the {@term map} is the identifier of the enumeration element and the value in the {@term map} is the metamodel information for the enumeration element. <p> This does not include the enumeration elements that are contained in the service elements of this package element or structure elements of this package element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.primitive_value": {
            "required": [
                "type"
            ],
            "properties": {
                "string_value": {
                    "type": "string",
                    "description": "String value of the constant."
                },
                "double_value": {
                    "format": "double",
                    "type": "number",
                    "description": "Double value of the constant."
                },
                "boolean_value": {
                    "type": "boolean",
                    "description": "Boolean value of the constant."
                },
                "type": {
                    "description": "Type of the constant value.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.primitive_value.type"
                },
                "long_value": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Long value of the constant."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.primitive_value.type": {
            "type": "string",
            "enum": [
                "BOOLEAN",
                "DOUBLE",
                "LONG",
                "STRING"
            ],
            "description": "The {@name Type} {@term enumerated type} defines the valid types for values in constant elements."
        },
        "com.vmware.vapi.metadata.metamodel.service_info": {
            "required": [
                "operations",
                "structures",
                "documentation",
                "constants",
                "metadata",
                "name",
                "enumerations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.operation_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the operation elements contained in the service element. The key in the {@term map} is the identifier of the operation element and the value in the {@term map} is the metamodel information for the operation element."
                },
                "structures": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.structure_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the structure elements contained in the service element. The key in the {@term map} is the identifier of the structure element and the value in the {@term map} is the metamodel information for the structure element."
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for the service element. It can contain HTML markup and Javadoc tags. The first sentence of the service documentation is a complete sentence that identifies the service by name and summarizes the purpose of the service. The remaining part of the documentation provides a summary of how to use the operations defined in the service."
                },
                "constants": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.constant_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the constant elements contained in the service element. The key in the {@term map} is the name of the constant element and the value in the {@term map} is the metamodel information for the contant element."
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the service element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "name": {
                    "type": "string",
                    "description": "Dot separated name of the service element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "enumerations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.enumeration_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the enumeration elements contained in the service element. The key in the {@term map} is the identifier of the enumeration element and the value in the {@term map} is the metamodel information for the enumeration element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.structure_info": {
            "required": [
                "fields",
                "metadata",
                "type",
                "documentation",
                "constants",
                "name",
                "enumerations"
            ],
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.field_info"
                    },
                    "description": "Metamodel information of all the field elements. The order of the field elements in the list matches the order in which the fields are defined in the service."
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.element_map"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Generic metadata elements for the structure element. The key in the {@term map} is the name of the metadata element and the value is the data associated with that metadata element. <p> The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible string values for keys in the {@term map}."
                },
                "type": {
                    "description": "Type of the structure.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.structure_info.type"
                },
                "documentation": {
                    "type": "string",
                    "description": "English language documentation for a structure element. It can contain HTML markup and Javadoc tags. The first sentence of the structure documentation is a complete sentence that identifies the structure by name and summarizes the purpose of the structure."
                },
                "constants": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.constant_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the constant elements contained in the structure element. The key in the {@term map} is the name of the constant element and the value in the {@term map} is the metamodel information for the constant element."
                },
                "name": {
                    "type": "string",
                    "description": "Dot separated name of the structure element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention."
                },
                "enumerations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.enumeration_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Metamodel information of all the enumeration elements contained in the structure element. The key in the {@term map} is the identifier of the enumeration element and the value is the metamodel information of the enumeration element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.structure_info.type": {
            "type": "string",
            "enum": [
                "STRUCTURE",
                "ERROR"
            ],
            "description": "The {@name Type} {@term enumerated type} defines the kind of this structure element. In the interface definition language, structure element and error element have similar characteristics. The difference is that only error elements can be used to describe the {@term errors} of an operation element."
        },
        "com.vmware.vapi.metadata.metamodel.type": {
            "required": [
                "category"
            ],
            "properties": {
                "generic_instantiation": {
                    "description": "Instantiation of one of the generic types available in the interface definition language.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.generic_instantiation"
                },
                "category": {
                    "description": "Category of this type.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type.category"
                },
                "builtin_type": {
                    "description": "Category of the built-in type.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.type.builtin_type"
                },
                "user_defined_type": {
                    "description": "Identifier and type of the user defined type.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.metamodel.user_defined_type"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.metamodel.type.builtin_type": {
            "type": "string",
            "enum": [
                "VOID",
                "BOOLEAN",
                "LONG",
                "DOUBLE",
                "STRING",
                "BINARY",
                "SECRET",
                "DATE_TIME",
                "ID",
                "URI",
                "ANY_ERROR",
                "DYNAMIC_STRUCTURE",
                "OPAQUE"
            ],
            "description": "The {@name BuiltinType} {@term enumerated type} provides {@term enumeration value} for each of the built-in types present in the interface definition language type system."
        },
        "com.vmware.vapi.metadata.metamodel.type.category": {
            "type": "string",
            "enum": [
                "BUILTIN",
                "USER_DEFINED",
                "GENERIC"
            ],
            "description": "The {@name Category} {@term enumerated type} provides {@term enumeration value} for each category of the type."
        },
        "com.vmware.vapi.metadata.metamodel.user_defined_type": {
            "required": [
                "resource_id",
                "resource_type"
            ],
            "properties": {
                "resource_id": {
                    "type": "string",
                    "description": "Identifier of the user defined named type."
                },
                "resource_type": {
                    "type": "string",
                    "description": "Category of the user defined named type. The named type could be a structure element or an enumeration element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.component_data": {
            "required": [
                "fingerprint",
                "info"
            ],
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the metadata of the component. <p> Privilege information could change when there is an infrastructure update. Since the data present in {@link ComponentData#info} could be quite large, {@name #fingerprint} provides a convenient way to check if the data for a particular component is updated. <p> You should store the fingerprint associated with a component. After an update, by invoking the {@link com.vmware.vapi.metadata.privilege.Component#fingerprint} {@term operation}, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can then use the {@link com.vmware.vapi.metadata.privilege.Component#get} to retrieve the new privilege information for the component."
                },
                "info": {
                    "description": "Privilege information of the component. This includes information about all the {@term packages} in the component.",
                    "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.component_info"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.component_fingerprint": {
            "required": [
                "component_id"
            ],
            "properties": {
                "component_id": {
                    "type": "string",
                    "description": "Identifier of the component element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.component_info": {
            "required": [
                "packages"
            ],
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.package_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Privilege information of all the package elements. The key in the {@term map} is the identifier of the package element and the value in the {@term map} is the privilege information for the package element. <p> For an explanation of privilege information containment within package elements, see {@link com.vmware.vapi.metadata.privilege.Package}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.operation_info": {
            "required": [
                "privilege_info",
                "privileges"
            ],
            "properties": {
                "privilege_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.privilege_info"
                    },
                    "description": "Privilege information of all the parameter elements of the operation element. For an explanation of containment of privilege information within parameter elements, see {@link com.vmware.vapi.metadata.privilege.PrivilegeInfo}."
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of all privileges assigned to the operation element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.package_info": {
            "required": [
                "services",
                "privileges"
            ],
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.service_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Information about all service elements contained in this package element that contain privilege information. The key in the {@term map} is the identifier of the service element and the value in the {@term map} is the privilege information for the service element. For an explanation of privilege information containment within service elements, see {@link com.vmware.vapi.metadata.privilege.Service}."
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of default privileges to be used for all the operations present in this package. If a particular operation element has no explicit privileges defined in the privilege definition file, these privileges are used for enforcing authorization."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.privilege_info": {
            "required": [
                "property_path",
                "privileges"
            ],
            "properties": {
                "property_path": {
                    "type": "string",
                    "description": "The {@name #propertyPath} points to an entity that is used in the operation element. An entity can either be present in one of the parameter elements or if a parameter is a structure element, it could also be present in one of the field elements. <p> If the privilege is assigned to an entity used in the parameter, {@name #propertyPath} will just contain the name of the parameter field. If the privilege is assigned to an entity in one of the field elements of a parameter element that is a structure element, then {@name #propertyPath} will contain a path to the field element starting from the parameter name."
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of privileges assigned to the entity that is being referred by {@link #propertyPath}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.service.operation_get": {
            "required": [
                "service_id",
                "operation_id"
            ],
            "properties": {
                "service_id": {
                    "type": "string",
                    "description": "Identifier of the service element."
                },
                "operation_id": {
                    "type": "string",
                    "description": "Identifier of the operation element."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.metadata.privilege.service_info": {
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vapi.metadata.privilege.operation_info"
                            }
                        },
                        "type": "object"
                    },
                    "description": "Information about all operation elements contained in this service element that contain privilege information. The key in the {@term map} is the identifier of the operation element and the value in the {@term map} is the privilege information for the operation element. <p> For an explanation of containment of privilege information within operation elements, see {@link com.vmware.vapi.metadata.privilege.service.Operation}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.component.info": {
            "required": [
                "name",
                "documentation",
                "services"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the component."
                },
                "documentation": {
                    "type": "string",
                    "description": "Component documentation."
                },
                "services": {
                    "description": "{@link Link} to component services list.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.link"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.http_method": {
            "type": "string",
            "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "OPTIONS",
                "PATCH",
                "TRACE",
                "CONNECT",
                "HEAD"
            ],
            "description": "The {@name HttpMethod} {@term enumerated type} defines the valid http methods that can be used with a URL to make a REST call."
        },
        "com.vmware.vapi.rest.navigation.link": {
            "required": [
                "metadata",
                "href",
                "method"
            ],
            "properties": {
                "metadata": {
                    "description": "{@link Reference} to meta data describing the call.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.reference"
                },
                "href": {
                    "type": "string",
                    "description": "URL that should be called."
                },
                "method": {
                    "description": "{@link HttpMethod} to be used.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.http_method"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.operation": {
            "required": [
                "links",
                "metadata",
                "documentation",
                "name",
                "service"
            ],
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.rest.navigation.reference"
                    },
                    "description": "{@link List} of {@link Reference}s to execute the operation."
                },
                "metadata": {
                    "description": "{@link Reference} to meta data about the operation.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.reference"
                },
                "documentation": {
                    "type": "string",
                    "description": "Documentation of the operation."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the operation."
                },
                "service": {
                    "type": "string",
                    "description": "Name of the service where the operations belongs to."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.options_get": {
            "required": [
                "url"
            ],
            "properties": {
                "base_url": {
                    "type": "string",
                    "description": "Base URL."
                },
                "url": {
                    "type": "string",
                    "description": "URL for which operations are retrieved."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.reference": {
            "required": [
                "href",
                "method"
            ],
            "properties": {
                "href": {
                    "type": "string",
                    "description": "URL to be called."
                },
                "method": {
                    "description": "{@link HttpMethod} to be used.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.http_method"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.resource.info": {
            "required": [
                "metadata",
                "href",
                "name",
                "method"
            ],
            "properties": {
                "metadata": {
                    "description": "{@link Reference} to the meta data for the resource.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.reference"
                },
                "href": {
                    "type": "string",
                    "description": "URL to get resource information."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource."
                },
                "method": {
                    "description": "{@link HttpMethod} to get resource information.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.http_method"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.root.info": {
            "required": [
                "components",
                "resources"
            ],
            "properties": {
                "components": {
                    "description": "{@link Link} to component list.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.link"
                },
                "resources": {
                    "description": "{@link Link} to resource list.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.link"
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.rest.navigation.service.info": {
            "required": [
                "metadata",
                "method",
                "name",
                "documentation",
                "href"
            ],
            "properties": {
                "metadata": {
                    "description": "{@link Reference} to the meta data for the service.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.reference"
                },
                "method": {
                    "description": "{@link HttpMethod} to get service information.",
                    "$ref": "#/definitions/com.vmware.vapi.rest.navigation.http_method"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service."
                },
                "documentation": {
                    "type": "string",
                    "description": "Documentation of the service."
                },
                "href": {
                    "type": "string",
                    "description": "URL to get service information."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state": {
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."
                },
                "data": {
                    "type": "object",
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.not_found": {
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."
                },
                "data": {
                    "type": "object",
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.service_unavailable": {
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."
                },
                "data": {
                    "type": "object",
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthenticated": {
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."
                },
                "data": {
                    "type": "object",
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.errors.unauthorized": {
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."
                },
                "data": {
                    "type": "object",
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.std.localizable_message": {
            "required": [
                "default_message",
                "id",
                "args"
            ],
            "properties": {
                "default_message": {
                    "type": "string",
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments to be substituted into a message template."
                }
            },
            "type": "object"
        },
        "com.vmware.vapi.vcenter.activation_cancel": {
            "required": [
                "activation_id"
            ],
            "properties": {
                "activation_id": {
                    "type": "string",
                    "description": "the {@param.name activationId} associated with a vCenter Server task to be canceled."
                }
            },
            "type": "object"
        }
    },
    "schemes": [
        "https",
        "http"
    ],
    "info": {
        "termsOfService": "http://swagger.io/terms/",
        "version": "2.0.0",
        "title": "vapi",
        "description": "vAPI is an extensible API Platform for modelling and delivering APIs/SDKs/CLIs."
    },
    "host": "",
    "basePath": "/rest",
    "tags": [],
    "swagger": "2.0"
}