{
    "schemes": [
        "https",
        "http"
    ],
    "tags": [],
    "definitions": {
        "com.vmware.cis.task.progress": {
            "type": "object",
            "required": [
                "total",
                "completed",
                "message"
            ],
            "properties": {
                "total": {
                    "description": "Total amount of the work for the operation.",
                    "format": "int64",
                    "type": "integer"
                },
                "completed": {
                    "description": "The amount of work completed for the operation. The value can only be incremented.",
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "description": "Message about the work progress.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                }
            }
        },
        "com.vmware.cis.task.status": {
            "description": "The Status enumerated type defines the status values that can be reported for an operation.",
            "enum": [
                "PENDING",
                "RUNNING",
                "BLOCKED",
                "SUCCEEDED",
                "FAILED"
            ],
            "type": "string"
        },
        "com.vmware.vapi.std.dynamic_ID": {
            "type": "object",
            "required": [
                "type",
                "id"
            ],
            "properties": {
                "type": {
                    "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types.",
                    "type": "string"
                },
                "id": {
                    "description": "The identifier for a resource whose type is specified by {@link #type}.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vapi.std.errors.already_exists": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.already_in_desired_state": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.error": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.internal_server_error": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.invalid_argument": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.invalid_element_configuration": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.invalid_element_type": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.not_allowed_in_current_state": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.not_found": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.resource_busy": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.resource_in_use": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.resource_inaccessible": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.service_unavailable": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.timed_out": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.unable_to_allocate_resource": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.unauthenticated": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.unauthorized": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.unsupported": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.errors.unverified_peer": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                }
            }
        },
        "com.vmware.vapi.std.localizable_message": {
            "type": "object",
            "required": [
                "args",
                "default_message",
                "id"
            ],
            "properties": {
                "args": {
                    "description": "Arguments to be substituted into a message template.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.VM.create_spec": {
            "type": "object",
            "required": [
                "guest_OS"
            ],
            "properties": {
                "nics": {
                    "description": "List of Ethernet adapters.\nIf unset, no Ethernet adapters will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.create_spec"
                    },
                    "type": "array"
                },
                "hardware_version": {
                    "description": "Virtual hardware version.\nIf unset, defaults to the most recent version supported by the server.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.version"
                },
                "sata_adapters": {
                    "description": "List of SATA adapters.\nIf unset, any adapters necessary to connect the virtual machine's storage devices will be created; this includes any devices that explicitly specify a SATA host bus adapter, as well as any devices that do not specify a host bus adapter if the guest's preferred adapter type is SATA.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.create_spec"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Virtual machine name.\nIf unset, a default name will be generated by the server.",
                    "type": "string"
                },
                "memory": {
                    "description": "Memory configuration.\nIf unset, guest-specific default values will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.memory.update_spec"
                },
                "cdroms": {
                    "description": "List of CD-ROMs.\nIf unset, no CD-ROM devices will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.create_spec"
                    },
                    "type": "array"
                },
                "boot": {
                    "description": "Boot configuration.\nIf unset, guest-specific default values will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.create_spec"
                },
                "parallel_ports": {
                    "description": "List of parallel ports.\nIf unset, no parallel ports will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.create_spec"
                    },
                    "type": "array"
                },
                "disks": {
                    "description": "List of disks.\nIf unset, a single blank virtual disk of a guest-specific size will be created on the same storage as the virtual machine configuration, and will use a guest-specific host bus adapter type. If the guest-specific size is 0, no virtual disk will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.create_spec"
                    },
                    "type": "array"
                },
                "placement": {
                    "description": "Virtual machine placement information.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose suitable resources on which to place the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.VM.placement_spec"
                },
                "scsi_adapters": {
                    "description": "List of SCSI adapters.\nIf unset, any adapters necessary to connect the virtual machine's storage devices will be created; this includes any devices that explicitly specify a SCSI host bus adapter, as well as any devices that do not specify a host bus adapter if the guest's preferred adapter type is SCSI. The type of the SCSI adapter will be a guest-specific default type.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.create_spec"
                    },
                    "type": "array"
                },
                "guest_OS": {
                    "description": "Guest OS.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest_OS"
                },
                "storage_policy": {
                    "description": "The VM.StoragePolicySpec structure contains information about the storage policy that is to be associated with the virtual machine home (which contains the configuration and log files).\nIf unset the datastore default storage policy (if applicable) is applied. Currently a default storage policy is only supported by object datastores : VVol and vSAN. For non-object datastores, if unset then no storage policy would be associated with the virtual machine home.",
                    "$ref": "#/definitions/com.vmware.vcenter.VM.storage_policy_spec"
                },
                "serial_ports": {
                    "description": "List of serial ports.\nIf unset, no serial ports will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.create_spec"
                    },
                    "type": "array"
                },
                "boot_devices": {
                    "description": "Boot device configuration.\nIf unset, a server-specific boot sequence will be used.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.entry_create_spec"
                    },
                    "type": "array"
                },
                "cpu": {
                    "description": "CPU configuration.\nIf unset, guest-specific default values will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cpu.update_spec"
                },
                "floppies": {
                    "description": "List of floppy drives.\nIf unset, no floppy drives will be created.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.create_spec"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.VM.filter_spec": {
            "type": "object",
            "properties": {
                "power_states": {
                    "description": "Power states that a virtual machine must be in to match the filter (see Power.Info.state.\nIf unset or empty, virtual machines in any power state match the filter.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.power.state"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "hosts": {
                    "description": "Hosts that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines on any host match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "vms": {
                    "description": "Identifiers of virtual machines that can match the filter.\nIf unset or empty, virtual machines with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: VirtualMachine.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "resource_pools": {
                    "description": "Resource pools that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any resource pool match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "names": {
                    "description": "Names that virtual machines must have to match the filter (see VM.Info.name).\nIf unset or empty, virtual machines with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "clusters": {
                    "description": "Clusters that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any cluster match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.VM.info": {
            "type": "object",
            "required": [
                "nics",
                "sata_adapters",
                "name",
                "memory",
                "hardware",
                "cdroms",
                "boot",
                "parallel_ports",
                "disks",
                "power_state",
                "scsi_adapters",
                "guest_OS",
                "serial_ports",
                "boot_devices",
                "cpu",
                "floppies"
            ],
            "properties": {
                "nics": {
                    "description": "List of Ethernet adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "sata_adapters": {
                    "description": "List of SATA adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Virtual machine name.",
                    "type": "string"
                },
                "memory": {
                    "description": "Memory configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.memory.info"
                },
                "hardware": {
                    "description": "Virtual hardware version information.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.info"
                },
                "cdroms": {
                    "description": "List of CD-ROMs.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "boot": {
                    "description": "Boot configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.info"
                },
                "parallel_ports": {
                    "description": "List of parallel ports.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "disks": {
                    "description": "List of disks.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "power_state": {
                    "description": "Power state of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.power.state"
                },
                "scsi_adapters": {
                    "description": "List of SCSI adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "guest_OS": {
                    "description": "Guest OS.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest_OS"
                },
                "serial_ports": {
                    "description": "List of serial ports.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.info"
                            }
                        }
                    },
                    "type": "array"
                },
                "boot_devices": {
                    "description": "Boot device configuration. If the list has no entries, a server-specific default boot sequence is used.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.entry"
                    },
                    "type": "array"
                },
                "cpu": {
                    "description": "CPU configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cpu.info"
                },
                "floppies": {
                    "description": "List of floppy drives.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.info"
                            }
                        }
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.VM.placement_spec": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine should be placed.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the virtual machine; if a folder cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine should be placed.\nThis field is currently required if both VM.PlacementSpec.host and VM.PlacementSpec.cluster are unset. In the future, if this field is unset, the system will attempt to choose a suitable resource pool for the virtual machine; if a resource pool cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster into which the virtual machine should be placed. \n If VM.PlacementSpec.cluster and VM.PlacementSpec.resource-pool are both specified, VM.PlacementSpec.resource-pool must belong to VM.PlacementSpec.cluster. \n\n If VM.PlacementSpec.cluster and VM.PlacementSpec.host are both specified, VM.PlacementSpec.host must be a member of VM.PlacementSpec.cluster.\n\nIf VM.PlacementSpec.resource-pool or VM.PlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.",
                    "type": "string"
                },
                "datastore": {
                    "description": "Datastore on which the virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are created as part of the virtual machine creation operation.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose suitable storage for the virtual machine; if storage cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine should be placed. \n If VM.PlacementSpec.host and VM.PlacementSpec.resource-pool are both specified, VM.PlacementSpec.resource-pool must belong to VM.PlacementSpec.host. \n\n If VM.PlacementSpec.host and VM.PlacementSpec.cluster are both specified, VM.PlacementSpec.host must be a member of VM.PlacementSpec.cluster.\n\nThis field may be unset if VM.PlacementSpec.resource-pool or VM.PlacementSpec.cluster is specified. If unset, the system will attempt to choose a suitable host for the virtual machine; if a host cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.VM.storage_policy_spec": {
            "type": "object",
            "required": [
                "policy"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.VM.summary": {
            "type": "object",
            "required": [
                "vm",
                "name",
                "power_state"
            ],
            "properties": {
                "vm": {
                    "description": "Identifier of the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine.",
                    "type": "string"
                },
                "memory_size_MiB": {
                    "description": "Memory size in mebibytes.\nThis field will be unset if the virtual machine configuration is not available. For example, the configuration information would be unavailable if the server is unable to access the virtual machine files on disk, and is often also unavailable during the intial phases of virtual machine creation.",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the Virtual machine.",
                    "type": "string"
                },
                "power_state": {
                    "description": "Power state of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.power.state"
                },
                "cpu_count": {
                    "description": "Number of CPU cores.\nThis field will be unset if the virtual machine configuration is not available. For example, the configuration information would be unavailable if the server is unable to access the virtual machine files on disk, and is often also unavailable during the intial phases of virtual machine creation.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.VM_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Virtual machine specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.VM.create_spec"
                }
            }
        },
        "com.vmware.vcenter.cluster.filter_spec": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Names that clusters must have to match the filter (see Cluster.Info.name).\nIf unset or empty, clusters with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the cluster for the cluster to match the filter.\nIf unset or empty, clusters in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "clusters": {
                    "description": "Identifiers of clusters that can match the filter.\nIf unset or empty, clusters with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the cluster for the cluster to match the filter.\nIf unset or empty, clusters in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.cluster.info": {
            "type": "object",
            "required": [
                "resource_pool",
                "name"
            ],
            "properties": {
                "resource_pool": {
                    "description": "Identifier of the root resource pool of the cluster\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the cluster",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.cluster.summary": {
            "type": "object",
            "required": [
                "ha_enabled",
                "cluster",
                "name",
                "drs_enabled"
            ],
            "properties": {
                "ha_enabled": {
                    "description": "Flag indicating whether the vSphere HA feature is enabled for the cluster.",
                    "type": "boolean"
                },
                "cluster": {
                    "description": "Identifier of the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the cluster.",
                    "type": "string"
                },
                "drs_enabled": {
                    "description": "Flag indicating whether the vSphere DRS service is enabled for the cluster.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.datacenter.create_spec": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "folder": {
                    "description": "Datacenter folder in which the new datacenter should be created.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the datacenter; if a folder cannot be chosen, the datacenter creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the datacenter to be created.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.datacenter.filter_spec": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Names that datacenters must have to match the filter (see Datacenter.Info.name).\nIf unset or empty, datacenters with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Identifiers of datacenters that can match the filter.\nIf unset or empty, datacenters with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the datacenters for the datacenter to match the filter.\nIf unset or empty, datacenters in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.datacenter.info": {
            "type": "object",
            "required": [
                "datastore_folder",
                "name",
                "network_folder",
                "host_folder",
                "vm_folder"
            ],
            "properties": {
                "datastore_folder": {
                    "description": "The root datastore folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the datacenter.",
                    "type": "string"
                },
                "network_folder": {
                    "description": "The root network folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "host_folder": {
                    "description": "The root host and cluster folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "vm_folder": {
                    "description": "The root virtual machine folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.datacenter.summary": {
            "type": "object",
            "required": [
                "name",
                "datacenter"
            ],
            "properties": {
                "name": {
                    "description": "Name of the datacenter.",
                    "type": "string"
                },
                "datacenter": {
                    "description": "Identifier of the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.datacenter_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new datacenter to be created.",
                    "$ref": "#/definitions/com.vmware.vcenter.datacenter.create_spec"
                }
            }
        },
        "com.vmware.vcenter.datastore.filter_spec": {
            "type": "object",
            "properties": {
                "types": {
                    "description": "Types that datastores must have to match the filter (see Datastore.Summary.type).\nIf unset or empty, datastores with any type match the filter.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.datastore.type"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "names": {
                    "description": "Names that datastores must have to match the filter (see Datastore.Info.name).\nIf unset or empty, datastores with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datastores": {
                    "description": "Identifiers of datastores that can match the filter.\nIf unset or empty, datastores with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datastore. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datastore.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the datastore for the datastore to match the filter.\nIf unset or empty, datastores in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the datastore for the datastore to match the filter.\nIf unset or empty, datastores in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.datastore.info": {
            "type": "object",
            "required": [
                "name",
                "multiple_host_access",
                "accessible",
                "thin_provisioning_supported",
                "type"
            ],
            "properties": {
                "free_space": {
                    "description": "Available space of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the available space of this datastore is not known.",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the datastore.",
                    "type": "string"
                },
                "multiple_host_access": {
                    "description": "Whether or not ore than one host in the datacenter has been configured with access to the datastore.",
                    "type": "boolean"
                },
                "accessible": {
                    "description": "Whether or not this datastore is accessible.",
                    "type": "boolean"
                },
                "thin_provisioning_supported": {
                    "description": "Whether or not the datastore supports thin provisioning on a per file basis. When thin provisioning is used, backing storage is lazily allocated.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Type (Type) of the datastore.",
                    "$ref": "#/definitions/com.vmware.vcenter.datastore.type"
                }
            }
        },
        "com.vmware.vcenter.datastore.summary": {
            "type": "object",
            "required": [
                "datastore",
                "type",
                "name"
            ],
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore.",
                    "type": "string"
                },
                "type": {
                    "description": "Type (Type) of the datatore.",
                    "$ref": "#/definitions/com.vmware.vcenter.datastore.type"
                },
                "name": {
                    "description": "Name of the datastore.",
                    "type": "string"
                },
                "capacity": {
                    "description": "Capacity of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the capacity of this datastore is not known.",
                    "format": "int64",
                    "type": "integer"
                },
                "free_space": {
                    "description": "Available space of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the available space of this datastore is not known.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.datastore.type": {
            "enum": [
                "VMFS",
                "NFS",
                "NFS41",
                "CIFS",
                "VSAN",
                "VFFS",
                "VVOL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.appliance_state": {
            "description": "The {@name ApplianceState} {@term enumerated type} defines the various states the vCenter Appliance can be in.",
            "enum": [
                "NOT_INITIALIZED",
                "INITIALIZED",
                "CONFIG_IN_PROGRESS",
                "QUESTION_RAISED",
                "FAILED",
                "CONFIGURED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.appliance_type": {
            "description": "The {@name ApplianceType} {@term enumerated type} defines the vCenter appliance types.",
            "enum": [
                "VCSA_EMBEDDED",
                "VCSA_EXTERNAL",
                "PSC_EXTERNAL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.check_info": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "result": {
                    "description": "Result of the check.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.notifications"
                },
                "status": {
                    "description": "Status of the check.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_status"
                }
            }
        },
        "com.vmware.vcenter.deployment.check_status": {
            "description": "The {@name CheckStatus} {@term enumerated type} defines the status of the checks.",
            "enum": [
                "SUCCESS",
                "FAILED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.history_migration_option": {
            "description": "The {@name HistoryMigrationOption} {@term enumerated type} defines the vCenter history migration option choices.",
            "enum": [
                "EVENTS_TASKS",
                "ALL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.history_migration_spec": {
            "type": "object",
            "required": [
                "data_set"
            ],
            "properties": {
                "defer_import": {
                    "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process.",
                    "type": "boolean"
                },
                "data_set": {
                    "description": "Defines what part of vCenter historical data will be migrated along with core data.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.history_migration_option"
                }
            }
        },
        "com.vmware.vcenter.deployment.import_history.create_spec": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Description of the vCenter history import task.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the vCenter history import task",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.import_history.info": {
            "type": "object",
            "required": [
                "status",
                "description",
                "service",
                "operation",
                "cancelable"
            ],
            "properties": {
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "progress": {
                    "description": "The progress info of this task.",
                    "$ref": "#/definitions/com.vmware.cis.task.progress"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.cis.task.status"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "result": {
                    "description": "Result of the operation. If an operation reports partial results before it completes, this {@term field} could be {@term set} before the {@link com.vmware.cis.task.CommonInfo#status} has the value {@link Status#SUCCEEDED}. The value could change as the operation progresses.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.notifications"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.import_history_start": {
            "type": "object",
            "properties": {
                "spec": {
                    "description": "An optional {@name CreateSpec} info that can be passed for creating a new historical data import task and starts it.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.import_history.create_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.info": {
            "type": "object",
            "required": [
                "service",
                "description",
                "status",
                "operation",
                "cancelable",
                "state"
            ],
            "properties": {
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "progress": {
                    "description": "The progress info of the current appliance status.",
                    "$ref": "#/definitions/com.vmware.cis.task.progress"
                },
                "subtask_order": {
                    "description": "The ordered list of subtasks for this deployment operation.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.cis.task.status"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "state": {
                    "description": "State of the vCenter Server Appliance.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.appliance_state"
                },
                "subtasks": {
                    "description": "The map of the deployment subtasks and their status infomation.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.deployment.task"
                            }
                        }
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.install_spec": {
            "type": "object",
            "properties": {
                "psc": {
                    "description": "Spec used to configure a Platform Services Controller. This field describes how the Platform Services Controller appliance should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.install.psc_spec"
                },
                "auto_answer": {
                    "description": "Use the default option for any questions that may come up during appliance configuration.",
                    "type": "boolean"
                },
                "vcsa_external": {
                    "description": "Spec used to configure a vCenter Server registered with an external PSC. This fields represent the remote external PSC that the configuring vCenter Server will be registering with.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.remote_psc_spec"
                },
                "vcsa_embedded": {
                    "description": "Spec used to configure an embedded vCenter Server. This field describes how the embedded vCenter Server appliance should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.install.vcsa_embedded_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.psc.replicated_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Information to configure a replicated PSC.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.replicated_psc_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.psc.standalone_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Information to configure a non-replicated PSC.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.standalone_psc_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.psc_spec": {
            "type": "object",
            "required": [
                "ceip_enabled"
            ],
            "properties": {
                "replicated": {
                    "description": "Spec used to configure a replicated Platform Services Controller. This field describes how the replicated PSC should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.replicated_psc_spec"
                },
                "standalone": {
                    "description": "Spec used to configure a standalone Platform Services Controller. This field describes how the standalone PSC should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.standalone_psc_spec"
                },
                "ceip_enabled": {
                    "description": "Customer experience improvement program should be enabled or disabled.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.remote_psc_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Information to connect to the remote PSC.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.remote_psc_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.install.vcsa_embedded_spec": {
            "type": "object",
            "required": [
                "ceip_enabled"
            ],
            "properties": {
                "replicated": {
                    "description": "Spec used to configure a replicated embedded vCenter Server. This field describes how the replicated vCenter Server appliance should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.replicated_spec"
                },
                "standalone": {
                    "description": "Spec used to configure a standalone embedded vCenter Server. This field describes how the standalone vCenter Server appliance should be configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.standalone_spec"
                },
                "ceip_enabled": {
                    "description": "Whether CEIP should be enabled or disabled.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.install_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "InstallSpec parameters to run sanity check with.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.install.install_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.install_start": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "InstallSpec parameters to configure the appliance install.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.install.install_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.location_spec": {
            "type": "object",
            "required": [
                "hostname",
                "username",
                "password"
            ],
            "properties": {
                "hostname": {
                    "description": "The IP address or DNS resolvable name of the container.",
                    "type": "string"
                },
                "ssl_verify": {
                    "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false.",
                    "type": "boolean"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 thumbprint of the server SSL certificate will be used for verification.",
                    "type": "string"
                },
                "username": {
                    "description": "The administrator account on the host.",
                    "type": "string"
                },
                "password": {
                    "description": "The administrator account password.",
                    "format": "password",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the container.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.deployment.notification": {
            "type": "object",
            "required": [
                "message",
                "id"
            ],
            "properties": {
                "time": {
                    "description": "The time the notification was raised/found.",
                    "format": "date-time",
                    "type": "string"
                },
                "resolution": {
                    "description": "The resolution message, if any.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "message": {
                    "description": "The notification message.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "id": {
                    "description": "The notification id.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.notifications": {
            "type": "object",
            "properties": {
                "warnings": {
                    "description": "Warning notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.deployment.notification"
                    },
                    "type": "array"
                },
                "errors": {
                    "description": "Error notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.deployment.notification"
                    },
                    "type": "array"
                },
                "info": {
                    "description": "Info notification messages reported.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.deployment.notification"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.deployment.question.answer_spec": {
            "type": "object",
            "required": [
                "answer_val",
                "question_id"
            ],
            "properties": {
                "answer_val": {
                    "description": "The answer value.",
                    "type": "string"
                },
                "question_id": {
                    "description": "Id of the question being answered.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.question.info": {
            "type": "object",
            "required": [
                "questions"
            ],
            "properties": {
                "questions": {
                    "description": "One or more questions raised during the deployment.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.deployment.question.question"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.deployment.question.question": {
            "type": "object",
            "required": [
                "default_answer",
                "possible_answers",
                "type",
                "question",
                "id"
            ],
            "properties": {
                "default_answer": {
                    "description": "Default answer value.",
                    "type": "string"
                },
                "possible_answers": {
                    "description": "Possible answers values.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Type of the question raised.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.question.question_type"
                },
                "question": {
                    "description": "Message describing the question.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "id": {
                    "description": "Id of the question raised.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.question.question_type": {
            "description": "The {@name QuestionType} {@term enumerated type} defines the type of the question raised.",
            "enum": [
                "YES_NO",
                "OK_CANCEL",
                "ABORT_RETRY_IGNORE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.deployment.question_answer": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "AnswerSpec with the answer to the raised question.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.question.answer_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.remote_psc_spec": {
            "type": "object",
            "required": [
                "psc_hostname",
                "sso_admin_password"
            ],
            "properties": {
                "ssl_verify": {
                    "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false.",
                    "type": "boolean"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true.",
                    "type": "string"
                },
                "psc_hostname": {
                    "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the external PSC appliance.",
                    "format": "int64",
                    "type": "integer"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.replicated_psc_spec": {
            "type": "object",
            "required": [
                "sso_admin_password",
                "partner_hostname"
            ],
            "properties": {
                "sso_site_name": {
                    "description": "The SSO sitename that will be used in PSC replication.",
                    "type": "string"
                },
                "ssl_verify": {
                    "description": "SSL verification should be enabled or disabled.",
                    "type": "boolean"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 thumbprint of the server SSL certificate will be used for verification.",
                    "type": "string"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "type": "string"
                },
                "partner_hostname": {
                    "description": "The IP address or DNS resolvable name of the partner PSC appliance.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the external PSC appliance.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.deployment.replicated_spec": {
            "type": "object",
            "required": [
                "partner_hostname",
                "sso_admin_password"
            ],
            "properties": {
                "ssl_verify": {
                    "description": "SSL verification should be enabled or disabled.",
                    "type": "boolean"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 thumbprint of the server SSL certificate will be used for verification.",
                    "type": "string"
                },
                "partner_hostname": {
                    "description": "The IP address or DNS resolvable name of the partner PSC appliance.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the external PSC appliance.",
                    "format": "int64",
                    "type": "integer"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.standalone_psc_spec": {
            "type": "object",
            "required": [
                "sso_admin_password"
            ],
            "properties": {
                "sso_site_name": {
                    "description": "The SSO site name used for this PSC.",
                    "type": "string"
                },
                "sso_domain_name": {
                    "description": "The SSO domain name to be used to configure this appliance.",
                    "type": "string"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.standalone_spec": {
            "type": "object",
            "required": [
                "sso_admin_password"
            ],
            "properties": {
                "sso_domain_name": {
                    "description": "The SSO domain name to be used to configure this appliance.",
                    "type": "string"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.deployment.task": {
            "type": "object",
            "required": [
                "status",
                "description",
                "service",
                "operation",
                "cancelable"
            ],
            "properties": {
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/com.vmware.vapi.std.dynamic_ID"
                },
                "progress": {
                    "description": "The progress info of this deployment task.",
                    "$ref": "#/definitions/com.vmware.cis.task.progress"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.cis.task.status"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "result": {
                    "description": "Result of the task.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.notifications"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "format": "date-time",
                    "type": "string"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade.psc_spec": {
            "type": "object",
            "required": [
                "ceip_enabled"
            ],
            "properties": {
                "ceip_enabled": {
                    "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller upgrade.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade.source_appliance_spec": {
            "type": "object",
            "required": [
                "hostname",
                "root_password",
                "sso_admin_username",
                "sso_admin_password"
            ],
            "properties": {
                "hostname": {
                    "description": "The IP address or DNS resolvable name of the source appliance.",
                    "type": "string"
                },
                "ssl_verify": {
                    "description": "SSL verification should be enabled or disabled for the source appliance validations. By default it is enabled and will use SSL certificate for verification. If thumbprint is provided, will use thumbprint for the verification.",
                    "type": "boolean"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 thumbprint of the server SSL certificate will be used for verification.",
                    "type": "string"
                },
                "root_password": {
                    "description": "The password of the root user on the source appliance.",
                    "format": "password",
                    "type": "string"
                },
                "ssh_thumbprint": {
                    "description": "MD5 thumbprint of the server SSH key will be used for verification.",
                    "type": "string"
                },
                "sso_admin_username": {
                    "description": "The SSO administrator account on the source appliance.",
                    "type": "string"
                },
                "ssh_verify": {
                    "description": "Appliance SSH verification should be enabled or disabled. By default it is disabled and will not use any verification. If thumbprint is provided, thumbprint verification will be performed.",
                    "type": "boolean"
                },
                "sso_admin_password": {
                    "description": "The SSO administrator account password.",
                    "format": "password",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the source appliance.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade.upgrade_spec": {
            "type": "object",
            "required": [
                "source_location",
                "source_appliance"
            ],
            "properties": {
                "psc": {
                    "description": "Information that are specific to this Platform Services Controller.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.psc_spec"
                },
                "source_location": {
                    "description": "Source location spec.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.location_spec"
                },
                "auto_answer": {
                    "description": "Use the default option for any questions that may come up during appliance configuration.",
                    "type": "boolean"
                },
                "history": {
                    "description": "Determines how vCenter history will be migrated during the upgrade process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.history_migration_spec"
                },
                "vcsa_embedded": {
                    "description": "Information that are specific to this embedded vCenter Server.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.vcsa_embedded_spec"
                },
                "source_appliance": {
                    "description": "Source appliance spec.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.source_appliance_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade.vcsa_embedded_spec": {
            "type": "object",
            "required": [
                "ceip_enabled"
            ],
            "properties": {
                "ceip_enabled": {
                    "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server upgrade.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "UpgradeSpec parameters to run sanity check on.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.upgrade_spec"
                }
            }
        },
        "com.vmware.vcenter.deployment.upgrade_start": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "UpgradeSpec parameters to configure the appliance upgrade.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.upgrade_spec"
                }
            }
        },
        "com.vmware.vcenter.folder.filter_spec": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Names that folders must have to match the filter (see Folder.Summary.name).\nIf unset or empty, folders with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the folder for the folder to match the filter.\nIf unset or empty, folder in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "type": {
                    "description": "Type that folders must have to match the filter (see Folder.Summary.type).\nIf unset, folders with any type match the filter.",
                    "$ref": "#/definitions/com.vmware.vcenter.folder.type"
                },
                "folders": {
                    "description": "Identifiers of folders that can match the filter.\nIf unset or empty, folders with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "parent_folders": {
                    "description": "Folders that must contain the folder for the folder to match the filter.\nIf unset or empty, folder in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.folder.summary": {
            "type": "object",
            "required": [
                "folder",
                "type",
                "name"
            ],
            "properties": {
                "folder": {
                    "description": "Identifier of the folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "type": {
                    "description": "Type (Type) of the vCenter Server folder.",
                    "$ref": "#/definitions/com.vmware.vcenter.folder.type"
                },
                "name": {
                    "description": "Name of the vCenter Server folder.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.folder.type": {
            "description": "The Folder.Type enumerated type defines the type of a vCenter Server folder. The type of a folder determines what what kinds of children can be contained in the folder.",
            "enum": [
                "DATACENTER",
                "DATASTORE",
                "HOST",
                "NETWORK",
                "VIRTUAL_MACHINE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.guest.customization_specs.filter_spec": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name).\nIf unset or empty, guest customization specifications with any name match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.guest.CustomizationSpec.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "OS_type": {
                    "description": "Guest operating system type that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.os-type).\nIf unset, guest customization specifications with any guest operating system type match the filter.",
                    "$ref": "#/definitions/com.vmware.vcenter.guest.customization_specs.os_type"
                }
            }
        },
        "com.vmware.vcenter.guest.customization_specs.os_type": {
            "description": "The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported.",
            "enum": [
                "WINDOWS",
                "LINUX"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.guest.customization_specs.summary": {
            "type": "object",
            "required": [
                "description",
                "name",
                "last_modified",
                "OS_type"
            ],
            "properties": {
                "description": {
                    "description": "Description of the guest customization specification.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the guest customization specification.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.guest.CustomizationSpec.",
                    "type": "string"
                },
                "last_modified": {
                    "description": "Date and tme when this guest customization specification was last modified.",
                    "format": "date-time",
                    "type": "string"
                },
                "OS_type": {
                    "description": "Guest operating system type for which that this guest customization specification applies.",
                    "$ref": "#/definitions/com.vmware.vcenter.guest.customization_specs.os_type"
                }
            }
        },
        "com.vmware.vcenter.host.connection_state": {
            "enum": [
                "CONNECTED",
                "DISCONNECTED",
                "NOT_RESPONDING"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.host.create_spec": {
            "type": "object",
            "required": [
                "hostname",
                "password",
                "user_name",
                "thumbprint_verification"
            ],
            "properties": {
                "hostname": {
                    "description": "The IP address or DNS resolvable name of the host.",
                    "type": "string"
                },
                "folder": {
                    "description": "Host and cluster folder in which the new standalone host should be created.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the host; if a folder cannot be chosen, the host creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder.",
                    "type": "string"
                },
                "port": {
                    "description": "The port of the host.\nIf unset, port 443 will be used.",
                    "format": "int64",
                    "type": "integer"
                },
                "thumbprint": {
                    "description": "The thumbprint of the SSL certificate, which the host is expected to have. The thumbprint is always computed using the SHA1 hash and is the string representation of that hash in the format: xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx where, 'x' represents a hexadecimal digit.\nThis field is optional and it is only relevant when the value of Host.CreateSpec.thumbprint-verification is THUMBPRINT.",
                    "type": "string"
                },
                "force_add": {
                    "description": "Whether host should be added to the vCenter Server even if it is being managed by another vCenter Server. The original vCenterServer loses connection to the host.\nIf unset, forceAdd is default to false.",
                    "type": "boolean"
                },
                "password": {
                    "description": "The password for the administrator account on the host.",
                    "format": "password",
                    "type": "string"
                },
                "user_name": {
                    "description": "The administrator account on the host.",
                    "type": "string"
                },
                "thumbprint_verification": {
                    "description": "Type of host's SSL certificate verification to be done.",
                    "$ref": "#/definitions/com.vmware.vcenter.host.create_spec.thumbprint_verification"
                }
            }
        },
        "com.vmware.vcenter.host.create_spec.thumbprint_verification": {
            "description": "The Host.CreateSpec.ThumbprintVerification enumerated type defines the thumbprint verification schemes for a host's SSL certificate.",
            "enum": [
                "NONE",
                "THUMBPRINT"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.host.filter_spec": {
            "type": "object",
            "properties": {
                "hosts": {
                    "description": "Identifiers of hosts that can match the filter.\nIf unset or empty, hosts with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "standalone": {
                    "description": "If true, only hosts that are not part of a cluster can match the filter, and if false, only hosts that are are part of a cluster can match the filter.\nIf unset Hosts can match filter independent of whether they are part of a cluster or not. If this field is true and Host.FilterSpec.clusters os not empty, no hosts will match the filter.",
                    "type": "boolean"
                },
                "names": {
                    "description": "Names that hosts must have to match the filter (see Host.Summary.name).\nIf unset or empty, hosts with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "connection_states": {
                    "description": "Connection states that a host must be in to match the filter (see Host.Summary.connection-state.\nIf unset or empty, hosts in any connection state match the filter.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.host.connection_state"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "clusters": {
                    "description": "Clusters that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any cluster and hosts that are not in a cluster match the filter. If this field is not empty and Host.FilterSpec.standalone is true, no hosts will match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.host.power_state": {
            "description": "The Host.PowerState enumerated type defines the power states of a host.",
            "enum": [
                "POWERED_ON",
                "POWERED_OFF",
                "STANDBY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.host.summary": {
            "type": "object",
            "required": [
                "connection_state",
                "name",
                "host"
            ],
            "properties": {
                "connection_state": {
                    "description": "Connection status of the host",
                    "$ref": "#/definitions/com.vmware.vcenter.host.connection_state"
                },
                "name": {
                    "description": "Name of the host.",
                    "type": "string"
                },
                "power_state": {
                    "description": "Power state of the host\nThis field is optional and it is only relevant when the value of Host.Summary.connection-state is CONNECTED.",
                    "$ref": "#/definitions/com.vmware.vcenter.host.power_state"
                },
                "host": {
                    "description": "Identifier of the host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.host_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new host to be created.",
                    "$ref": "#/definitions/com.vmware.vcenter.host.create_spec"
                }
            }
        },
        "com.vmware.vcenter.inventory.datastore.info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "Type of the datastore.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.inventory.datastore_find": {
            "type": "object",
            "required": [
                "datastores"
            ],
            "properties": {
                "datastores": {
                    "description": "Identifiers of the datastores for which information will be returned.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.inventory.network.info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "Type of the vCenter Server network.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.inventory.network_find": {
            "type": "object",
            "required": [
                "networks"
            ],
            "properties": {
                "networks": {
                    "description": "Identifiers of the vCenter Server networks for which information will be returned.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.iso.image_mount": {
            "type": "object",
            "required": [
                "library_item",
                "vm"
            ],
            "properties": {
                "vm": {
                    "description": "The identifier of the virtual machine where the specified ISO image will be mounted.",
                    "type": "string"
                },
                "library_item": {
                    "description": "The identifier of the library item having the ISO image to mount on the virtual machine.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.iso.image_unmount": {
            "type": "object",
            "required": [
                "vm",
                "cdrom"
            ],
            "properties": {
                "vm": {
                    "description": "The identifier of the virtual machine from which to unmount the virtual CD-ROM.",
                    "type": "string"
                },
                "cdrom": {
                    "description": "The device identifier of the CD-ROM.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.network.filter_spec": {
            "type": "object",
            "properties": {
                "types": {
                    "description": "Types that networks must have to match the filter (see Network.Summary.type).\nIf unset, networks with any type match the filter.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.network.type"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "names": {
                    "description": "Names that networks must have to match the filter (see Network.Summary.name).\nIf unset or empty, networks with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the network for the network to match the filter.\nIf unset or empty, networks in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "networks": {
                    "description": "Identifiers of networks that can match the filter.\nIf unset or empty, networks with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "folders": {
                    "description": "Folders that must contain the network for the network to match the filter.\nIf unset or empty, networks in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.network.summary": {
            "type": "object",
            "required": [
                "name",
                "network",
                "type"
            ],
            "properties": {
                "name": {
                    "description": "Name of the network.",
                    "type": "string"
                },
                "network": {
                    "description": "Identifier of the network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network.",
                    "type": "string"
                },
                "type": {
                    "description": "Type (Type) of the vCenter Server network.",
                    "$ref": "#/definitions/com.vmware.vcenter.network.type"
                }
            }
        },
        "com.vmware.vcenter.network.type": {
            "enum": [
                "STANDARD_PORTGROUP",
                "DISTRIBUTED_PORTGROUP",
                "OPAQUE_NETWORK"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.ovf.capability.capability_info": {
            "type": "object",
            "required": [
                "import_ova",
                "export_ova"
            ],
            "properties": {
                "import_ova": {
                    "description": "Boolean flag to show whether or not import OVA template is supported.",
                    "type": "boolean"
                },
                "export_ova": {
                    "description": "Boolean flag to show whether or not export OVA template is supported.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.ovf.disk_provisioning_type": {
            "description": "The {@name DiskProvisioningType} {@term enumerated type} defines the virtual disk provisioning types that can be set for a disk on the target platform.",
            "enum": [
                "thin",
                "thick",
                "eagerZeroedThick"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.ovf.export_flag.info": {
            "type": "object",
            "required": [
                "description",
                "option"
            ],
            "properties": {
                "description": {
                    "description": "Localizable description of the export flag.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "option": {
                    "description": "The name of the export flag that is supported by the server.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.import_flag.info": {
            "type": "object",
            "required": [
                "description",
                "option"
            ],
            "properties": {
                "description": {
                    "description": "Localizable description of the import flag.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "option": {
                    "description": "The name of the import flag that is supported by the deployment platform.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.create_result": {
            "type": "object",
            "required": [
                "succeeded"
            ],
            "properties": {
                "error": {
                    "description": "Errors, warnings, and informational messages produced by the {@name LibraryItem#create} {@term operation}.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.result_info"
                },
                "ovf_library_item_id": {
                    "description": "Identifier of the created or updated library item.",
                    "type": "string"
                },
                "succeeded": {
                    "description": "Whether the {@name LibraryItem#create} {@term operation} completed successfully.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.create_spec": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description to use in the OVF descriptor stored in the library item.",
                    "type": "string"
                },
                "flags": {
                    "description": "Flags to use for OVF package creation. The supported flags can be obtained using {@link ExportFlag#list}.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name to use in the OVF descriptor stored in the library item.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.create_target": {
            "type": "object",
            "properties": {
                "library_item_id": {
                    "description": "Identifier of the library item that should be should be updated.",
                    "type": "string"
                },
                "library_id": {
                    "description": "Identifier of the library in which a new library item should be created. This {@term field} is not used if the {@name #libraryItemId} {@term field} is specified.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.deployable_identity": {
            "type": "object",
            "required": [
                "type",
                "id"
            ],
            "properties": {
                "type": {
                    "description": "Type of the deployable resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Identifier of the deployable resource.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.deployment_result": {
            "type": "object",
            "required": [
                "succeeded"
            ],
            "properties": {
                "error": {
                    "description": "Errors, warnings, and informational messages produced by the {@name LibraryItem#deploy} {@term operation}.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.result_info"
                },
                "resource_id": {
                    "description": "Identifier of the deployed resource entity.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.deployable_identity"
                },
                "succeeded": {
                    "description": "Whether the {@name LibraryItem#deploy} {@term operation} completed successfully.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.deployment_target": {
            "type": "object",
            "required": [
                "resource_pool_id"
            ],
            "properties": {
                "host_id": {
                    "description": "Identifier of the target host on which the virtual machine or virtual appliance will run. The target host must be a member of the cluster that contains the resource pool identified by {@link #resourcePoolId}.",
                    "type": "string"
                },
                "resource_pool_id": {
                    "description": "Identifier of the resource pool to which the virtual machine or virtual appliance should be attached.",
                    "type": "string"
                },
                "folder_id": {
                    "description": "Identifier of the vCenter folder that should contain the virtual machine or virtual appliance. The folder must be virtual machine folder.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.ovf_summary": {
            "type": "object",
            "required": [
                "EULAs"
            ],
            "properties": {
                "additional_params": {
                    "description": "Additional OVF parameters which can be specified for the deployment target. These OVF parameters can be inspected, optionally modified, and used as values in {@link ResourcePoolDeploymentSpec#additionalParameters} for the {@name LibraryItem#deploy} {@term operation}.",
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "networks": {
                    "description": "Section identifiers for sections of type ovf:NetworkSection in the OVF descriptor. These identifiers can be used as keys in {@link ResourcePoolDeploymentSpec#networkMappings}.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "EULAs": {
                    "description": "End User License Agreements specified in the OVF descriptor. All end user license agreements must be accepted in order for the {@name LibraryItem#deploy} {@term operation} to succeed. See {@link ResourcePoolDeploymentSpec#acceptAllEula}.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Default name for the virtual machine or virtual appliance.",
                    "type": "string"
                },
                "storage_groups": {
                    "description": "Section identifiers for sections of type vmw:StorageGroupSection in the OVF descriptor. These identifiers can be used as keys in {@link ResourcePoolDeploymentSpec#storageMappings}.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "annotation": {
                    "description": "Default annotation for the virtual machine or virtual appliance.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.resource_pool_deployment_spec": {
            "type": "object",
            "required": [
                "accept_all_EULA"
            ],
            "properties": {
                "additional_parameters": {
                    "description": "Additional OVF parameters that may be needed for the deployment. Additional OVF parameters may be required by the OVF descriptor of the OVF package in the library item. Examples of OVF parameters that can be specified through this {@term field} include, but are not limited to: <ul> <li>{@link DeploymentOptionParams}</li> <li>{@link ExtraConfigParams}</li> <li>{@link IpAllocationParams}</li> <li>{@link PropertyParams}</li> <li>{@link ScaleOutParams}</li> <li>{@link VcenterExtensionParams}</li> </ul>",
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "storage_mappings": {
                    "description": "Specification of the target storage to use for sections of type vmw:StorageGroupSection in the OVF descriptor. The key in the {@term map} is the section identifier of the ovf:StorageGroupSection section in the OVF descriptor and the value is the target storage specification to be used for deployment. See {@link StorageGroupMapping}.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.storage_group_mapping"
                            }
                        }
                    },
                    "type": "array"
                },
                "default_datastore_id": {
                    "description": "Default datastore to use for all sections of type vmw:StorageSection in the OVF descriptor.",
                    "type": "string"
                },
                "name": {
                    "description": "Name assigned to the deployed target virtual machine or virtual appliance.",
                    "type": "string"
                },
                "storage_profile_id": {
                    "description": "Default storage profile to use for all sections of type vmw:StorageSection in the OVF descriptor.",
                    "type": "string"
                },
                "flags": {
                    "description": "Flags to be use for deployment. The supported flag values can be obtained using {@link ImportFlag#list}.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "network_mappings": {
                    "description": "Specification of the target network to use for sections of type ovf:NetworkSection in the OVF descriptor. The key in the {@term map} is the section identifier of the ovf:NetworkSection section in the OVF descriptor and the value is the target network to be used for deployment.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "accept_all_EULA": {
                    "description": "Whether to accept all End User License Agreements. See {@link OvfSummary#eulas}.",
                    "type": "boolean"
                },
                "storage_provisioning": {
                    "description": "Default storage provisioning type to use for all sections of type vmw:StorageSection in the OVF descriptor.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.disk_provisioning_type"
                },
                "annotation": {
                    "description": "Annotation assigned to the deployed target virtual machine or virtual appliance.",
                    "type": "string"
                },
                "locale": {
                    "description": "The locale to use for parsing the OVF descriptor.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.result_info": {
            "type": "object",
            "required": [
                "information",
                "warnings",
                "errors"
            ],
            "properties": {
                "information": {
                    "description": "Information messages reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. For example, a non-required parameter was ignored.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.ovf.ovf_info"
                    },
                    "type": "array"
                },
                "warnings": {
                    "description": "Warnings reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These warnings would not have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully, but there might be issues that warrant attention.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.ovf.ovf_warning"
                    },
                    "type": "array"
                },
                "errors": {
                    "description": "Errors reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These errors would have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.ovf.ovf_error"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.storage_group_mapping": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "datastore_id": {
                    "description": "Target datastore to be used for the storage group.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of storage deployment target to use for the vmw:StorageGroupSection section. The specified value must be {@link Type#DATASTORE} or {@link Type#STORAGE_PROFILE}.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.storage_group_mapping.type"
                },
                "storage_profile_id": {
                    "description": "Target storage profile to be used for the storage group.",
                    "type": "string"
                },
                "provisioning": {
                    "description": "Target provisioning type to use for the storage group.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.disk_provisioning_type"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item.storage_group_mapping.type": {
            "description": "The {@name Type} {@term enumerated type} defines the supported types of storage targets for sections of type vmw:StorageGroupSection in the OVF descriptor.",
            "enum": [
                "DATASTORE",
                "STORAGE_PROFILE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.ovf.library_item_create": {
            "type": "object",
            "required": [
                "source",
                "target",
                "create_spec"
            ],
            "properties": {
                "source": {
                    "description": "Identifier of the virtual machine or virtual appliance to use as the source.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.deployable_identity"
                },
                "create_spec": {
                    "description": "Information used to create the OVF package from the source virtual machine or virtual appliance.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.create_spec"
                },
                "client_token": {
                    "description": "Client-generated token used to retry a request if the client fails to get a response from the server. If the original request succeeded, the result of that request will be returned, otherwise the operation will be retried.",
                    "type": "string"
                },
                "target": {
                    "description": "Specification of the target content library and library item.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.create_target"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item_deploy": {
            "type": "object",
            "required": [
                "ovf_library_item_id",
                "target",
                "deployment_spec"
            ],
            "properties": {
                "deployment_spec": {
                    "description": "Specification of how the OVF package should be deployed to the target.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.resource_pool_deployment_spec"
                },
                "ovf_library_item_id": {
                    "description": "Identifier of the content library item containing the OVF package to be deployed.",
                    "type": "string"
                },
                "client_token": {
                    "description": "Client-generated token used to retry a request if the client fails to get a response from the server. If the original request succeeded, the result of that request will be returned, otherwise the operation will be retried.",
                    "type": "string"
                },
                "target": {
                    "description": "Specification of the deployment target.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.deployment_target"
                }
            }
        },
        "com.vmware.vcenter.ovf.library_item_filter": {
            "type": "object",
            "required": [
                "ovf_library_item_id",
                "target"
            ],
            "properties": {
                "ovf_library_item_id": {
                    "description": "Identifier of the content library item containing the OVF package to query.",
                    "type": "string"
                },
                "target": {
                    "description": "Specification of the deployment target.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.deployment_target"
                }
            }
        },
        "com.vmware.vcenter.ovf.ovf_error": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "error": {
                    "description": "Represents a server {@link Error}.",
                    "type": "object"
                },
                "issues": {
                    "description": "{@term List} of parse issues (see {@link ParseIssue}).",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.ovf.parse_issue"
                    },
                    "type": "array"
                },
                "category": {
                    "description": "The message category.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.ovf_message.category"
                },
                "name": {
                    "description": "The name of input parameter.",
                    "type": "string"
                },
                "message": {
                    "description": "A localizable message.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "value": {
                    "description": "The value of input parameter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.ovf_info": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "description": "A {@term list} of localizable messages (see {@link LocalizableMessage}).",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.ovf.ovf_message.category": {
            "description": "The {@name Category} {@term enumerated type} defines the categories of messages (see {@link OvfMessage}).",
            "enum": [
                "VALIDATION",
                "INPUT",
                "SERVER"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.ovf.ovf_warning": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "error": {
                    "description": "Represents a server {@link Error}.",
                    "type": "object"
                },
                "issues": {
                    "description": "{@term List} of parse issues (see {@link ParseIssue}).",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.ovf.parse_issue"
                    },
                    "type": "array"
                },
                "category": {
                    "description": "The message category.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.ovf_message.category"
                },
                "name": {
                    "description": "The name of input parameter.",
                    "type": "string"
                },
                "message": {
                    "description": "A localizable message.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "value": {
                    "description": "The value of input parameter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.ovf.parse_issue": {
            "type": "object",
            "required": [
                "column_number",
                "file",
                "category",
                "line_number",
                "message"
            ],
            "properties": {
                "column_number": {
                    "description": "The position in the line (see {@link #lineNumber}) (or -1 if not applicable).",
                    "format": "int64",
                    "type": "integer"
                },
                "file": {
                    "description": "The name of the file in which the parse issue was found.",
                    "type": "string"
                },
                "category": {
                    "description": "The category of the parse issue.",
                    "$ref": "#/definitions/com.vmware.vcenter.ovf.parse_issue.category"
                },
                "line_number": {
                    "description": "The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable).",
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "description": "A localizable message describing the parse issue.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                }
            }
        },
        "com.vmware.vcenter.ovf.parse_issue.category": {
            "description": "The {@name Category} {@term enumerated type} defines the categories of issues that can be found when parsing files inside an OVF package (see {@link ParseIssue}) including OVF descriptor (which is an XML document), manifest and certificate files, or exporting an OVF package.",
            "enum": [
                "VALUE_ILLEGAL",
                "ATTRIBUTE_REQUIRED",
                "ATTRIBUTE_ILLEGAL",
                "ELEMENT_REQUIRED",
                "ELEMENT_ILLEGAL",
                "ELEMENT_UNKNOWN",
                "SECTION_UNKNOWN",
                "SECTION_RESTRICTION",
                "PARSE_ERROR",
                "GENERATE_ERROR",
                "VALIDATION_ERROR",
                "EXPORT_ERROR",
                "INTERNAL_ERROR"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.resource_pool.filter_spec": {
            "type": "object",
            "properties": {
                "hosts": {
                    "description": "Hosts that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any host match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "datacenters": {
                    "description": "Datacenters that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "parent_resource_pools": {
                    "description": "Resource pools that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any resource pool match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "names": {
                    "description": "Names that resource pools must have to match the filter (see ResourcePool.Info.name).\nIf unset or empty, resource pools with any name match the filter.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "resource_pools": {
                    "description": "Identifiers of resource pools that can match the filter.\nIf unset or empty, resource pools with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "clusters": {
                    "description": "Clusters that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any cluster match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.resource_pool.info": {
            "type": "object",
            "required": [
                "resource_pools",
                "name"
            ],
            "properties": {
                "resource_pools": {
                    "description": "Identifiers of the child resource pools contained in this resource pool.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "name": {
                    "description": "Name of the vCenter Server resource pool.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.resource_pool.summary": {
            "type": "object",
            "required": [
                "resource_pool",
                "name"
            ],
            "properties": {
                "resource_pool": {
                    "description": "Identifier of the resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource pool.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.services.service.health": {
            "description": "The {@name Health} {@term enumerated type} defines the possible values for health of a service.",
            "enum": [
                "DEGRADED",
                "HEALTHY",
                "HEALTHY_WITH_WARNINGS"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.services.service.info": {
            "type": "object",
            "required": [
                "name_key",
                "startup_type",
                "state",
                "description_key"
            ],
            "properties": {
                "name_key": {
                    "description": "Service name key. Can be used to lookup resource bundle",
                    "type": "string"
                },
                "health_messages": {
                    "description": "Localizable messages associated with the health of the service",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "startup_type": {
                    "description": "Startup Type.",
                    "$ref": "#/definitions/com.vmware.vcenter.services.service.startup_type"
                },
                "health": {
                    "description": "Health of service.",
                    "$ref": "#/definitions/com.vmware.vcenter.services.service.health"
                },
                "state": {
                    "description": "Running State.",
                    "$ref": "#/definitions/com.vmware.vcenter.services.service.state"
                },
                "description_key": {
                    "description": "Service description key. Can be used to lookup resource bundle",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.services.service.startup_type": {
            "description": "The {@name StartupType} {@term enumerated type} defines valid Startup Type for vCenter Server services.",
            "enum": [
                "MANUAL",
                "AUTOMATIC",
                "DISABLED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.services.service.state": {
            "description": "The {@name State} {@term enumerated type} defines valid Run State for services.",
            "enum": [
                "STARTING",
                "STOPPING",
                "STARTED",
                "STOPPED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.services.service.update_spec": {
            "type": "object",
            "properties": {
                "startup_type": {
                    "description": "Startup Type",
                    "$ref": "#/definitions/com.vmware.vcenter.services.service.startup_type"
                }
            }
        },
        "com.vmware.vcenter.services.service_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Service Update specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.services.service.update_spec"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.VM.info": {
            "type": "object",
            "required": [
                "disks",
                "vm_home"
            ],
            "properties": {
                "disks": {
                    "description": "List of the virtual disks that are associated with the given storage policy.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vm_home": {
                    "description": "Flag to indicate whether or not the virtual machine home is associated with the given storage policy.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compatibility_info": {
            "type": "object",
            "required": [
                "compatible_datastores"
            ],
            "properties": {
                "compatible_datastores": {
                    "description": "Info about a list of datastores compatible with a specific storage policy.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compatible_datastore_info"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compatible_datastore_info": {
            "type": "object",
            "required": [
                "datastore"
            ],
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compliance.VM.filter_spec": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "vms": {
                    "description": "Identifiers of virtual machines that can match the filter\nIf unset or empty, virtual machines with any identifier matches the filter\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: VirtualMachine.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "status": {
                    "description": "Compliance Status that a virtual machine must have to match the filter. Atleast one status must be specified.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.VM.status"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compliance.VM.info": {
            "type": "object",
            "required": [
                "disks"
            ],
            "properties": {
                "disks": {
                    "description": "A Map of virtual disks and their compliance status If empty, the virtual machine does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.VM.status"
                            }
                        }
                    },
                    "type": "array"
                },
                "vm_home": {
                    "description": "Compliance status of the virtual machine home.\nIf unset or empty, virtual machine home is not associated with a storage policy.",
                    "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.VM.status"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compliance.VM.status": {
            "enum": [
                "COMPLIANT",
                "NON_COMPLIANT",
                "UNKNOWN_COMPLIANCE",
                "NOT_APPLICABLE",
                "OUT_OF_DATE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.storage.policies.compliance.filter_spec": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "description": "Compliance Status that a virtual machine must have to match the filter.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.status"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.compliance.status": {
            "enum": [
                "COMPLIANT",
                "NON_COMPLIANT",
                "UNKNOWN",
                "NOT_APPLICABLE",
                "OUT_OF_DATE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.storage.policies.compliance.summary": {
            "type": "object",
            "required": [
                "vm"
            ],
            "properties": {
                "vm": {
                    "description": "Identifier of virtual machine\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine.",
                    "type": "string"
                },
                "disks": {
                    "description": "List of the virtual hard disk.\nIf unset or empty, virtual machine entity does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.status"
                            }
                        }
                    },
                    "type": "array"
                },
                "vm_home": {
                    "description": "Compliance status of the virtual machine home.\nIf unset or empty, vmHome is not associated with a storage policy.",
                    "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.status"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.filter_spec": {
            "type": "object",
            "properties": {
                "policies": {
                    "description": "Identifiers of storage policies that can match the filter.\nIf unset or empty, storage policies with any identifiers match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.storage.policies.summary": {
            "type": "object",
            "required": [
                "description",
                "policy",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Description of the storage policy.",
                    "type": "string"
                },
                "policy": {
                    "description": "Identifier of the storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the storage policy.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.storage.policies_check_compatibility": {
            "type": "object",
            "required": [
                "datastores"
            ],
            "properties": {
                "datastores": {
                    "description": "Datastores used to check compatibility against a storage policy. The number of datastores is limited to 1024.\nThe parameter must contain identifiers for the resource type: Datastore.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.system_config.deployment_type.info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "The type of the appliance.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.appliance_type"
                }
            }
        },
        "com.vmware.vcenter.system_config.deployment_type.reconfigure_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "The type of the appliance.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.appliance_type"
                },
                "remote_psc": {
                    "description": "External PSC to register with when reconfiguring a VCSA_EMBEDDED appliance to a VCSA_EXTERNAL appliance.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.remote_psc_spec"
                }
            }
        },
        "com.vmware.vcenter.system_config.deployment_type_reconfigure": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "ReconfigureSpec to set the appliance type.",
                    "$ref": "#/definitions/com.vmware.vcenter.system_config.deployment_type.reconfigure_spec"
                }
            }
        },
        "com.vmware.vcenter.system_config.psc_registration.info": {
            "type": "object",
            "required": [
                "address",
                "sso_domain",
                "https_port"
            ],
            "properties": {
                "address": {
                    "description": "The IP address or DNS resolvable name of the PSC this appliance is registered with.",
                    "type": "string"
                },
                "sso_domain": {
                    "description": "The Single Sign-On domain name of the external PSC.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPs port used by the external PSC.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.system_config.psc_registration_repoint": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "RemotePscSpec structure containing information about the external PSC node to repoint this vCenter Server appliance to.",
                    "$ref": "#/definitions/com.vmware.vcenter.deployment.remote_psc_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.capabilities.info": {
            "type": "object",
            "required": [
                "management_vcenter_credentials_required",
                "vcha_licensed",
                "failover_ip_mode_valid"
            ],
            "properties": {
                "management_vcenter_credentials_required": {
                    "description": "Are the active's management vCenter server credentials required.",
                    "type": "boolean"
                },
                "vcha_licensed": {
                    "description": "Does the vCenter have the appropriate license for VCHA.",
                    "type": "boolean"
                },
                "failover_ip_mode_valid": {
                    "description": "Is the assignment mode of failover IP of the active node in the VCHA cluster valid.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.active.info": {
            "type": "object",
            "required": [
                "management"
            ],
            "properties": {
                "management": {
                    "description": "IP specification for the Management network.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "placement": {
                    "description": "Contains the placement information of the active node.\nIf unset, the request specified that placement information of the active node should not be included.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_info"
                },
                "ha": {
                    "description": "IP specification for the HA network.\nIf unset, then the second NIC of the Active Node of the VCHA cluster is not configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.active_get": {
            "type": "object",
            "properties": {
                "partial": {
                    "description": "If true, then return only the information that does not require connecting to the Active vCenter Server. \n If false or unset, then return all the information.\nIf unset, then return all the information.",
                    "type": "boolean"
                },
                "vc_spec": {
                    "description": "Contains active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.active_spec": {
            "type": "object",
            "required": [
                "ha_ip"
            ],
            "properties": {
                "ha_network_type": {
                    "description": "The type of the Network object used by the HA network.\n If the Cluster.ActiveSpec.ha-network field is set, then the Cluster.ActiveSpec.ha-network-type field must be set.\n If the Cluster.ActiveSpec.ha-network field is unset, then the Cluster.ActiveSpec.ha-network-type field is ignored.\nIf unset and the Cluster.ActiveSpec.ha-network field is unset, then the second NIC is assumed to be already configured.\n If unset and the Cluster.ActiveSpec.ha-network field is set, then an error is reported.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.network_type"
                },
                "ha_network": {
                    "description": "The identifier of the Network object used for the HA network.\n If the Cluster.ActiveSpec.ha-network field is set, then the Cluster.ActiveSpec.ha-network-type field must be set.\n If the Cluster.ActiveSpec.ha-network field is unset, then the Cluster.ActiveSpec.ha-network-type field is ignored.\nIf unset and the Cluster.ActiveSpec.ha-network-type field is unset, then the second NIC is assumed to be already configured.\n If unset and the Cluster.ActiveSpec.ha-network field is set, then an error is reported.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                },
                "ha_ip": {
                    "description": "IP specification for the HA network.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.cluster_mode": {
            "description": "The Cluster.ClusterMode enumerated type defines the possible modes for a VCHA Cluster.",
            "enum": [
                "ENABLED",
                "DISABLED",
                "MAINTENANCE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.cluster_state": {
            "description": "The Cluster.ClusterState enumerated type defines the possible for a VCHA Cluster.",
            "enum": [
                "HEALTHY",
                "DEGRADED",
                "ISOLATED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.config_state": {
            "description": "The Cluster.ConfigState enumerated type defines the VCHA configuration state.",
            "enum": [
                "CONFIGURED",
                "NOTCONFIGURED",
                "INVALID",
                "PREPARED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.deploy_spec": {
            "type": "object",
            "required": [
                "deployment",
                "passive",
                "active",
                "witness"
            ],
            "properties": {
                "deployment": {
                    "description": "Contains the deployment type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.type"
                },
                "passive": {
                    "description": "Contains the passive node's placement configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive_spec"
                },
                "active": {
                    "description": "Contains the active node's network configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.active_spec"
                },
                "witness": {
                    "description": "Contains the witness node's placement configuration.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness_spec"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.deployment_type.info": {
            "type": "object",
            "required": [
                "deployment_type"
            ],
            "properties": {
                "deployment_type": {
                    "description": "Identifies the deployment type of the VCHA cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.deployment_type.type"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.deployment_type.type": {
            "description": "The DeploymentType.Type enumerated type defines the possible deployment types for a VCHA Cluster.",
            "enum": [
                "NONE",
                "AUTO",
                "MANUAL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.error_condition": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "description": "Contains an error condition.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "recommendation": {
                    "description": "Contains a recommendation on handling the error condition.\nIf unset, there is no tip for the error condition.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.info": {
            "type": "object",
            "properties": {
                "health_exception": {
                    "description": "Health warning messages if the health information is unavailable.\nIf unset, then the cluster is in a healthy state.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "health_state": {
                    "description": "Last known state of the VCHA Cluster.\nIf unset, then the information is unavailable or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.cluster_state"
                },
                "node2": {
                    "description": "Node configuration information for the VCHA cluster.\nIf unset, then the information is unavailable or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_info"
                },
                "node1": {
                    "description": "Node configuration information for the VCHA cluster.\nIf unset, then the information is unavailable.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_info"
                },
                "mode": {
                    "description": "Operational mode of the VCHA Cluster.\nIf unset, then the information is unavailable or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.cluster_mode"
                },
                "config_state": {
                    "description": "Configuration state of the VCHA cluster.\n The active node's management vCenter server credentials are not required to populate this field.\nIf unset, then the information is unavailable.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.config_state"
                },
                "witness": {
                    "description": "Node configuration information for the VCHA cluster.\nIf unset, then the information is unavailable or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness_info"
                },
                "auto_failover_allowed": {
                    "description": "Specifies if automatic failover is allowed.\nIf unset, then the cluster state healthy and automatic failover allowance in accordance with the cluster mode.",
                    "type": "boolean"
                },
                "manual_failover_allowed": {
                    "description": "Specifies if manual failover is allowed.\nIf unset, then the cluster state healthy and manual failover allowance in accordance with the cluster mode.",
                    "type": "boolean"
                },
                "health_warnings": {
                    "description": "A collection of messages describing the reason for a non-healthy Cluster.\nIf unset, then the cluster is in a healthy state.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.error_condition"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.ip_family": {
            "description": "The Cluster.IpFamily enumerated type defines the IP address family.",
            "enum": [
                "IPV4",
                "IPV6"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.ip_info": {
            "type": "object",
            "required": [
                "ip_family"
            ],
            "properties": {
                "ipv6": {
                    "description": "If the type of the ip family is IPV6, then this will point to IPv6 address specification.\nThis field is optional and it is only relevant when the value of Cluster.IpInfo.ip-family is IPV6.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ipv6_info"
                },
                "gateway_ip": {
                    "description": "Gateway IP address.\nIf unset, no gateway is specified.",
                    "type": "string"
                },
                "ip_family": {
                    "description": "Family of the ip.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ip_family"
                },
                "ipv4": {
                    "description": "If the type of the ip family is IPV4, then this will point to IPv4 address specification.\nThis field is optional and it is only relevant when the value of Cluster.IpInfo.ip-family is IPV4.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ipv4_info"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.ipv4_info": {
            "type": "object",
            "required": [
                "address",
                "subnet_mask"
            ],
            "properties": {
                "address": {
                    "description": "IP address of the configured network interface.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid.",
                    "format": "int64",
                    "type": "integer"
                },
                "subnet_mask": {
                    "description": "The subnet mask of the interface.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.ipv6_info": {
            "type": "object",
            "required": [
                "address",
                "prefix"
            ],
            "properties": {
                "address": {
                    "description": "IP address of the configured network interface.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The CIDR prefix of the interface.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.mode.cluster_mode": {
            "description": "The Mode.ClusterMode enumerated type defines the possible modes for a VCHA Cluster.",
            "enum": [
                "ENABLED",
                "DISABLED",
                "MAINTENANCE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.mode.info": {
            "type": "object",
            "required": [
                "mode"
            ],
            "properties": {
                "mode": {
                    "description": "Identifies the mode of the VCHA cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.mode.cluster_mode"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.mode_set$task": {
            "type": "object",
            "required": [
                "mode"
            ],
            "properties": {
                "mode": {
                    "description": "Clustermode to change the VCHA cluster mode to.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.mode.cluster_mode"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.node_info": {
            "type": "object",
            "required": [
                "ha_ip"
            ],
            "properties": {
                "ha_ip": {
                    "description": "VCHA Cluster network configuration of the node. All cluster communication (state replication, heartbeat, cluster messages) happens over this network.\n The active node's management vCenter server credentials are not required to populate this Cluster.NodeInfo.ha-ip.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ip_info"
                },
                "runtime": {
                    "description": "Runtime information for the node in the VCHA Cluster.\n The active node's management vCenter server credentials are required to populate some fields of Cluster.NodeInfo.runtime.\nIf unset, then the information is unavailable or the specified Active vCenter server management credentials are invalid or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_runtime_info"
                },
                "failover_ip": {
                    "description": "Failover IP address that this node will assume after the failover to serve client requests. Each failover node can have a different failover IP address.\n The active node's management vCenter server credentials are not required to populate Cluster.NodeInfo.failover-ip.\nIf unset, then it will assume the public IP address of the Active vCenter Server.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ip_info"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.node_role": {
            "description": "The Cluster.NodeRole enumerated type defines the role node can be in a VCHA Cluster.",
            "enum": [
                "ACTIVE",
                "PASSIVE",
                "WITNESS"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.node_runtime_info": {
            "type": "object",
            "properties": {
                "role": {
                    "description": "Last known role of the node.\n The active node's management vCenter server credentials are not required to populate Cluster.NodeRuntimeInfo.role.\nIf unset, then information is unavailable or the passive and witness nodes are not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_role"
                },
                "placement": {
                    "description": "Placement information of the node.\n The active node's management vCenter server credentials are required to populate most fields of Cluster.NodeRuntimeInfo.placement.\nIf unset, then the information is unavailable or the specified Active vCenter server management credentials are invalid or the node is not cloned yet or the VCHA cluster was deployed in a manual fashion.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_info"
                },
                "state": {
                    "description": "Last known state of the node.\n The active node's management vCenter server credentials are not required to populate Cluster.NodeRuntimeInfo.state.\nIf unset, then information is unavailable or the passive and witness nodes are not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_state"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.node_state": {
            "description": "The Cluster.NodeState enumerated type defines possible state a node can be in a VCHA Cluster.",
            "enum": [
                "UP",
                "DOWN"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.node_vm_info": {
            "type": "object",
            "required": [
                "vm",
                "bios_uuid"
            ],
            "properties": {
                "vm": {
                    "description": "The identifier of the virtual machine of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine:VCenter.",
                    "type": "string"
                },
                "bios_uuid": {
                    "description": "BIOS UUID for the node.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive.check_result": {
            "type": "object",
            "required": [
                "warnings",
                "errors"
            ],
            "properties": {
                "warnings": {
                    "description": "A list of problems which may require attention, but which are not fatal.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "errors": {
                    "description": "A list of problems which are fatal to the operation and the operation will fail.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive.check_spec": {
            "type": "object",
            "required": [
                "placement"
            ],
            "properties": {
                "placement": {
                    "description": "Contains the node's placement information for validation.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive.redeploy_spec": {
            "type": "object",
            "required": [
                "placement"
            ],
            "properties": {
                "ha_ip": {
                    "description": "Contains the VCHA HA network configuration of the node. All cluster communication (state replication, heartbeat, cluster messages) happens over this network.\nIf unset, then the stored network configuration for the VCHA HA network for the passive node will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "placement": {
                    "description": "Contains the node's placement information.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                },
                "failover_ip": {
                    "description": "Failover IP address that this node must assume after the failover to serve client requests.\nIf unset, then the public IP address of the Active vCenter Server is assumed.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the passive node's placement specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive.check_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive_redeploy$task": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the passive node's redeploy specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive.redeploy_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.passive_spec": {
            "type": "object",
            "required": [
                "ha_ip"
            ],
            "properties": {
                "ha_ip": {
                    "description": "IP specification for the HA network.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "placement": {
                    "description": "Contains the placement configuration of the node.\nIf unset, then the it is assumed that the clone will be done manually by the customer. In this case, the placement configuration for the witness node should also be omitted. Only the network configuration will be setup. Once the passive and witness nodes are cloned from the active node, the VCHA high availability is turned on.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                },
                "failover_ip": {
                    "description": "IP specification for the management network.\nIf unset, then it will assume the public IP address of the Active vCenter Server.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.type": {
            "description": "The Cluster.Type enumerated type defines the possible deployment types for a VCHA Cluster.",
            "enum": [
                "AUTO",
                "MANUAL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.cluster.undeploy_spec": {
            "type": "object",
            "properties": {
                "force_delete": {
                    "description": "Flag controlling in what circumstances the virtual machines will be deleted. For this flag to take effect, the VCHA cluster should have been successfully configured using automatic deployment. \n   -  If true, the Cluster.UndeploySpec.vms field will be ignored, the VCHA cluster specific information is removed, and the passive and witness virtual machines will be deleted.\n   -  If false, the Cluster.UndeploySpec.vms field contains the information identifying the passive and witness virtual machines.\n \n     =  If the Cluster.UndeploySpec.vms field is set, then it will be validated prior to deleting the passive and witness virtual machines and VCHA cluster specific information is removed.\n     =  If the Cluster.UndeploySpec.vms field is unset, then the passive and witness virtual machines will not be deleted. The customer should delete them in order to cleanup completely. VCHA cluster specific information is removed.\n  \nIf unset, the Cluster.UndeploySpec.vms field contains the information identifying the passive and witness virtual machines. \n   -  If the Cluster.UndeploySpec.vms field is set, then it will be validated prior to deleting the passive and witness virtual machines. VCHA cluster specific information is removed.\n   -  If the Cluster.UndeploySpec.vms field is unset, then the passive and witness virtual machines will not be deleted. The customer should delete them in order to cleanup completely. VCHA cluster specific information is removed.\n",
                    "type": "boolean"
                },
                "vms": {
                    "description": "Contains virtual machine information for the passive and witness virtual machines. For this flag to take effect, the VCHA cluster should have been successfully configured using automatic deployment. \n If set, the Cluster.UndeploySpec.force-delete field controls whether this information is validated. \n\n   -  If the Cluster.UndeploySpec.force-delete field is true, then this information is ignored, VCHA cluster specific information is removed and the passive and witness virtual machines will be deleted.\n   -  If the Cluster.UndeploySpec.force-delete field is unset or false, then this information is validated prior to deleting the passive and witness virtual machines. VCHA cluster specific information is removed.\n \nIf unset, the Cluster.UndeploySpec.force-delete field controls the deletion of the passive and witness virtual machines. \n   -  If the Cluster.UndeploySpec.force-delete field is true, then the passive and witness virtual machines will be deleted. VCHA cluster specific information is removed. \n  -  If the Cluster.UndeploySpec.force-delete field is unset or false, then the passive and witness virtual machines will not be deleted. The customer should delete them in order to cleanup completely. VCHA cluster specific information is removed. \n",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.vm_info"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.vm_info": {
            "type": "object",
            "required": [
                "passive",
                "witness"
            ],
            "properties": {
                "passive": {
                    "description": "The virtual machine information of the passive node.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_vm_info"
                },
                "witness": {
                    "description": "The virtual machine information of the witness node.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_vm_info"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness.check_result": {
            "type": "object",
            "required": [
                "warnings",
                "errors"
            ],
            "properties": {
                "warnings": {
                    "description": "A list of problems which may require attention, but which are not fatal.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "errors": {
                    "description": "A list of problems which are fatal to the operation and the operation will fail.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness.check_spec": {
            "type": "object",
            "required": [
                "placement"
            ],
            "properties": {
                "placement": {
                    "description": "Contains the node's placement information for validation.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness.redeploy_spec": {
            "type": "object",
            "required": [
                "placement"
            ],
            "properties": {
                "ha_ip": {
                    "description": "Contains the VCHA HA network configuration of the node. All cluster communication (state replication, heartbeat, cluster messages) happens over this network.\nIf unset, then the stored network configuration for the VCHA HA network for the witness node will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "placement": {
                    "description": "Contains the node's placement information.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                },
                "vc_spec": {
                    "description": "Contains the active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness_check": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the witness node's placement specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness.check_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness_info": {
            "type": "object",
            "required": [
                "ha_ip"
            ],
            "properties": {
                "ha_ip": {
                    "description": "VCHA Cluster network configuration of the node. All cluster communication (state replication, heartbeat, cluster messages) happens over this network.\n The active node's management vCenter server credentials are not required to populate Cluster.WitnessInfo.ha-ip.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.ip_info"
                },
                "runtime": {
                    "description": "Runtime information for the node in the VCHA Cluster.\n The active node's management vCenter server credentials are required to populate some fields of Cluster.WitnessInfo.runtime.\nIf unset, then the information is unavailable or the node is not cloned yet.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.node_runtime_info"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness_redeploy$task": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the witness node's redeploy specification.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness.redeploy_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster.witness_spec": {
            "type": "object",
            "required": [
                "ha_ip"
            ],
            "properties": {
                "ha_ip": {
                    "description": "IP specification for the HA network.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_spec"
                },
                "placement": {
                    "description": "Contains the placement configuration of the node.\nIf unset, then it is assumed that the clone will be done manually by the customer. In this case, the placement configuration for the witness node should also be omitted. Only the network configuration will be setup. Once the passive and witness nodes are cloned from the active node, the VCHA high availability is turned on.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.placement_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster_deploy$task": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the deploy specification for all three nodes of a VCHA cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.deploy_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster_failover$task": {
            "type": "object",
            "required": [
                "planned"
            ],
            "properties": {
                "planned": {
                    "description": "If false, a failover is initiated immediately and may result in data loss.\n If true, a failover is initated after the Active node flushes its state to Passive and there is no data loss.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster_get": {
            "type": "object",
            "properties": {
                "partial": {
                    "description": "If true, then return only the information that does not require connecting to the Active vCenter Server.\n If false or unset, then return all the information.\nIf unset, then return all the information.",
                    "type": "boolean"
                },
                "vc_spec": {
                    "description": "Contains active node's management vCenter server credentials.\nIf unset, then the active vCenter server is assumed to be managed by itself.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.cluster_undeploy$task": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Contains the undeploy specification for a VCHA cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.undeploy_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.connection_spec": {
            "type": "object",
            "required": [
                "hostname"
            ],
            "properties": {
                "hostname": {
                    "description": "IP Address or DNS of the vCenter.",
                    "type": "string"
                },
                "username": {
                    "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail.",
                    "type": "string"
                },
                "port": {
                    "description": "Port number.\nIf unset, port 443 will be used.",
                    "format": "int64",
                    "type": "integer"
                },
                "password": {
                    "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail.",
                    "format": "password",
                    "type": "string"
                },
                "ssl_thumbprint": {
                    "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.credentials_spec": {
            "type": "object",
            "required": [
                "active_location"
            ],
            "properties": {
                "active_location": {
                    "description": "Connection information for the management vCenter Server of the Active Node in a VCHA Cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.connection_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.disk_info": {
            "type": "object",
            "required": [
                "datastore",
                "datastore_name"
            ],
            "properties": {
                "datastore": {
                    "description": "The identifier of the datastore to put all the virtual disks on.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter.",
                    "type": "string"
                },
                "datastore_name": {
                    "description": "The name of the datastore.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.disk_spec": {
            "type": "object",
            "properties": {
                "datastore": {
                    "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.ip_family": {
            "description": "The IpFamily enumerated type defines the Ip address family.",
            "enum": [
                "IPV4",
                "IPV6"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.ip_spec": {
            "type": "object",
            "required": [
                "ip_family"
            ],
            "properties": {
                "ipv6": {
                    "description": "If the family of the ip is IPV6, then this will point to IPv6 address specification.\nThis field is optional and it is only relevant when the value of IpSpec.ip-family is IPV6.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ipv6_spec"
                },
                "dns_servers": {
                    "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ip_family": {
                    "description": "Family of the IP address to configure the interface.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ip_family"
                },
                "default_gateway": {
                    "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface.",
                    "type": "string"
                },
                "ipv4": {
                    "description": "If the family of the ip is IPV4, then this will point to IPv4 address specification.\nThis field is optional and it is only relevant when the value of IpSpec.ip-family is IPV4.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.ipv4_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.ipv4_spec": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "description": "IPV4 address to be used to configure the interface.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported.",
                    "format": "int64",
                    "type": "integer"
                },
                "subnet_mask": {
                    "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.ipv6_spec": {
            "type": "object",
            "required": [
                "address",
                "prefix"
            ],
            "properties": {
                "address": {
                    "description": "IPv6 address to be used to configure the interface.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The CIDR prefix for the interface.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vcha.network_type": {
            "description": "The NetworkType enumerated type defines the type of a vCenter Server network.",
            "enum": [
                "STANDARD_PORTGROUP",
                "DISTRIBUTED_PORTGROUP"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vcha.operations.info": {
            "type": "object",
            "required": [
                "disabled",
                "active"
            ],
            "properties": {
                "disabled": {
                    "description": "Identifiers of the operations that are current disabled. These operation strings are one of CLUSTER_DEPLOY_OP, CLUSTER_FAILOVER_OP, PASSIVE_REDEPLOY_OP, WITNESS_REDEPLOY_OP, MODE_SET_OP, CLUSTER_UNDEPLOY_OP and CLUSTER_GET_OP.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vapi.operation. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vapi.operation.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "active": {
                    "description": "Identifiers of the operations that are currently running. These operation strings are one of CLUSTER_DEPLOY_OP, CLUSTER_FAILOVER_OP, PASSIVE_REDEPLOY_OP, WITNESS_REDEPLOY_OP, MODE_SET_OP, and CLUSTER_UNDEPLOY_OP.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vapi.operation. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vapi.operation.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vcha.placement_info": {
            "type": "object",
            "required": [
                "management_network_type",
                "datacenter",
                "host",
                "management_network_name",
                "management_network",
                "host_name",
                "vm_name",
                "datacenter_name",
                "storage",
                "management_vcenter_name"
            ],
            "properties": {
                "cluster": {
                    "description": "The identifier of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "management_network_type": {
                    "description": "The type of the Network object used for the Management network.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.network_type"
                },
                "ha_network": {
                    "description": "The identifier of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                },
                "datacenter": {
                    "description": "The identifier of the datacenter of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter.",
                    "type": "string"
                },
                "cluster_name": {
                    "description": "The name of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.",
                    "type": "string"
                },
                "host": {
                    "description": "The identifier of the host of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "management_network_name": {
                    "description": "The name of the Network object used for the Management network.",
                    "type": "string"
                },
                "management_network": {
                    "description": "The identifier of the Network object used for the Management network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                },
                "host_name": {
                    "description": "The name of the host of the VCHA node.",
                    "type": "string"
                },
                "ha_network_name": {
                    "description": "The name of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.",
                    "type": "string"
                },
                "vm_name": {
                    "description": "The virtual machine name of the VCHA node.",
                    "type": "string"
                },
                "ha_network_type": {
                    "description": "The type of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.network_type"
                },
                "datacenter_name": {
                    "description": "The name of the datacenter of the VCHA node.",
                    "type": "string"
                },
                "bios_uuid": {
                    "description": "BIOS UUID for the node.\nIf unset, the information is currently unavailable.",
                    "type": "string"
                },
                "storage": {
                    "description": "The storage information of the VCHA node.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.disk_info"
                },
                "management_vcenter_name": {
                    "description": "The name of the Management vCenter server of the VCHA node.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vcha.placement_spec": {
            "type": "object",
            "required": [
                "folder",
                "name"
            ],
            "properties": {
                "folder": {
                    "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "management_network_type": {
                    "description": "The type of the Network object used by the Management network.\n If the PlacementSpec.management-network field is set, then the {#link #managementNetworkType} field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n If unset and the PlacementSpec.management-network field is set, then an error is reported.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.network_type"
                },
                "name": {
                    "description": "The name of the VCHA node to be used for the virtual machine name.",
                    "type": "string"
                },
                "management_network": {
                    "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                },
                "ha_network_type": {
                    "description": "The type of the Network object used by the HA network.\n If the PlacementSpec.ha-network field is set, then the PlacementSpec.ha-network-type field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n If unset and the PlacementSpec.ha-network field is set, then an error is reported.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.network_type"
                },
                "resource_pool": {
                    "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "ha_network": {
                    "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                },
                "storage": {
                    "description": "The storage specification to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.datastore.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.disk_spec"
                }
            }
        },
        "com.vmware.vcenter.vcha.vc_credentials_validate": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Structure with information to connect to the management vCenter server of the Active Node in the VCHA cluster.",
                    "$ref": "#/definitions/com.vmware.vcenter.vcha.credentials_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.guest.identity.info": {
            "type": "object",
            "required": [
                "host_name",
                "family",
                "full_name",
                "name"
            ],
            "properties": {
                "host_name": {
                    "description": "Hostname of the guest operating system.",
                    "type": "string"
                },
                "family": {
                    "description": "Guest operating system family.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest_OS_family"
                },
                "full_name": {
                    "description": "Guest operating system full name.",
                    "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                },
                "name": {
                    "description": "Guest operating system identifier (short name).",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest_OS"
                },
                "ip_address": {
                    "description": "IP address assigned by the guest operating system.\nIf unset the guest does not have an IP address.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.guest.local_filesystem.info": {
            "type": "object",
            "required": [
                "free_space",
                "capacity"
            ],
            "properties": {
                "free_space": {
                    "description": "Free space on the file system, in bytes.",
                    "format": "int64",
                    "type": "integer"
                },
                "capacity": {
                    "description": "Total capacity of the file system, in bytes.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.guest.power.info": {
            "type": "object",
            "required": [
                "operations_ready",
                "state"
            ],
            "properties": {
                "operations_ready": {
                    "description": "Flag indicating if the virtual machine is ready to process soft power operations.",
                    "type": "boolean"
                },
                "state": {
                    "description": "The power state of the guest operating system.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest.power.state"
                }
            }
        },
        "com.vmware.vcenter.vm.guest.power.state": {
            "description": "Possible guest power states.",
            "enum": [
                "RUNNING",
                "SHUTTING_DOWN",
                "RESETTING",
                "STANDBY",
                "NOT_RUNNING",
                "UNAVAILABLE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.guest_OS": {
            "description": "The GuestOS enumerated type defines the valid guest operating system types used for configuring a virtual machine.",
            "enum": [
                "DOS",
                "WIN_31",
                "WIN_95",
                "WIN_98",
                "WIN_ME",
                "WIN_NT",
                "WIN_2000_PRO",
                "WIN_2000_SERV",
                "WIN_2000_ADV_SERV",
                "WIN_XP_HOME",
                "WIN_XP_PRO",
                "WIN_XP_PRO_64",
                "WIN_NET_WEB",
                "WIN_NET_STANDARD",
                "WIN_NET_ENTERPRISE",
                "WIN_NET_DATACENTER",
                "WIN_NET_BUSINESS",
                "WIN_NET_STANDARD_64",
                "WIN_NET_ENTERPRISE_64",
                "WIN_LONGHORN",
                "WIN_LONGHORN_64",
                "WIN_NET_DATACENTER_64",
                "WIN_VISTA",
                "WIN_VISTA_64",
                "WINDOWS_7",
                "WINDOWS_7_64",
                "WINDOWS_7_SERVER_64",
                "WINDOWS_8",
                "WINDOWS_8_64",
                "WINDOWS_8_SERVER_64",
                "WINDOWS_9",
                "WINDOWS_9_64",
                "WINDOWS_9_SERVER_64",
                "WINDOWS_HYPERV",
                "FREEBSD",
                "FREEBSD_64",
                "FREEBSD_11",
                "FREEBSD_12",
                "FREEBSD_11_64",
                "FREEBSD_12_64",
                "REDHAT",
                "RHEL_2",
                "RHEL_3",
                "RHEL_3_64",
                "RHEL_4",
                "RHEL_4_64",
                "RHEL_5",
                "RHEL_5_64",
                "RHEL_6",
                "RHEL_6_64",
                "RHEL_7",
                "RHEL_7_64",
                "RHEL_8_64",
                "CENTOS",
                "CENTOS_64",
                "CENTOS_6",
                "CENTOS_6_64",
                "CENTOS_7",
                "CENTOS_7_64",
                "CENTOS_8_64",
                "ORACLE_LINUX",
                "ORACLE_LINUX_64",
                "ORACLE_LINUX_6",
                "ORACLE_LINUX_6_64",
                "ORACLE_LINUX_7",
                "ORACLE_LINUX_7_64",
                "ORACLE_LINUX_8_64",
                "SUSE",
                "SUSE_64",
                "SLES",
                "SLES_64",
                "SLES_10",
                "SLES_10_64",
                "SLES_11",
                "SLES_11_64",
                "SLES_12",
                "SLES_12_64",
                "SLES_15_64",
                "NLD_9",
                "OES",
                "SJDS",
                "MANDRAKE",
                "MANDRIVA",
                "MANDRIVA_64",
                "TURBO_LINUX",
                "TURBO_LINUX_64",
                "UBUNTU",
                "UBUNTU_64",
                "DEBIAN_4",
                "DEBIAN_4_64",
                "DEBIAN_5",
                "DEBIAN_5_64",
                "DEBIAN_6",
                "DEBIAN_6_64",
                "DEBIAN_7",
                "DEBIAN_7_64",
                "DEBIAN_8",
                "DEBIAN_8_64",
                "DEBIAN_9",
                "DEBIAN_9_64",
                "DEBIAN_10",
                "DEBIAN_10_64",
                "ASIANUX_3",
                "ASIANUX_3_64",
                "ASIANUX_4",
                "ASIANUX_4_64",
                "ASIANUX_5_64",
                "ASIANUX_7_64",
                "ASIANUX_8_64",
                "OPENSUSE",
                "OPENSUSE_64",
                "FEDORA",
                "FEDORA_64",
                "COREOS_64",
                "VMWARE_PHOTON_64",
                "OTHER_24X_LINUX",
                "OTHER_24X_LINUX_64",
                "OTHER_26X_LINUX",
                "OTHER_26X_LINUX_64",
                "OTHER_3X_LINUX",
                "OTHER_3X_LINUX_64",
                "OTHER_4X_LINUX",
                "OTHER_4X_LINUX_64",
                "OTHER_LINUX",
                "GENERIC_LINUX",
                "OTHER_LINUX_64",
                "SOLARIS_6",
                "SOLARIS_7",
                "SOLARIS_8",
                "SOLARIS_9",
                "SOLARIS_10",
                "SOLARIS_10_64",
                "SOLARIS_11_64",
                "OS2",
                "ECOMSTATION",
                "ECOMSTATION_2",
                "NETWARE_4",
                "NETWARE_5",
                "NETWARE_6",
                "OPENSERVER_5",
                "OPENSERVER_6",
                "UNIXWARE_7",
                "DARWIN",
                "DARWIN_64",
                "DARWIN_10",
                "DARWIN_10_64",
                "DARWIN_11",
                "DARWIN_11_64",
                "DARWIN_12_64",
                "DARWIN_13_64",
                "DARWIN_14_64",
                "DARWIN_15_64",
                "DARWIN_16_64",
                "DARWIN_17_64",
                "DARWIN_18_64",
                "VMKERNEL",
                "VMKERNEL_5",
                "VMKERNEL_6",
                "VMKERNEL_65",
                "AMAZONLINUX2_64",
                "OTHER",
                "OTHER_64"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.guest_OS_family": {
            "description": "The GuestOSFamily enumerated type defines the valid guest operating system family types reported by a virtual machine.",
            "enum": [
                "WINDOWS",
                "LINUX",
                "NETWARE",
                "SOLARIS",
                "DARWIN",
                "OTHER"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.adapter.sata.create_spec": {
            "type": "object",
            "properties": {
                "bus": {
                    "description": "SATA bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail.",
                    "format": "int64",
                    "type": "integer"
                },
                "pci_slot_number": {
                    "description": "Address of the SATA adapter on the PCI bus.\nIf unset, the server will choose an available address when the virtual machine is powered on.",
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Adapter type.\nIf unset, a guest-specific default value will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.sata.info": {
            "type": "object",
            "required": [
                "label",
                "type",
                "bus"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "pci_slot_number": {
                    "description": "Address of the SATA adapter on the PCI bus.\nMay be unset if the virtual machine has never been powered on since the adapter was created.",
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Adapter type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.type"
                },
                "bus": {
                    "description": "SATA bus number.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.sata.summary": {
            "type": "object",
            "required": [
                "adapter"
            ],
            "properties": {
                "adapter": {
                    "description": "Identifier of the virtual SATA adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.sata.type": {
            "description": "The Sata.Type enumerated type defines the valid emulation types for a virtual SATA adapter.",
            "enum": [
                "AHCI"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.adapter.sata_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual SATA adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.create_spec": {
            "type": "object",
            "properties": {
                "bus": {
                    "description": "SCSI bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail.",
                    "format": "int64",
                    "type": "integer"
                },
                "sharing": {
                    "description": "Bus sharing mode.\nIf unset, the adapter will default to NONE.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.sharing"
                },
                "pci_slot_number": {
                    "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on.",
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Adapter type.\nIf unset, a guest-specific default value will be used.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.info": {
            "type": "object",
            "required": [
                "label",
                "sharing",
                "type",
                "scsi"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "sharing": {
                    "description": "Bus sharing mode.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.sharing"
                },
                "pci_slot_number": {
                    "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created.",
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "description": "Adapter type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.type"
                },
                "scsi": {
                    "description": "Address of the SCSI adapter on the SCSI bus.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.scsi_address_info"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.sharing": {
            "description": "The Scsi.Sharing enumerated type defines the valid bus sharing modes for a virtual SCSI adapter.",
            "enum": [
                "NONE",
                "VIRTUAL",
                "PHYSICAL"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.summary": {
            "type": "object",
            "required": [
                "adapter"
            ],
            "properties": {
                "adapter": {
                    "description": "Identifier of the virtual SCSI adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.type": {
            "description": "The Scsi.Type enumerated type defines the valid emulation types for a virtual SCSI adapter.",
            "enum": [
                "BUSLOGIC",
                "LSILOGIC",
                "LSILOGICSAS",
                "PVSCSI"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi.update_spec": {
            "type": "object",
            "properties": {
                "sharing": {
                    "description": "Bus sharing mode. \n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.sharing"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual SCSI adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.adapter.scsi_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual SCSI adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.create_spec": {
            "type": "object",
            "properties": {
                "efi_legacy_boot": {
                    "description": "Flag indicating whether to use EFI legacy boot mode.\nIf unset, defaults to value that is recommended for the guest OS and is supported for the virtual hardware version.",
                    "type": "boolean"
                },
                "retry": {
                    "description": "Flag indicating whether the virtual machine should automatically retry the boot process after a failure.\nIf unset, default value is false.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Firmware type to be used by the virtual machine.\nIf unset, defaults to value that is recommended for the guest OS and is supported for the virtual hardware version.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.type"
                },
                "network_protocol": {
                    "description": "Protocol to use when attempting to boot the virtual machine over the network.\nIf unset, defaults to a system defined default value.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.network_protocol"
                },
                "enter_setup_mode": {
                    "description": "Flag indicating whether the firmware boot process should automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "delay": {
                    "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode.\nIf unset, default value is 0.",
                    "format": "int64",
                    "type": "integer"
                },
                "retry_delay": {
                    "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true.\nIf unset, default value is 10000.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.device.entry": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "disks": {
                    "description": "Virtual disk device. List of virtual disks in boot order.\nThis field is optional and it is only relevant when the value of Device.Entry.type is DISK.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nic": {
                    "description": "Virtual Ethernet device. Ethernet device to use as boot device for this entry.\nThis field is optional and it is only relevant when the value of Device.Entry.type is ETHERNET.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                    "type": "string"
                },
                "type": {
                    "description": "Virtual device type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.device.entry_create_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "Virtual Boot device type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.device.type": {
            "description": "The Device.Type enumerated type defines the valid device types that may be used as bootable devices.",
            "enum": [
                "CDROM",
                "DISK",
                "ETHERNET",
                "FLOPPY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.boot.device_set": {
            "type": "object",
            "required": [
                "devices"
            ],
            "properties": {
                "devices": {
                    "description": "Ordered list of boot devices.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.entry"
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.info": {
            "type": "object",
            "required": [
                "retry",
                "type",
                "enter_setup_mode",
                "delay",
                "retry_delay"
            ],
            "properties": {
                "efi_legacy_boot": {
                    "description": "Flag indicating whether to use EFI legacy boot mode.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI.",
                    "type": "boolean"
                },
                "retry": {
                    "description": "Flag indicating whether the virtual machine will automatically retry the boot process after a failure.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Firmware type used by the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.type"
                },
                "network_protocol": {
                    "description": "Protocol to use when attempting to boot the virtual machine over the network.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.network_protocol"
                },
                "enter_setup_mode": {
                    "description": "Flag indicating whether the firmware boot process will automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode.",
                    "type": "boolean"
                },
                "delay": {
                    "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode.",
                    "format": "int64",
                    "type": "integer"
                },
                "retry_delay": {
                    "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot.network_protocol": {
            "description": "The Boot.NetworkProtocol enumerated type defines the valid network boot protocols supported when booting a virtual machine with EFI firmware over the network.",
            "enum": [
                "IPV4",
                "IPV6"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.boot.type": {
            "description": "The Boot.Type enumerated type defines the valid firmware types for a virtual machine.",
            "enum": [
                "BIOS",
                "EFI"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.boot.update_spec": {
            "type": "object",
            "properties": {
                "efi_legacy_boot": {
                    "description": "Flag indicating whether to use EFI legacy boot mode.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "retry": {
                    "description": "Flag indicating whether the virtual machine should automatically retry the boot process after a failure.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Firmware type to be used by the virtual machine.\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.type"
                },
                "network_protocol": {
                    "description": "Protocol to use when attempting to boot the virtual machine over the network.\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.network_protocol"
                },
                "enter_setup_mode": {
                    "description": "Flag indicating whether the firmware boot process should automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "delay": {
                    "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode.\nIf unset, the value is unchanged.",
                    "format": "int64",
                    "type": "integer"
                },
                "retry_delay": {
                    "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true.\nIf unset, the value is unchanged.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.boot_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the boot-related settings of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the host device backing the virtual CD-ROM device. \n\n\nThis field will be unset if Cdrom.BackingInfo.auto-detect is true and the virtual CD-ROM device is not connected or no suitable device is available on the host.",
                    "type": "string"
                },
                "iso_file": {
                    "description": "Path of the image file backing the virtual CD-ROM device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is ISO_FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual CD-ROM device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.backing_type"
                },
                "device_access_type": {
                    "description": "Access type for the device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is one of HOST_DEVICE or CLIENT_DEVICE.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.device_access_type"
                },
                "auto_detect": {
                    "description": "Flag indicating whether the virtual CD-ROM device is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is HOST_DEVICE.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the device that should be used as the virtual CD-ROM device backing.\nIf unset, the virtual CD-ROM device will be configured to automatically detect a suitable host device.",
                    "type": "string"
                },
                "iso_file": {
                    "description": "Path of the image file that should be used as the virtual CD-ROM device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingSpec.type is ISO_FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual CD-ROM device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.backing_type"
                },
                "device_access_type": {
                    "description": "Access type for the device backing.\nIf unset, defaults to EMULATION.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.device_access_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.backing_type": {
            "description": "The Cdrom.BackingType enumerated type defines the valid backing types for a virtual CD-ROM device.",
            "enum": [
                "ISO_FILE",
                "HOST_DEVICE",
                "CLIENT_DEVICE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.cdrom.create_spec": {
            "type": "object",
            "properties": {
                "ide": {
                    "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ide_address_spec"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual CD-ROM device.\nIf unset, defaults to automatic detection of a suitable host device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "sata": {
                    "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.sata_address_spec"
                },
                "type": {
                    "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.host_bus_adapter_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.device_access_type": {
            "description": "The Cdrom.DeviceAccessType enumerated type defines the valid device access types for a physical device packing of a virtual CD-ROM device.",
            "enum": [
                "EMULATION",
                "PASSTHRU",
                "PASSTHRU_EXCLUSIVE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.cdrom.host_bus_adapter_type": {
            "description": "The Cdrom.HostBusAdapterType enumerated type defines the valid types of host bus adapters that may be used for attaching a Cdrom to a virtual machine.",
            "enum": [
                "IDE",
                "SATA"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.cdrom.info": {
            "type": "object",
            "required": [
                "label",
                "allow_guest_control",
                "backing",
                "start_connected",
                "state",
                "type"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual CD-ROM device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.backing_info"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.",
                    "type": "boolean"
                },
                "ide": {
                    "description": "Address of device attached to a virtual IDE adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is IDE.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ide_address_info"
                },
                "sata": {
                    "description": "Address of device attached to a virtual SATA adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is SATA.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.sata_address_info"
                },
                "state": {
                    "description": "Connection status of the virtual device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.connection_state"
                },
                "type": {
                    "description": "Type of host bus adapter to which the device is attached.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.host_bus_adapter_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.summary": {
            "type": "object",
            "required": [
                "cdrom"
            ],
            "properties": {
                "cdrom": {
                    "description": "Identifier of the virtual CD-ROM device.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom.update_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual CD-ROM device. \n This field may only be modified if the virtual machine is not powered on or the virtual CD-ROM device is not connected.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual CD-ROM device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cdrom_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual CD-ROM device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.connection_state": {
            "description": "The ConnectionState enumerated type defines the valid states for a removable device that is configured to be connected.",
            "enum": [
                "CONNECTED",
                "RECOVERABLE_ERROR",
                "UNRECOVERABLE_ERROR",
                "NOT_CONNECTED",
                "UNKNOWN"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.cpu.info": {
            "type": "object",
            "required": [
                "cores_per_socket",
                "count",
                "hot_add_enabled",
                "hot_remove_enabled"
            ],
            "properties": {
                "cores_per_socket": {
                    "description": "Number of CPU cores per socket.",
                    "format": "int64",
                    "type": "integer"
                },
                "count": {
                    "description": "Number of CPU cores.",
                    "format": "int64",
                    "type": "integer"
                },
                "hot_add_enabled": {
                    "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled.",
                    "type": "boolean"
                },
                "hot_remove_enabled": {
                    "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cpu.update_spec": {
            "type": "object",
            "properties": {
                "cores_per_socket": {
                    "description": "New number of CPU cores per socket. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket.\nIf unset, the value is unchanged.",
                    "format": "int64",
                    "type": "integer"
                },
                "count": {
                    "description": "New number of CPU cores. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket. \n The supported range of CPU counts is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, the number of CPU cores may only be increased if Cpu.Info.hot-add-enabled is true, and may only be decreased if Cpu.Info.hot-remove-enabled is true.\n\nIf unset, the value is unchanged.",
                    "format": "int64",
                    "type": "integer"
                },
                "hot_add_enabled": {
                    "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "hot_remove_enabled": {
                    "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.cpu_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the CPU-related settings of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cpu.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "Backing type for the virtual disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.backing_type"
                },
                "vmdk_file": {
                    "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingInfo.type is VMDK_FILE.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "Backing type for the virtual disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.backing_type"
                },
                "vmdk_file": {
                    "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingSpec.type is VMDK_FILE.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.backing_type": {
            "description": "The Disk.BackingType enumerated type defines the valid backing types for a virtual disk.",
            "enum": [
                "VMDK_FILE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.disk.create_spec": {
            "type": "object",
            "properties": {
                "ide": {
                    "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ide_address_spec"
                },
                "backing": {
                    "description": "Existing physical resource backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, the virtual disk will not be connected to an existing backing.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.backing_spec"
                },
                "sata": {
                    "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.sata_address_spec"
                },
                "scsi": {
                    "description": "Address for attaching the device to a virtual SCSI adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.scsi_address_spec"
                },
                "new_vmdk": {
                    "description": "Specification for creating a new VMDK backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, a new VMDK backing will not be created.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.vmdk_create_spec"
                },
                "type": {
                    "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.host_bus_adapter_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.host_bus_adapter_type": {
            "description": "The Disk.HostBusAdapterType enumerated type defines the valid types of host bus adapters that may be used for attaching a virtual storage device to a virtual machine.",
            "enum": [
                "IDE",
                "SCSI",
                "SATA"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.disk.info": {
            "type": "object",
            "required": [
                "label",
                "backing",
                "type"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.backing_info"
                },
                "ide": {
                    "description": "Address of device attached to a virtual IDE adapter.\nWorkaround for PR1459646",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ide_address_info"
                },
                "sata": {
                    "description": "Address of device attached to a virtual SATA adapter.\nWorkaround for PR1459646",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.sata_address_info"
                },
                "scsi": {
                    "description": "Address of device attached to a virtual SCSI adapter.\nWorkaround for PR1459646",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.scsi_address_info"
                },
                "type": {
                    "description": "Type of host bus adapter to which the device is attached.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.host_bus_adapter_type"
                },
                "capacity": {
                    "description": "Capacity of the virtual disk in bytes.\nIf unset, virtual disk is inaccessible or disk capacity is 0.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.storage_policy_spec": {
            "type": "object",
            "required": [
                "policy"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.summary": {
            "type": "object",
            "required": [
                "disk"
            ],
            "properties": {
                "disk": {
                    "description": "Identifier of the virtual Disk.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.update_spec": {
            "type": "object",
            "properties": {
                "backing": {
                    "description": "Physical resource backing for the virtual disk. \n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.backing_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk.vmdk_create_spec": {
            "type": "object",
            "properties": {
                "storage_policy": {
                    "description": "The Disk.StoragePolicySpec structure contains information about the storage policy that is to be associated the with VMDK file.\nIf unset the default storage policy of the target datastore (if applicable) is applied. Currently a default storage policy is only supported by object based datastores : VVol & vSAN. For non- object datastores, if unset then no storage policy would be associated with the VMDK file.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.storage_policy_spec"
                },
                "name": {
                    "description": "Base name of the VMDK file. The name should not include the '.vmdk' file extension.\nIf unset, a name (derived from the name of the virtual machine) will be chosen by the server.",
                    "type": "string"
                },
                "capacity": {
                    "description": "Capacity of the virtual disk backing in bytes.\nIf unset, defaults to a guest-specific capacity.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.disk_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "opaque_network_type": {
                    "description": "Type of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK.",
                    "type": "string"
                },
                "network_name": {
                    "description": "Name of the standard portgroup backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is STANDARD_PORTGROUP.",
                    "type": "string"
                },
                "connection_cookie": {
                    "description": "Server-generated cookie that identifies the connection to the port. This ookie may be used to verify that the virtual machine is the rightful owner of the port.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected.",
                    "format": "int64",
                    "type": "integer"
                },
                "opaque_network_id": {
                    "description": "Identifier of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK.",
                    "type": "string"
                },
                "host_device": {
                    "description": "Name of the device backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is HOST_DEVICE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.backing_type"
                },
                "distributed_switch_uuid": {
                    "description": "UUID of the distributed virtual switch that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is DISTRIBUTED_PORTGROUP.",
                    "type": "string"
                },
                "network": {
                    "description": "Identifier of the network backing the virtual Ethernet adapter.\nIf unset, the identifier of the network backing could not be determined.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network.",
                    "type": "string"
                },
                "distributed_port": {
                    "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "network": {
                    "description": "Identifier of the network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingSpec.type is one of STANDARD_PORTGROUP, DISTRIBUTED_PORTGROUP, or OPAQUE_NETWORK.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network.",
                    "type": "string"
                },
                "distributed_port": {
                    "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter. Depending on the type of the Portgroup, the port may be specified using this field. If the portgroup type is early-binding (also known as static), a port is assigned when the Ethernet adapter is configured to use the port. The port may be either automatically or specifically assigned based on the value of this field. If the portgroup type is ephemeral, the port is created and assigned to a virtual machine when it is powered on and the Ethernet adapter is connected. This field cannot be specified as no free ports exist before use.\nMay be used to specify a port when the network specified on the Ethernet.BackingSpec.network field is a static or early binding distributed portgroup. If unset, the port will be automatically assigned to the Ethernet adapter based on the policy embodied by the portgroup type.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.backing_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.backing_type": {
            "description": "The Ethernet.BackingType enumerated type defines the valid backing types for a virtual Ethernet adapter.",
            "enum": [
                "STANDARD_PORTGROUP",
                "HOST_DEVICE",
                "DISTRIBUTED_PORTGROUP",
                "OPAQUE_NETWORK"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.ethernet.create_spec": {
            "type": "object",
            "properties": {
                "pci_slot_number": {
                    "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change when it the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on.",
                    "format": "int64",
                    "type": "integer"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual Ethernet adapter.\nIf unset, the system may try to find an appropriate backing. If one is not found, the request will fail.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "wake_on_lan_enabled": {
                    "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "mac_address": {
                    "description": "MAC address.\nWorkaround for PR1459647",
                    "type": "string"
                },
                "type": {
                    "description": "Ethernet adapter emulation type.\nIf unset, defaults to a guest-specific type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.emulation_type"
                },
                "upt_compatibility_enabled": {
                    "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nIf unset, defaults to false.",
                    "type": "boolean"
                },
                "mac_type": {
                    "description": "MAC address type.\nIf unset, defaults to GENERATED.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.mac_address_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.emulation_type": {
            "description": "The Ethernet.EmulationType enumerated type defines the valid emulation types for a virtual Ethernet adapter.",
            "enum": [
                "E1000",
                "E1000E",
                "PCNET32",
                "VMXNET",
                "VMXNET2",
                "VMXNET3"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.ethernet.info": {
            "type": "object",
            "required": [
                "label",
                "backing",
                "start_connected",
                "state",
                "allow_guest_control",
                "wake_on_lan_enabled",
                "type",
                "mac_type"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "pci_slot_number": {
                    "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created.",
                    "format": "int64",
                    "type": "integer"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.backing_info"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.",
                    "type": "boolean"
                },
                "state": {
                    "description": "Connection status of the virtual device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.connection_state"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.",
                    "type": "boolean"
                },
                "wake_on_lan_enabled": {
                    "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter.",
                    "type": "boolean"
                },
                "mac_address": {
                    "description": "MAC address.\nMay be unset if Ethernet.Info.mac-type is MANUAL and has not been specified, or if Ethernet.Info.mac-type is GENERATED and the virtual machine has never been powered on since the Ethernet adapter was created.",
                    "type": "string"
                },
                "type": {
                    "description": "Ethernet adapter emulation type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.emulation_type"
                },
                "upt_compatibility_enabled": {
                    "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.Info.type is VMXNET3.",
                    "type": "boolean"
                },
                "mac_type": {
                    "description": "MAC address type.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.mac_address_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.mac_address_type": {
            "description": "The Ethernet.MacAddressType enumerated type defines the valid MAC address origins for a virtual Ethernet adapter.",
            "enum": [
                "MANUAL",
                "GENERATED",
                "ASSIGNED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.ethernet.summary": {
            "type": "object",
            "required": [
                "nic"
            ],
            "properties": {
                "nic": {
                    "description": "Identifier of the virtual Ethernet adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet.update_spec": {
            "type": "object",
            "properties": {
                "mac_type": {
                    "description": "MAC address type. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.mac_address_type"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "mac_address": {
                    "description": "MAC address. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be specified if Ethernet.UpdateSpec.mac-type is MANUAL. Must be unset if the MAC address type is not MANUAL.",
                    "type": "string"
                },
                "upt_compatibility_enabled": {
                    "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility should be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be unset if the emulation type of the virtual Ethernet adapter is not VMXNET3.",
                    "type": "boolean"
                },
                "wake_on_lan_enabled": {
                    "description": "Flag indicating whether wake-on-LAN shoud be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ethernet_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the host device backing the virtual floppy drive. \n\n\nThis field will be unset if Floppy.BackingInfo.auto-detect is true and the virtual floppy drive is not connected or no suitable device is available on the host.",
                    "type": "string"
                },
                "image_file": {
                    "description": "Path of the image file backing the virtual floppy drive.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is IMAGE_FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual floppy drive.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.backing_type"
                },
                "auto_detect": {
                    "description": "Flag indicating whether the virtual floppy drive is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is HOST_DEVICE.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the device that should be used as the virtual floppy drive backing.\nIf unset, the virtual floppy drive will be configured to automatically detect a suitable host device.",
                    "type": "string"
                },
                "image_file": {
                    "description": "Path of the image file that should be used as the virtual floppy drive backing.\nThis field is optional and it is only relevant when the value of Floppy.BackingSpec.type is IMAGE_FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual floppy drive.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.backing_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.backing_type": {
            "description": "The Floppy.BackingType enumerated type defines the valid backing types for a virtual floppy drive.",
            "enum": [
                "IMAGE_FILE",
                "HOST_DEVICE",
                "CLIENT_DEVICE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.floppy.create_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual floppy drive.\nIf unset, defaults to automatic detection of a suitable host device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.info": {
            "type": "object",
            "required": [
                "allow_guest_control",
                "label",
                "state",
                "backing",
                "start_connected"
            ],
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.",
                    "type": "boolean"
                },
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "state": {
                    "description": "Connection status of the virtual device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.connection_state"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual floppy drive.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.backing_info"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.summary": {
            "type": "object",
            "required": [
                "floppy"
            ],
            "properties": {
                "floppy": {
                    "description": "Identifier of the virtual floppy drive.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy.update_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual floppy drive. \n This field may only be modified if the virtual machine is not powered on or the virtual floppy drive is not connected.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual floppy drive.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.floppy_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual floppy drive.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ide_address_info": {
            "type": "object",
            "required": [
                "master",
                "primary"
            ],
            "properties": {
                "master": {
                    "description": "Flag specifying whether the device is the master or slave device on the IDE adapter.",
                    "type": "boolean"
                },
                "primary": {
                    "description": "Flag specifying whether the device is attached to the primary or secondary IDE adapter of the virtual machine.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.ide_address_spec": {
            "type": "object",
            "properties": {
                "master": {
                    "description": "Flag specifying whether the device should be the master or slave device on the IDE adapter.\nIf unset, the server will choose an available connection type. If no IDE connections are available, the request will be rejected.",
                    "type": "boolean"
                },
                "primary": {
                    "description": "Flag specifying whether the device should be attached to the primary or secondary IDE adapter of the virtual machine.\nIf unset, the server will choose a adapter with an available connection. If no IDE connections are available, the request will be rejected.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.info": {
            "type": "object",
            "required": [
                "upgrade_policy",
                "version",
                "upgrade_status"
            ],
            "properties": {
                "upgrade_error": {
                    "description": "Reason for the scheduled upgrade failure.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-status is FAILED.",
                    "type": "string"
                },
                "upgrade_version": {
                    "description": "Target hardware version to be used on the next scheduled virtual hardware upgrade.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-policy is one of AFTER_CLEAN_SHUTDOWN or ALWAYS.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.version"
                },
                "upgrade_policy": {
                    "description": "Scheduled upgrade policy.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.upgrade_policy"
                },
                "version": {
                    "description": "Virtual hardware version.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.version"
                },
                "upgrade_status": {
                    "description": "Scheduled upgrade status.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.upgrade_status"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.memory.info": {
            "type": "object",
            "required": [
                "hot_add_enabled",
                "size_MiB"
            ],
            "properties": {
                "hot_add_increment_size_MiB": {
                    "description": "The granularity, in mebibytes, at which memory can be added to a running virtual machine. \n When adding memory to a running virtual machine, the amount of memory added must be at least Memory.Info.hot-add-increment-size-mib and the total memory size of the virtual machine must be a multiple of {@link>hotAddIncrementSize}.\n\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running.",
                    "format": "int64",
                    "type": "integer"
                },
                "hot_add_limit_MiB": {
                    "description": "The maximum amount of memory, in mebibytes, that can be added to a running virtual machine.\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running.",
                    "format": "int64",
                    "type": "integer"
                },
                "hot_add_enabled": {
                    "description": "Flag indicating whether adding memory while the virtual machine is running is enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running.\n",
                    "type": "boolean"
                },
                "size_MiB": {
                    "description": "Memory size in mebibytes.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.memory.update_spec": {
            "type": "object",
            "properties": {
                "hot_add_enabled": {
                    "description": "Flag indicating whether adding memory while the virtual machine is running should be enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running. \n\n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "size_MiB": {
                    "description": "New memory size in mebibytes. \n The supported range of memory sizes is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, this value may only be changed if Memory.Info.hot-add-enabled is true, and the new memory size must satisfy the constraints specified by Memory.Info.hot-add-increment-size-mib and Memory.Info.hot-add-limit-mib.\n\nIf unset, the value is unchanged.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.memory_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the memory-related settings of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.memory.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the device backing the virtual parallel port. \n\n\nThis field will be unset if Parallel.BackingInfo.auto-detect is true and the virtual parallel port is not connected or no suitable device is available on the host.",
                    "type": "string"
                },
                "file": {
                    "description": "Path of the file backing the virtual parallel port.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual parallel port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.backing_type"
                },
                "auto_detect": {
                    "description": "Flag indicating whether the virtual parallel port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is HOST_DEVICE.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "host_device": {
                    "description": "Name of the device that should be used as the virtual parallel port backing.\nIf unset, the virtual parallel port will be configured to automatically detect a suitable host device.",
                    "type": "string"
                },
                "file": {
                    "description": "Path of the file that should be used as the virtual parallel port backing.\nThis field is optional and it is only relevant when the value of Parallel.BackingSpec.type is FILE.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual parallel port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.backing_type"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.backing_type": {
            "description": "The Parallel.BackingType enumerated type defines the valid backing types for a virtual parallel port.",
            "enum": [
                "FILE",
                "HOST_DEVICE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.parallel.create_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual parallel port.\nIf unset, defaults to automatic detection of a suitable host device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.info": {
            "type": "object",
            "required": [
                "allow_guest_control",
                "label",
                "state",
                "backing",
                "start_connected"
            ],
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.",
                    "type": "boolean"
                },
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "state": {
                    "description": "Connection status of the virtual device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.connection_state"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual parallel port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.backing_info"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.summary": {
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "port": {
                    "description": "Identifier of the virtual parallel port.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel.update_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual parallel port. \n This field may only be modified if the virtual machine is not powered on or the virtual parallel port is not connected.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.backing_spec"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual parallel port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.parallel_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual parallel port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.sata_address_info": {
            "type": "object",
            "required": [
                "unit",
                "bus"
            ],
            "properties": {
                "unit": {
                    "description": "Unit number of the device.",
                    "format": "int64",
                    "type": "integer"
                },
                "bus": {
                    "description": "Bus number of the adapter to which the device is attached.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.sata_address_spec": {
            "type": "object",
            "required": [
                "bus"
            ],
            "properties": {
                "unit": {
                    "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected.",
                    "format": "int64",
                    "type": "integer"
                },
                "bus": {
                    "description": "Bus number of the adapter to which the device should be attached.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.scsi_address_info": {
            "type": "object",
            "required": [
                "unit",
                "bus"
            ],
            "properties": {
                "unit": {
                    "description": "Unit number of the device.",
                    "format": "int64",
                    "type": "integer"
                },
                "bus": {
                    "description": "Bus number of the adapter to which the device is attached.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.scsi_address_spec": {
            "type": "object",
            "required": [
                "bus"
            ],
            "properties": {
                "unit": {
                    "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected.",
                    "format": "int64",
                    "type": "integer"
                },
                "bus": {
                    "description": "Bus number of the adapter to which the device should be attached.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.backing_info": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "file": {
                    "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is FILE.",
                    "type": "string"
                },
                "proxy": {
                    "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service is configured.",
                    "format": "uri",
                    "type": "string"
                },
                "host_device": {
                    "description": "Name of the device backing the virtual serial port. \n\n\nThis field will be unset if Serial.BackingInfo.auto-detect is true and the virtual serial port is not connected or no suitable device is available on the host.",
                    "type": "string"
                },
                "pipe": {
                    "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual serial port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.backing_type"
                },
                "no_rx_loss": {
                    "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT.",
                    "type": "boolean"
                },
                "auto_detect": {
                    "description": "Flag indicating whether the virtual serial port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is HOST_DEVICE.",
                    "type": "boolean"
                },
                "network_location": {
                    "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingInfo.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingInfo.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n \nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of NETWORK_SERVER or NETWORK_CLIENT.",
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.backing_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "file": {
                    "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is FILE.",
                    "type": "string"
                },
                "proxy": {
                    "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service should be used.",
                    "format": "uri",
                    "type": "string"
                },
                "host_device": {
                    "description": "Name of the device backing the virtual serial port. \n\n\nIf unset, the virtual serial port will be configured to automatically detect a suitable host device.",
                    "type": "string"
                },
                "pipe": {
                    "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of PIPE_SERVER or PIPE_CLIENT.",
                    "type": "string"
                },
                "type": {
                    "description": "Backing type for the virtual serial port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.backing_type"
                },
                "no_rx_loss": {
                    "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nIf unset, defaults to false.",
                    "type": "boolean"
                },
                "network_location": {
                    "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingSpec.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingSpec.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n \nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of NETWORK_SERVER or NETWORK_CLIENT.",
                    "format": "uri",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.backing_type": {
            "description": "The Serial.BackingType enumerated type defines the valid backing types for a virtual serial port.",
            "enum": [
                "FILE",
                "HOST_DEVICE",
                "PIPE_SERVER",
                "PIPE_CLIENT",
                "NETWORK_SERVER",
                "NETWORK_CLIENT"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.serial.create_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual serial port.\nIf unset, defaults to automatic detection of a suitable host device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.backing_spec"
                },
                "yield_on_poll": {
                    "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host.\nIf unset, defaults to false.",
                    "type": "boolean"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.info": {
            "type": "object",
            "required": [
                "label",
                "yield_on_poll",
                "start_connected",
                "allow_guest_control",
                "backing",
                "state"
            ],
            "properties": {
                "label": {
                    "description": "Device label.",
                    "type": "string"
                },
                "yield_on_poll": {
                    "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host.",
                    "type": "boolean"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.",
                    "type": "boolean"
                },
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual serial port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.backing_info"
                },
                "state": {
                    "description": "Connection status of the virtual device.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.connection_state"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.summary": {
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "port": {
                    "description": "Identifier of the virtual serial port.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial.update_spec": {
            "type": "object",
            "properties": {
                "allow_guest_control": {
                    "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "backing": {
                    "description": "Physical resource backing for the virtual serial port. \n This field may only be modified if the virtual machine is not powered on or the virtual serial port is not connected.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.backing_spec"
                },
                "yield_on_poll": {
                    "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host. \n This field may be modified at any time, and changes applied to a connected virtual serial port take effect immediately.\n\nIf unset, the value is unchanged.",
                    "type": "boolean"
                },
                "start_connected": {
                    "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for the new virtual serial port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.serial_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual serial port.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.update_spec": {
            "type": "object",
            "properties": {
                "upgrade_version": {
                    "description": "Target hardware version to be used on the next scheduled virtual hardware upgrade. \n If specified, this field must represent a newer virtual hardware version than the current virtual hardware version reported in Hardware.Info.version.\n\nIf Hardware.UpdateSpec.upgrade-policy is set to NEVER, this field must be unset. Otherwise, if this field is unset, default to the most recent virtual hardware version supported by the server.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.version"
                },
                "upgrade_policy": {
                    "description": "Scheduled upgrade policy. \n If set to NEVER, the Hardware.Info.upgrade-version field will be reset to unset.\n\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.upgrade_policy"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware.upgrade_policy": {
            "description": "The Hardware.UpgradePolicy enumerated type defines the valid virtual hardware upgrade policies for a virtual machine.",
            "enum": [
                "NEVER",
                "AFTER_CLEAN_SHUTDOWN",
                "ALWAYS"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.upgrade_status": {
            "description": "The Hardware.UpgradeStatus enumerated type defines the valid virtual hardware upgrade statuses for a virtual machine.",
            "enum": [
                "NONE",
                "PENDING",
                "SUCCESS",
                "FAILED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware.version": {
            "description": "The Hardware.Version enumerated type defines the valid virtual hardware versions for a virtual machine.",
            "enum": [
                "VMX_03",
                "VMX_04",
                "VMX_06",
                "VMX_07",
                "VMX_08",
                "VMX_09",
                "VMX_10",
                "VMX_11",
                "VMX_12",
                "VMX_13",
                "VMX_14"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.hardware_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Specification for updating the virtual hardware settings of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.hardware_upgrade": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "New virtual machine version.\nIf unset, defaults to the most recent virtual hardware version supported by the server.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.version"
                }
            }
        },
        "com.vmware.vcenter.vm.power.info": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "state": {
                    "description": "Power state of the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.power.state"
                },
                "clean_power_off": {
                    "description": "Flag indicating whether the virtual machine was powered off cleanly. This field may be used to detect that the virtual machine crashed unexpectedly and should be restarted.\nThis field is optional and it is only relevant when the value of Power.Info.state is POWERED_OFF.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.power.state": {
            "enum": [
                "POWERED_OFF",
                "POWERED_ON",
                "SUSPENDED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.storage.policy.compliance.check_spec": {
            "type": "object",
            "required": [
                "vm_home"
            ],
            "properties": {
                "disks": {
                    "description": "Identifiers of the virtual machine's virtual disks for which compliance should be checked.\nIf unset or empty, compliance check is invoked on all the associated disks.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "vm_home": {
                    "description": "Invoke compliance check on the virtual machine home directory if set to true.",
                    "type": "boolean"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.compliance.info": {
            "type": "object",
            "required": [
                "disks",
                "overall_compliance"
            ],
            "properties": {
                "disks": {
                    "description": "The compliance information Compliance.VmComplianceInfo for the virtual machine's virtual disks that are currently associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.vm_compliance_info"
                            }
                        }
                    },
                    "type": "array"
                },
                "overall_compliance": {
                    "description": "The overall compliance status of the virtual machine and all it's entities.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.status"
                },
                "vm_home": {
                    "description": "The storage policy compliance information Compliance.VmComplianceInfo for the virtual machine's home directory.\nIf unset the virtual machine home directory has no storage policy association.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.vm_compliance_info"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.compliance.status": {
            "description": "The Compliance.Status enumerated type defines the storage compliance status of a virtual machine and its applicable entities.",
            "enum": [
                "COMPLIANT",
                "NON_COMPLIANT",
                "UNKNOWN_COMPLIANCE",
                "NOT_APPLICABLE",
                "OUT_OF_DATE"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.storage.policy.compliance.vm_compliance_info": {
            "type": "object",
            "required": [
                "check_time",
                "failure_cause",
                "status"
            ],
            "properties": {
                "check_time": {
                    "description": "Date and time of the most recent compliance check.",
                    "format": "date-time",
                    "type": "string"
                },
                "failure_cause": {
                    "description": "The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance.",
                    "items": {
                        "$ref": "#/definitions/com.vmware.vapi.std.localizable_message"
                    },
                    "type": "array"
                },
                "policy": {
                    "description": "Identifier of the storage policy associated with the virtual machine.\nIf unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the compliance operation.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.status"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.compliance_check": {
            "type": "object",
            "properties": {
                "check_spec": {
                    "description": "Parameter specifies the entities on which storage policy compliance check is to be invoked. The storage compliance Info Compliance.Info is returned.\nIf unset, the behavior is equivalent to a Compliance.CheckSpec with CheckSpec#vmHome set to true and CheckSpec#disks populated with all disks attached to the virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.check_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.disk_policy_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Storage Policy identification.\nThis field is optional and it is only relevant when the value of Policy.DiskPolicySpec.type is USE_SPECIFIED_POLICY.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used while performing update operation on the virtual disks.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.disk_policy_spec.policy_type"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.disk_policy_spec.policy_type": {
            "description": "The Policy.DiskPolicySpec enumerated type defines the choices for how to specify the policy to be associated with a virtual disk.",
            "enum": [
                "USE_SPECIFIED_POLICY",
                "USE_DEFAULT_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.storage.policy.info": {
            "type": "object",
            "required": [
                "disks"
            ],
            "properties": {
                "disks": {
                    "description": "Storage policies associated with virtual disks. The values in this map are storage policy identifiers. They will be identifiers for the resource type:com.vmware.vcenter.StoragePolicy If the map is empty, the virtual machine does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "vm_home": {
                    "description": "Storage Policy associated with virtual machine home.\nIfunset, the virtual machine's home directory doesn't have any storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.update_spec": {
            "type": "object",
            "properties": {
                "disks": {
                    "description": "Storage policy or policies to be used when reconfiguring virtual machine diks.\nif unset the current storage policy is retained.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.disk_policy_spec"
                            }
                        }
                    },
                    "type": "array"
                },
                "vm_home": {
                    "description": "Storage policy to be used when reconfiguring the virtual machine home.\nif unset the current storage policy is retained.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.vm_home_policy_spec"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.vm_home_policy_spec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Storage Policy identification.\nThis field is optional and it is only relevant when the value of Policy.VmHomePolicySpec.type is USE_SPECIFIED_POLICY.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used while performing update operation on the virtual machine home's directory.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.vm_home_policy_spec.policy_type"
                }
            }
        },
        "com.vmware.vcenter.vm.storage.policy.vm_home_policy_spec.policy_type": {
            "description": "The Policy.VmHomePolicySpec.PolicyType enumerated type defines the choices for how to specify the policy to be associated with the virtual machine home's directory.",
            "enum": [
                "USE_SPECIFIED_POLICY",
                "USE_DEFAULT_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm.storage.policy_update": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "Storage Policy Specification for updating the virtual machine and virtual disks.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.update_spec"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.cpu_info": {
            "type": "object",
            "required": [
                "cores_per_socket",
                "count"
            ],
            "properties": {
                "cores_per_socket": {
                    "description": "Number of CPU cores per socket.",
                    "format": "int64",
                    "type": "integer"
                },
                "count": {
                    "description": "Number of CPU cores.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.cpu_update_spec": {
            "type": "object",
            "properties": {
                "num_cpus": {
                    "description": "Number of virtual processors in the deployed virtual machine.",
                    "format": "int64",
                    "type": "integer"
                },
                "num_cores_per_socket": {
                    "description": "Number of cores among which to distribute CPUs in the deployed virtual machine.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_placement_spec": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed. If {@name #cluster} and {@name #resourcePool} are both specified, {@name #resourcePool} must belong to {@name #cluster}. If {@name #cluster} and {@name #host} are both specified, {@name #host} must be a member of {@name #cluster}.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If {@name #host} and {@name #resourcePool} are both specified, {@name #resourcePool} must belong to {@name #host}. If {@name #host} and {@name #cluster} are both specified, {@name #host} must be a member of {@name #cluster}.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec": {
            "type": "object",
            "required": [
                "name",
                "library",
                "source_vm"
            ],
            "properties": {
                "description": {
                    "description": "Description of the library item.",
                    "type": "string"
                },
                "disk_storage": {
                    "description": "Storage specification for the virtual machine template's disks.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage"
                },
                "placement": {
                    "description": "Information used to place the virtual machine template.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_placement_spec"
                },
                "name": {
                    "description": "Name of the library item.",
                    "type": "string"
                },
                "disk_storage_overrides": {
                    "description": "Storage specification for individual disks in the virtual machine template. This is specified as a mapping between disk identifiers in the source virtual machine and their respective storage specifications.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage"
                            }
                        }
                    },
                    "type": "array"
                },
                "library": {
                    "description": "Identifier of the library in which the new library item should be created.",
                    "type": "string"
                },
                "source_vm": {
                    "description": "Identifier of the source virtual machine to create the library item from.",
                    "type": "string"
                },
                "vm_home_storage": {
                    "description": "Storage location for the virtual machine template's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage": {
            "type": "object",
            "properties": {
                "datastore": {
                    "description": "Identifier for the datastore associated with a virtual machine template's disk.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Storage policy for a virtual machine template's disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage_policy"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage_policy": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier for the storage policy to use.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used when creating a virtual machine template's disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage_policy.type"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_disk_storage_policy.type": {
            "description": "Policy type for a virtual machine template's disk.",
            "enum": [
                "USE_SPECIFIED_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage": {
            "type": "object",
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore for the virtual machine template's configuration and log files.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Storage policy for the virtual machine template's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage_policy"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage_policy": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier for the storage policy to use.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used when creating the virtual machine template's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage_policy.type"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.create_spec_vm_home_storage_policy.type": {
            "description": "Policy type for the virtual machine template's configuration and log files.",
            "enum": [
                "USE_SPECIFIED_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_placement_spec": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the deployed virtual machine should be placed.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the deployed virtual machine should be placed.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the deployed virtual machine should be placed. If {@name #cluster} and {@name #resourcePool} are both specified, {@name #resourcePool} must belong to {@name #cluster}. If {@name #cluster} and {@name #host} are both specified, {@name #host} must be a member of {@name #cluster}.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine should be placed. If {@name #host} and {@name #resourcePool} are both specified, {@name #resourcePool} must belong to {@name #host}. If {@name #host} and {@name #cluster} are both specified, {@name #host} must be a member of {@name #cluster}.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Description of the deployed virtual machine.",
                    "type": "string"
                },
                "disk_storage": {
                    "description": "Storage specification for the deployed virtual machine's disks.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage"
                },
                "placement": {
                    "description": "Information used to place the deployed virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_placement_spec"
                },
                "name": {
                    "description": "Name of the deployed virtual machine.",
                    "type": "string"
                },
                "disk_storage_overrides": {
                    "description": "Storage specification for individual disks in the deployed virtual machine. This is specified as a mapping between disk identifiers in the source virtual machine template contained in the library item and their storage specifications.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage"
                            }
                        }
                    },
                    "type": "array"
                },
                "hardware_customization": {
                    "description": "Hardware customization spec which specifies updates to the deployed virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.hardware_customization_spec"
                },
                "powered_on": {
                    "description": "Specifies whether the deployed virtual machine should be powered on after deployment.",
                    "type": "boolean"
                },
                "guest_customization": {
                    "description": "Guest customization spec to apply to the deployed virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.guest_customization_spec"
                },
                "vm_home_storage": {
                    "description": "Storage location for the deployed virtual machine's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage": {
            "type": "object",
            "properties": {
                "datastore": {
                    "description": "Identifier for the datastore associated the deployed virtual machine's disk.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Storage policy for the deployed virtual machine's disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage_policy"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage_policy": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier of the storage policy to use.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used when creating the deployed virtual machine's disk.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage_policy.type"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_disk_storage_policy.type": {
            "description": "Policy type for the deployed virtual machine's disk.",
            "enum": [
                "USE_SPECIFIED_POLICY",
                "USE_SOURCE_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage": {
            "type": "object",
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore for the deployed virtual machine's configuration and log files.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Storage policy for the deployed virtual machine's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage_policy"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage_policy": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "policy": {
                    "description": "Identifier for the storage policy to use.",
                    "type": "string"
                },
                "type": {
                    "description": "Policy type to be used when creating the deployed virtual machine's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage_policy.type"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.deploy_spec_vm_home_storage_policy.type": {
            "description": "Policy type for the deployed virtual machine's configuration and log files.",
            "enum": [
                "USE_SPECIFIED_POLICY",
                "USE_SOURCE_POLICY"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.disk_info": {
            "type": "object",
            "required": [
                "disk_storage"
            ],
            "properties": {
                "disk_storage": {
                    "description": "Disk storage related information.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.disk_storage_info"
                },
                "capacity": {
                    "description": "Capacity of the virtual disk in bytes.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.disk_storage_info": {
            "type": "object",
            "required": [
                "datastore"
            ],
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore where the disk is stored.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Identifier of the storage policy associated with the virtual disk.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.disk_update_spec": {
            "type": "object",
            "required": [
                "capacity"
            ],
            "properties": {
                "capacity": {
                    "description": "Updated capacity of the virtual disk backing in bytes. This value has to be larger than the original capacity of the disk.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.ethernet_info": {
            "type": "object",
            "required": [
                "backing_type",
                "mac_type"
            ],
            "properties": {
                "network": {
                    "description": "Identifier of the network backing the virtual Ethernet adapter.",
                    "type": "string"
                },
                "backing_type": {
                    "description": "Network backing type for the virtual Ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.ethernet_info.network_backing_type"
                },
                "mac_type": {
                    "description": "MAC address type of the ethernet adapter.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.ethernet_info.mac_address_type"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.ethernet_info.mac_address_type": {
            "description": "The {@name MacAddressType} {@term enumerated type} defines the valid MAC address origins for a virtual Ethernet adapter.",
            "enum": [
                "MANUAL",
                "GENERATED",
                "ASSIGNED"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.ethernet_info.network_backing_type": {
            "description": "The {@name NetworkBackingType} {@term enumerated type} defines valid network backing types for a virtual Ethernet adapter.",
            "enum": [
                "STANDARD_PORTGROUP",
                "HOST_DEVICE",
                "DISTRIBUTED_PORTGROUP",
                "OPAQUE_NETWORK"
            ],
            "type": "string"
        },
        "com.vmware.vcenter.vm_template.library_items.ethernet_update_spec": {
            "type": "object",
            "properties": {
                "network": {
                    "description": "Identifier of the network backing the virtual Ethernet adapter.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.guest_customization_spec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the customization specification.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.hardware_customization_spec": {
            "type": "object",
            "properties": {
                "nics": {
                    "description": "Map of Ethernet network adapters to update.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.ethernet_update_spec"
                            }
                        }
                    },
                    "type": "array"
                },
                "disks_to_remove": {
                    "description": "Idenfiers of disks to remove from the deployed virtual machine.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "type": "array"
                },
                "memory_update": {
                    "description": "Memory update specification for the deployed virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.memory_update_spec"
                },
                "cpu_update": {
                    "description": "CPU update specification for the deployed virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.cpu_update_spec"
                },
                "disks_to_update": {
                    "description": "Disk update specification for individual disks in the deployed virtual machine.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.disk_update_spec"
                            }
                        }
                    },
                    "type": "array"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.info": {
            "type": "object",
            "required": [
                "nics",
                "vm_template",
                "disks",
                "memory",
                "guest_OS",
                "cpu",
                "vm_home_storage"
            ],
            "properties": {
                "nics": {
                    "description": "Information about the virtual machine template's virtual ethernet adapters.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.ethernet_info"
                            }
                        }
                    },
                    "type": "array"
                },
                "vm_template": {
                    "description": "Identifier of the virtual machine template contained in the library item. This field is used to identify the virtual machine template in legacy APIs.",
                    "type": "string"
                },
                "disks": {
                    "description": "Storage information about the virtual machine template's virtual disks.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.disk_info"
                            }
                        }
                    },
                    "type": "array"
                },
                "memory": {
                    "description": "Memory configuration of the virtual machine template.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.memory_info"
                },
                "guest_OS": {
                    "description": "Configured guest operating system of the virtual machine template.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest_OS"
                },
                "cpu": {
                    "description": "CPU configuration of the virtual machine template.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.cpu_info"
                },
                "vm_home_storage": {
                    "description": "Storage information about the virtual machine template's configuration and log files.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.vm_home_storage_info"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.memory_info": {
            "type": "object",
            "required": [
                "size_MiB"
            ],
            "properties": {
                "size_MiB": {
                    "description": "Memory size in mebibytes.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.memory_update_spec": {
            "type": "object",
            "properties": {
                "memory": {
                    "description": "Size of a virtual machine's memory in MB.",
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items.vm_home_storage_info": {
            "type": "object",
            "required": [
                "datastore"
            ],
            "properties": {
                "datastore": {
                    "description": "Identifier of the datastore where the virtual machine template's configuration and log files are stored.",
                    "type": "string"
                },
                "storage_policy": {
                    "description": "Identifier of the storage policy associated with the virtual machine template's configuration and log files.",
                    "type": "string"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items_create": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "information used to create the library item from the source virtual machine.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.create_spec"
                }
            }
        },
        "com.vmware.vcenter.vm_template.library_items_deploy": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "spec": {
                    "description": "specification of how the virtual machine should be deployed.",
                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.deploy_spec"
                }
            }
        }
    },
    "info": {
        "description": "VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments",
        "title": "vcenter",
        "termsOfService": "http://swagger.io/terms/",
        "version": "2.0.0"
    },
    "basePath": "/rest",
    "host": "",
    "paths": {
        "/com/vmware/vcenter/inventory/datastore?~action=find": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Datastore information for the specified datastores. The key in the {@term result} {@term map} is the datastore identifier and the value in the {@term map} is the datastore information.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "required": false,
                                                "$ref": "#/definitions/com.vmware.vcenter.inventory.datastore.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if no datastore can be found for one or more of the datastore identifiers in {@param.name datastores}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "find",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.inventory.datastore_find"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "inventory/datastore "
                ],
                "summary": "Returns datastore information for the specified datastores. The key in the {@term result} {@term map} is the datastore identifier and the value in the {@term map} is the datastore information."
            }
        },
        "/com/vmware/vcenter/inventory/network?~action=find": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Network information for the specified vCenter Server networks. The key in the {@term result} {@term map} is the network identifier and the value in the {@term map} is the network information.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "required": false,
                                                "$ref": "#/definitions/com.vmware.vcenter.inventory.network.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if no datastore can be found for one or more of the vCenter Server network identifiers in {@param.name networks}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "find",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.inventory.network_find"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "inventory/network "
                ],
                "summary": "Returns network information for the specified vCenter Server networks. The key in the {@term result} {@term map} is the network identifier and the value in the {@term map} is the network information."
            }
        },
        "/com/vmware/vcenter/iso/image/id:{library_item}?~action=mount": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The identifier of the newly created virtual CD-ROM backed by the specified ISO image.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If either {@param.name vm} or the {@param.name libraryItem} is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "mount",
                "parameters": [
                    {
                        "description": "The identifier of the library item having the ISO image to mount on the virtual machine.",
                        "in": "path",
                        "name": "library_item",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.iso.image_mount"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "iso/image "
                ],
                "summary": "Mounts an ISO image from a content library on a virtual machine."
            }
        },
        "/com/vmware/vcenter/iso/image/id:{vm}?~action=unmount": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "When the operation is not allowed on the virtual machine in its current state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the virtual machine identified by {@param.name vm} is not found or the {@param.name cdrom} does not identify a virtual CD-ROM in the virtual machine.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "unmount",
                "parameters": [
                    {
                        "description": "The identifier of the virtual machine from which to unmount the virtual CD-ROM.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.iso.image_unmount"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "iso/image "
                ],
                "summary": "Unmounts a previously mounted CD-ROM using an ISO image as a backing."
            }
        },
        "/com/vmware/vcenter/ovf/capability/id:{server_guid}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "{@term CapabilityInfo} of the given server.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.ovf.capability.capability_info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the given vCenter server GUID is invalid, or does not match available vCenter servers.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Target vCenter server GUID",
                        "in": "path",
                        "name": "server_guid",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "ovf/capability "
                ],
                "summary": "Returns information about the capability of the given vCenter server."
            }
        },
        "/com/vmware/vcenter/ovf/export-flag": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A {@term list} of supported export flags.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.ovf.export_flag.info"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [],
                "tags": [
                    "ovf/export_flag "
                ],
                "summary": "Returns information about the supported export flags by the server. <p> The supported flags are: <dl> <dt>PRESERVE_MAC</dt> <dd>Include MAC addresses for network adapters.</dd> <dt>EXTRA_CONFIG</dt> <dd>Include extra configuration in OVF export.</dd> </dl> <p> Future server versions might support additional flags."
            }
        },
        "/com/vmware/vcenter/ovf/import-flag": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A {@term list} of supported import flags.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.ovf.import_flag.info"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the resource pool associated with {@param.name rp} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [],
                "tags": [
                    "ovf/import_flag "
                ],
                "summary": "Returns information about the import flags supported by the deployment platform. <p> The supported flags are: <dl> <dt>LAX</dt> <dd>Lax mode parsing of the OVF descriptor.</dd> </dl> <p> Future server versions might support additional flags."
            }
        },
        "/com/vmware/vcenter/ovf/library-item": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information about the success or failure of the {@term operation}, along with the details of the result or failure.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.create_result"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the specified virtual machine or virtual appliance is busy.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_busy"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual appliance specified by {@param.name source} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ovf/library_item "
                ],
                "summary": "Creates a library item in content library from a virtual machine or virtual appliance. <p> This {@term operation} creates a library item in content library whose content is an OVF package derived from a source virtual machine or virtual appliance, using the supplied create specification. The OVF package may be stored as in a newly created library item or in an in an existing library item. For an existing library item whose content is updated by this {@term operation}, the original content is overwritten. </p>"
            }
        },
        "/com/vmware/vcenter/ovf/library-item/id:{ovf_library_item_id}?~action=deploy": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information about the success or failure of the {@term operation}, along with the details of the result or failure.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.deployment_result"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if there was an error accessing the OVF package stored in the library item specified by {@param.name ovfLibraryItemId}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if you do not have all of the privileges described as follows : <ul> <li>{@term Operation} execution requires VirtualMachine.Config.AddNewDisk if the OVF descriptor has a disk drive (type 17) section. </li> <li>{@term Operation} execution requires VirtualMachine.Config.AdvancedConfig if the OVF descriptor has an ExtraConfig section. </li> <li>{@term Operation} execution requires Extension.Register for specified resource group if the OVF descriptor has a vServiceDependency section. </li> <li>{@term Operation} execution requires Network.Assign for target network if specified. </li> <li>{@term Operation} execution requires Datastore.AllocateSpace for target datastore if specified. </li> </ul>",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the library item specified by {@param.name ovfLibraryItemId} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "deploy",
                "parameters": [
                    {
                        "description": "Identifier of the content library item containing the OVF package to be deployed.",
                        "in": "path",
                        "name": "ovf_library_item_id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item_deploy"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ovf/library_item "
                ],
                "summary": "Deploys an OVF package stored in content library to a newly created virtual machine or virtual appliance. <p> This {@term operation} deploys an OVF package which is stored in the library item specified by {@param.name ovfLibraryItemId}. It uses the deployment specification in {@param.name deploymentSpec} to deploy the OVF package to the location specified by {@param.name target}. </p>"
            }
        },
        "/com/vmware/vcenter/ovf/library-item/id:{ovf_library_item_id}?~action=filter": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information that can be used to populate the deployment specification (see {@link ResourcePoolDeploymentSpec}) when deploying the OVF package to the deployment target specified by {@param.name target}.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item.ovf_summary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if there was an error accessing the OVF package at the specified {@param.name ovfLibraryItemId}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the library item specified by {@param.name ovfLibraryItemId} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "filter",
                "parameters": [
                    {
                        "description": "Identifier of the content library item containing the OVF package to query.",
                        "in": "path",
                        "name": "ovf_library_item_id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.ovf.library_item_filter"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ovf/library_item "
                ],
                "summary": "Queries an OVF package stored in content library to retrieve information to use when deploying the package. See {@link #deploy}. <p> This {@term operation} retrieves information from the descriptor of the OVF package stored in the library item specified by {@param.name ovfLibraryItemId}. The information returned by the {@term operation} can be used to populate the deployment specification (see {@link ResourcePoolDeploymentSpec} when deploying the OVF package to the deployment target specified by {@param.name target}. </p>"
            }
        },
        "/vcenter/cluster": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the clusters matching the Cluster.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.cluster.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 clusters match the Cluster.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Names that clusters must have to match the filter (see Cluster.Info.name).\nIf unset or empty, clusters with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the cluster for the cluster to match the filter.\nIf unset or empty, clusters in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of clusters that can match the filter.\nIf unset or empty, clusters with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                        "name": "filter.clusters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the cluster for the cluster to match the filter.\nIf unset or empty, clusters in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "cluster "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) clusters in vCenter matching the Cluster.FilterSpec."
            }
        },
        "/vcenter/cluster/{cluster}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The Cluster.Info instances that corresponds to the cluster.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.cluster.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the session id is missing from the request or the corresponding session object cannot be found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't not have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no cluster associated with cluster in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the cluster.\nThe parameter must be an identifier for the resource type: ClusterComputeResource.",
                        "in": "path",
                        "name": "cluster",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster "
                ],
                "summary": "Retrieves information about the cluster corresponding to cluster."
            }
        },
        "/vcenter/datacenter": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the datacenter name is empty or invalid as per the underlying implementation.\nif the folder is not specified and the system cannot choose a suitable one.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the datacenter folder cannot be found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The identifier of the newly created datacenter\nThe result will be an identifier for the resource type: Datacenter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.datacenter_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "datacenter "
                ],
                "summary": "Create a new datacenter in the vCenter inventory"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the datacenters matching the Datacenter.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.datacenter.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 datacenters match the Datacenter.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Names that datacenters must have to match the filter (see Datacenter.Info.name).\nIf unset or empty, datacenters with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of datacenters that can match the filter.\nIf unset or empty, datacenters with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the datacenters for the datacenter to match the filter.\nIf unset or empty, datacenters in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "datacenter "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) datacenters in vCenter matching the Datacenter.FilterSpec."
            }
        },
        "/vcenter/datacenter/{datacenter}": {
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the datacenter associated with datacenter is not empty.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_in_use"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no datacenter associated with datacenter in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Identifier of the datacenter to be deleted.\nThe parameter must be an identifier for the resource type: Datacenter.",
                        "in": "path",
                        "name": "datacenter",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "If true, delete the datacenter even if it is not empty.\nIf unset a ResourceInUse error will be reported if the datacenter is not empty. This is the equivalent of passing the value false.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean",
                        "required": false
                    }
                ],
                "tags": [
                    "datacenter "
                ],
                "summary": "Delete an empty datacenter from the vCenter Server"
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no datacenter associated with datacenter in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The Datacenter.Info instances that corresponds to the datacenter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.datacenter.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the datacenter.\nThe parameter must be an identifier for the resource type: Datacenter.",
                        "in": "path",
                        "name": "datacenter",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "datacenter "
                ],
                "summary": "Retrieves information about the datacenter corresponding to datacenter."
            }
        },
        "/vcenter/datastore": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the datastores matching the Datastore.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.datastore.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 datastores match the Datastore.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Types that datastores must have to match the filter (see Datastore.Summary.type).\nIf unset or empty, datastores with any type match the filter.",
                        "name": "filter.types",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "VMFS",
                                "NFS",
                                "NFS41",
                                "CIFS",
                                "VSAN",
                                "VFFS",
                                "VVOL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Names that datastores must have to match the filter (see Datastore.Info.name).\nIf unset or empty, datastores with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of datastores that can match the filter.\nIf unset or empty, datastores with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datastore. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datastore.",
                        "name": "filter.datastores",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the datastore for the datastore to match the filter.\nIf unset or empty, datastores in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the datastore for the datastore to match the filter.\nIf unset or empty, datastores in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "datastore "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) datastores in vCenter matching the Datastore.FilterSpec."
            }
        },
        "/vcenter/datastore/{datastore}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "information about the datastore.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.datastore.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the datastore indicated by datastore does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the datastore for which information should be retrieved.\nThe parameter must be an identifier for the resource type: Datastore.",
                        "in": "path",
                        "name": "datastore",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "datastore "
                ],
                "summary": "Retrieves information about the datastore indicated by datastore."
            }
        },
        "/vcenter/datastore/{datastore}/default-policy": {
            "get": {
                "responses": {
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required priveleges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the specified datastore does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Identifier of the default storage policy associated with the specified datastore.\nthis field is unset if there is no default storage policy associated with the datastore.\nThe result will be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the datastore for which the default policy is requested.\nThe parameter must be an identifier for the resource type: Datastore.",
                        "in": "path",
                        "name": "datastore",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "datastore/default_policy "
                ],
                "summary": "Returns the identifier of the current default storage policy associated with the specified datastore."
            }
        },
        "/vcenter/deployment": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the status information about the appliance.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if appliance state cannot be determined.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment "
                ],
                "summary": "Get the current status of the appliance deployment."
            }
        },
        "/vcenter/deployment/history": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the status information about the historical data import status.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.import_history.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the caller is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment/import_history "
                ],
                "summary": "Get the current status of the vCenter historical data import."
            }
        },
        "/vcenter/deployment/history?action=cancel": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the caller is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "cancel",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/import_history "
                ],
                "summary": "Cancels the task for importing vCenter historical data."
            }
        },
        "/vcenter/deployment/history?action=pause": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the caller is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "pause",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/import_history "
                ],
                "summary": "Pauses the task for importing vCenter historical data."
            }
        },
        "/vcenter/deployment/history?action=resume": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the caller is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "resume",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/import_history "
                ],
                "summary": "Resumes the task for importing vCenter historical data."
            }
        },
        "/vcenter/deployment/history?action=start": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the caller is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "start",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.import_history_start"
                        },
                        "in": "body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/import_history "
                ],
                "summary": "Creates and starts task for importing vCenter historical data."
            }
        },
        "/vcenter/deployment/install": {
            "get": {
                "responses": {
                    "200": {
                        "description": "InstallSpec parameters being used to configure appliance install.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.install.install_spec"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if appliance is not in INSTALL_PROGRESS state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment/install "
                ],
                "summary": "Get the parameters used to configure the ongoing appliance installation."
            }
        },
        "/vcenter/deployment/install/initial-config/remote-psc/thumbprint": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The thumbprint of the specified remote PSC",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "on exception.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment/install/initial_config/remote_psc/thumbprint "
                ],
                "summary": "Gets the SHA1 thumbprint of the remote PSC."
            }
        },
        "/vcenter/deployment/install/psc/replicated?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information about the success or failure of the checks that were performed.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.install.psc.replicated_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install/psc/replicated "
                ],
                "summary": "Checks whether the provided remote PSC is reachable and can be replicated."
            }
        },
        "/vcenter/deployment/install/psc/standalone?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information about the success or failure of the checks that were performed.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.install.psc.standalone_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install/psc/standalone "
                ],
                "summary": "Checks that the information to configure a non-replicated PSC satisfies the requirements."
            }
        },
        "/vcenter/deployment/install/remote-psc?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Information about the success or failure of the checks that were performed.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.install.remote_psc_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install/remote_psc "
                ],
                "summary": "Checks whether the remote PSC is reachable and the deployed vCenter Server can be registered with the remote PSC."
            }
        },
        "/vcenter/deployment/install?action=cancel": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in CONFIG_IN_PROGRESS state and if the operation is not INSTALL.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "cancel",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install "
                ],
                "summary": "Cancel the appliance installation that is in progress."
            }
        },
        "/vcenter/deployment/install?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "CheckInfo containing the check results.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.install_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install "
                ],
                "summary": "Run sanity checks using the InstallSpec parameters passed."
            }
        },
        "/vcenter/deployment/install?action=start": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "start",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.install_start"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/install "
                ],
                "summary": "Start the appliance installation."
            }
        },
        "/vcenter/deployment/question": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the question.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.question.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in QUESTION_RAISED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "if questions could not be retrieved although the appliance is in QUESTION_RAISED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.internal_server_error"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment/question "
                ],
                "summary": "Get the question that was raised during the configuration."
            }
        },
        "/vcenter/deployment/question?action=answer": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is NOT in QUESTION_RAISED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "if answer file could not be created.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.internal_server_error"
                                }
                            }
                        }
                    }
                },
                "operationId": "answer",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.question_answer"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/question "
                ],
                "summary": "Supply answer to the raised question."
            }
        },
        "/vcenter/deployment/upgrade": {
            "get": {
                "responses": {
                    "200": {
                        "description": "UpgradeSpec parameters being used to configure appliance upgrade.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade.upgrade_spec"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if appliance is not in UPGRADE_PROGRESS state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "deployment/upgrade "
                ],
                "summary": "Get the UpgradeSpec parameters used to configure the ongoing appliance upgrade."
            }
        },
        "/vcenter/deployment/upgrade?action=cancel": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in CONFIG_IN_PROGRESS state and if the operation is not INSTALL.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "cancel",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/upgrade "
                ],
                "summary": "Cancel the appliance upgrade that is in progress."
            }
        },
        "/vcenter/deployment/upgrade?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "CheckInfo containing the check results.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.deployment.check_info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/upgrade "
                ],
                "summary": "Run sanity checks using the UpgradeSpec parameters passed."
            }
        },
        "/vcenter/deployment/upgrade?action=start": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "start",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.deployment.upgrade_start"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment/upgrade "
                ],
                "summary": "Start the appliance installation."
            }
        },
        "/vcenter/deployment?action=rollback": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the appliance is not in FAILED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    }
                },
                "operationId": "rollback",
                "parameters": [],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "deployment "
                ],
                "summary": "Rollback a failed appliance so it can be configured once again."
            }
        },
        "/vcenter/folder": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the folders matching the Folder.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.folder.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 folders match the Folder.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Names that folders must have to match the filter (see Folder.Summary.name).\nIf unset or empty, folders with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the folder for the folder to match the filter.\nIf unset or empty, folder in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Folder.Type enumerated type defines the type of a vCenter Server folder. The type of a folder determines what what kinds of children can be contained in the folder.",
                        "name": "filter.type",
                        "enum": [
                            "DATACENTER",
                            "DATASTORE",
                            "HOST",
                            "NETWORK",
                            "VIRTUAL_MACHINE"
                        ],
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "description": "Identifiers of folders that can match the filter.\nIf unset or empty, folders with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the folder for the folder to match the filter.\nIf unset or empty, folder in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.parent_folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "folder "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the Folder.FilterSpec."
            }
        },
        "/vcenter/guest/customization-specs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the guest customization specifications matching the CustomizationSpecs.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.guest.customization_specs.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 guest customization specifications match the CustomizationSpecs.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name).\nIf unset or empty, guest customization specifications with any name match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.guest.CustomizationSpec.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported.",
                        "name": "filter.OS_type",
                        "enum": [
                            "WINDOWS",
                            "LINUX"
                        ],
                        "in": "query",
                        "type": "string"
                    }
                ],
                "tags": [
                    "guest/customization_specs "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec."
            }
        },
        "/vcenter/host": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the software version on the host is not supported.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user name or password for the administration account on the host are invalid.\nif the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no folder associated with the Host.CreateSpec.folder field in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The newly created identifier of the host in vCenter.\nThe result will be an identifier for the resource type: HostSystem.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.host_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "host "
                ],
                "summary": "Add a new standalone host in the vCenter inventory. The newly connected host will be in connected state. The vCenter Server will verify the SSL certificate before adding the host to its inventory. In the case where the SSL certificate cannot be verified because the Certificate Authority is not recognized or the certificate is self signed, the vCenter Server will fall back to thumbprint verification mode as defined by Host.CreateSpec.ThumbprintVerification."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the hosts matching the Host.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.host.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 hosts match the Host.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Identifiers of hosts that can match the filter.\nIf unset or empty, hosts with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                        "name": "filter.hosts",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If true, only hosts that are not part of a cluster can match the filter, and if false, only hosts that are are part of a cluster can match the filter.\nIf unset Hosts can match filter independent of whether they are part of a cluster or not. If this field is true and Host.FilterSpec.clusters os not empty, no hosts will match the filter.",
                        "name": "filter.standalone",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "description": "Names that hosts must have to match the filter (see Host.Summary.name).\nIf unset or empty, hosts with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Connection states that a host must be in to match the filter (see Host.Summary.connection-state.\nIf unset or empty, hosts in any connection state match the filter.",
                        "name": "filter.connection_states",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "CONNECTED",
                                "DISCONNECTED",
                                "NOT_RESPONDING"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Clusters that must contain the hosts for the hosts to match the filter.\nIf unset or empty, hosts in any cluster and hosts that are not in a cluster match the filter. If this field is not empty and Host.FilterSpec.standalone is true, no hosts will match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                        "name": "filter.clusters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "host "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) hosts in vCenter matching the Host.FilterSpec."
            }
        },
        "/vcenter/host/{host}": {
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the host associated with host is in a vCenter cluster",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_in_use"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no host associated with host in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Identifier of the host to be deleted.\nThe parameter must be an identifier for the resource type: HostSystem.",
                        "in": "path",
                        "name": "host",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "host "
                ],
                "summary": "Remove a standalone host from the vCenter Server."
            }
        },
        "/vcenter/host/{host}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no host associated with host in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Identifier of the host to be reconnected.\nThe parameter must be an identifier for the resource type: HostSystem.",
                        "in": "path",
                        "name": "host",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "host "
                ],
                "summary": "Connect to the host corresponding to host previously added to the vCenter server."
            }
        },
        "/vcenter/host/{host}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no host associated with host in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Identifier of the host to be disconnected.\nThe parameter must be an identifier for the resource type: HostSystem.",
                        "in": "path",
                        "name": "host",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "host "
                ],
                "summary": "Disconnect the host corresponding to host from the vCenter server"
            }
        },
        "/vcenter/network": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the networks matching the Network.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.network.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 networks match the Network.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Types that networks must have to match the filter (see Network.Summary.type).\nIf unset, networks with any type match the filter.",
                        "name": "filter.types",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP",
                                "OPAQUE_NETWORK"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Names that networks must have to match the filter (see Network.Summary.name).\nIf unset or empty, networks with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the network for the network to match the filter.\nIf unset or empty, networks in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of networks that can match the filter.\nIf unset or empty, networks with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network.",
                        "name": "filter.networks",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the network for the network to match the filter.\nIf unset or empty, networks in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "network "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec."
            }
        },
        "/vcenter/resource-pool": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the resource pools matching the ResourcePool.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.resource_pool.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 resource pools match the ResourcePool.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Hosts that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any host match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                        "name": "filter.hosts",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource pools that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any resource pool match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                        "name": "filter.parent_resource_pools",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Names that resource pools must have to match the filter (see ResourcePool.Info.name).\nIf unset or empty, resource pools with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of resource pools that can match the filter.\nIf unset or empty, resource pools with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                        "name": "filter.resource_pools",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Clusters that must contain the resource pool for the resource pool to match the filter.\nIf unset or empty, resource pools in any cluster match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                        "name": "filter.clusters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "resource_pool "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) resource pools in vCenter matching the ResourcePool.FilterSpec."
            }
        },
        "/vcenter/resource-pool/{resource-pool}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "information about the resource pool.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.resource_pool.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the resource pool indicated by resourcePool does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the resource pool for which information should be retrieved.\nThe parameter must be an identifier for the resource type: ResourcePool.",
                        "in": "path",
                        "name": "resource-pool",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resource_pool "
                ],
                "summary": "Retrieves information about the resource pool indicated by resourcePool."
            }
        },
        "/vcenter/services": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Map of service identifiers to service Info structures.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "$ref": "#/definitions/com.vmware.vcenter.services.service.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    }
                },
                "operationId": "list_details",
                "parameters": [],
                "tags": [
                    "services/service "
                ],
                "summary": "Lists details of vCenter services."
            }
        },
        "/vcenter/services/{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a start, stop or restart operation is in progress, update operation will fail with this error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "identifier of the service whose properties are being updated.",
                        "in": "path",
                        "name": "service",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.services.service_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "services/service "
                ],
                "summary": "Updates the properties of a service."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Service Info structure.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.services.service.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "identifier of the service whose state is being queried.",
                        "in": "path",
                        "name": "service",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "services/service "
                ],
                "summary": "Returns the state of a service."
            }
        },
        "/vcenter/services/{id}/restart": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the restart operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.timed_out"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "restart",
                "parameters": [
                    {
                        "description": "identifier of the service to restart",
                        "in": "path",
                        "name": "service",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "services/service "
                ],
                "summary": "Restarts a service"
            }
        },
        "/vcenter/services/{id}/start": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the start operation. Timeout occurs when the service takes longer than StartTimeout to start.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.timed_out"
                                }
                            }
                        }
                    }
                },
                "operationId": "start",
                "parameters": [
                    {
                        "description": "identifier of the service to start",
                        "in": "path",
                        "name": "service",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "services/service "
                ],
                "summary": "Starts a service"
            }
        },
        "/vcenter/services/{id}/stop": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a stop operation is in progress, issuing another stop operation will lead to this error.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "stop",
                "parameters": [
                    {
                        "description": "identifier of the service to stop",
                        "in": "path",
                        "name": "service",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "services/service "
                ],
                "summary": "Stops a service"
            }
        },
        "/vcenter/storage/policies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used Information about the storage policies.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.storage.policies.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1024 storage policies exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Identifiers of storage policies that can match the filter.\nIf unset or empty, storage policies with any identifiers match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vcenter.StoragePolicy.",
                        "name": "filter.policies",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "storage/policies "
                ],
                "summary": "Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter. These storage policies can be used for provisioning virtual machines or disks."
            }
        },
        "/vcenter/storage/policies/compliance/vm": {
            "get": {
                "responses": {
                    "200": {
                        "description": "compliance information about virtual machines matching the filter VM.FilterSpec.\nThe key in the result map will be an identifier for the resource type: VirtualMachine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.VM.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If more than 1000 results match the VM.FilterSpec",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Identifiers of virtual machines that can match the filter\nIf unset or empty, virtual machines with any identifier matches the filter\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: VirtualMachine.",
                        "name": "filter.vms",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Compliance Status that a virtual machine must have to match the filter. Atleast one status must be specified.",
                        "name": "filter.status",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT",
                                "UNKNOWN_COMPLIANCE",
                                "NOT_APPLICABLE",
                                "OUT_OF_DATE"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "storage/policies/compliance/VM "
                ],
                "summary": "Returns compliance information about at most 1000 virtual machines matching the filter VM.FilterSpec. If there are no virtual machines matching the VM.FilterSpec an empty List is returned. Virtual machines without storage policy association are not returned."
            }
        },
        "/vcenter/storage/policies/entities/compliance": {
            "get": {
                "responses": {
                    "200": {
                        "description": "compliance information about entities matching the filter Compliance.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compliance.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the Compliance.FilterSpec.status field contains a value that is not supported by the server.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.invalid_argument"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Compliance Status that a virtual machine must have to match the filter.",
                        "name": "filter.status",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT",
                                "UNKNOWN",
                                "NOT_APPLICABLE",
                                "OUT_OF_DATE"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "storage/policies/compliance "
                ],
                "summary": "Returns compliance information about entities matching the filter Compliance.FilterSpec. Entities without storage policy association are not returned."
            }
        },
        "/vcenter/storage/policies/{policy}/vm": {
            "get": {
                "responses": {
                    "400": {
                        "description": "if the backend server encounters some an error while processing the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required priveleges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if there is no policy associated with policy in the system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service necessary to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the virtual machines and/or their virtual disks that are associated with the given storage policy.\nThe key in the result map will be an identifier for the resource type: VirtualMachine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "$ref": "#/definitions/com.vmware.vcenter.storage.policies.VM.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "storage policy identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                        "in": "path",
                        "name": "policy",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "storage/policies/VM "
                ],
                "summary": "Returns information about the virtual machines and/or their virtual disks that are associated with the given storage policy."
            }
        },
        "/vcenter/storage/policies/{policy}?action=check-compatibility": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if input more than 1024 datastores.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the storage policy specified does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "datastore compatibility summary about a specific storage policy.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.storage.policies.compatibility_info"
                                }
                            }
                        }
                    }
                },
                "operationId": "check_compatibility",
                "parameters": [
                    {
                        "description": "The storage policy identifier\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.StoragePolicy.",
                        "in": "path",
                        "name": "policy",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.storage.policies_check_compatibility"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "storage/policies "
                ],
                "summary": "Returns datastore compatibility summary about a specific storage policy."
            }
        },
        "/vcenter/system-config/deployment-type": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the appliance is not in INITIALIZED or CONFIGURED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    }
                },
                "operationId": "reconfigure",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.system_config.deployment_type_reconfigure"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "system_config/deployment_type "
                ],
                "summary": "Reconfigure the type of the vCenter appliance."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "The type of the vCenter appliance.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.system_config.deployment_type.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if appliance is not in CONFIGURED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "system_config/deployment_type "
                ],
                "summary": "Get the type of the vCenter appliance."
            }
        },
        "/vcenter/system-config/psc-registration": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is NOT in CONFIGURED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "repoint",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.system_config.psc_registration_repoint"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "system_config/psc_registration "
                ],
                "summary": "Repoint this vCenter Server appliance to a different external PSC."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing information about the external PSC node this appliance is registered with.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.system_config.psc_registration.info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the caller is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the appliance is in NOT_INITIALIZED state.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_allowed_in_current_state"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "system_config/psc_registration "
                ],
                "summary": "Get information of the PSC that this appliance is registered with."
            }
        },
        "/vcenter/vcha/capabilities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the VCHA capabilities.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.capabilities.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the System.Read privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "vcha/capabilities "
                ],
                "summary": "Gets the capabilities of the active node of a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster/active?action=get": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Info Information about the VCHA network and placement of the active node.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.active.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the management interface IP address assignment is not static.\nIf any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. \n   -  If partial is false or unset, then the operation execution requires the Global.VCServer privilege.\n   -  If partial is true, then the operation execution requires the System.Read privilege.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the active virtual machine is not managed by the specified vCenter server for the active node.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.active_get"
                        },
                        "in": "body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/active "
                ],
                "summary": "Retrieves information about the active node of a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster/deployment-type": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the deployment type information of the the VCHA cluster.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.deployment_type.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the System.Read privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "vcha/cluster/deployment_type "
                ],
                "summary": "Retrieves the deployment type of a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster/mode": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the mode of the the VCHA cluster.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.mode.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the System.Read privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "vcha/cluster/mode "
                ],
                "summary": "Retrieves the current mode of a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster/mode?vmw-task=true": {
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "set$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.mode_set$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/mode "
                ],
                "summary": "Manipulates the mode of a VCHA Cluster. Following mode transitions are allowed:\n enabled -> disabled - Allowed only in healthy and degraded states.\n enabled -> maintenance - Allowed only in healthy state.\n disabled -> enabled - Allowed only in healthy state.\n maintenance -> enabled - Allowed only in healthy state with all nodes are running the same version.\n maintenance -> disabled - Allowed only in healthy state with all nodes are running the same version.\n All other transitions are not allowed. \n VCHA Cluster configuration remains intact in any of the cluster modes.\n"
            }
        },
        "/vcenter/vcha/cluster/passive?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "CheckResult structure containing errors and warnings.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive.check_result"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the active virtual machine is not managed by the specified vCenter server for the active node.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/passive "
                ],
                "summary": "Validates the specified passive node's placement configuration."
            }
        },
        "/vcenter/vcha/cluster/passive?action=redeploy&vmw-task=true": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "redeploy$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.passive_redeploy$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/passive "
                ],
                "summary": "Creates the passive node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node."
            }
        },
        "/vcenter/vcha/cluster/witness?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "CheckResult structure containing errors and warnings.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness.check_result"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the active virtual machine is not managed by the specified vCenter server for the active node.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness_check"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/witness "
                ],
                "summary": "Validates the specified witness node's placement configuration."
            }
        },
        "/vcenter/vcha/cluster/witness?action=redeploy&vmw-task=true": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "redeploy$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.witness_redeploy$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster/witness "
                ],
                "summary": "Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node."
            }
        },
        "/vcenter/vcha/cluster?action=deploy&vmw-task=true": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "deploy$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster_deploy$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster "
                ],
                "summary": "Prepares, clones, and configures a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster?action=failover&vmw-task=true": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "failover$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster_failover$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster "
                ],
                "summary": "Initiates failover from the active vCenter node to the passive node. \n For forced failover, Active node immediately initiates a failover. This may result into a data loss after failover. \n\n For planned failover, Active node flushes all the state to the Passive node, waits for the flush to complete before causing a failover. After the failover, Passive node starts without any data loss. \n\n A failover is allowed only in the following cases: \n\n   1.  Cluster's mode is enabled and all cluster members are present.\n   2.  Cluster's mode is maintenance and all cluster members are present.\n"
            }
        },
        "/vcenter/vcha/cluster?action=get": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the VCHA configuration and health information.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. \n   -  If partial is false or unset, then the operation execution requires the Global.VCServer privilege.\n   -  If partial is true, then the operation execution requires the System.Read privilege.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster_get"
                        },
                        "in": "body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster "
                ],
                "summary": "Retrieves the status of a VCHA cluster."
            }
        },
        "/vcenter/vcha/cluster?action=undeploy&vmw-task=true": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the passive virtual machine is not managed by the specified vCenter server.\nIf the witness virtual machine is not managed by the specified vCenter server.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "undeploy$task",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.cluster_undeploy$task"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/cluster "
                ],
                "summary": "Destroys the VCHA cluster and removes all VCHA specific information from the VCVA appliance. Optionally, the passive and witness node virtual machines will be deleted only if VCHA was deployed using automatic deployment. The active node in the cluster continues to run as a standalone VCVA appliance after the destroy operation has been performed. \n If the VCHA cluster is in a transition state and not configured, then the VCHA cluster specific information is removed.\n"
            }
        },
        "/vcenter/vcha/operations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Info structure containing the current running and disabled operations of a VCHA cluster.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vcha.operations.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the System.Read privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [],
                "tags": [
                    "vcha/operations "
                ],
                "summary": "Retrieves the current active and disabled operations of a VCHA cluster."
            }
        },
        "/vcenter/vcha/vc-credentials?action=validate": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "If any other error occurs.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If the user has insufficient privilege to perform the operation. Operation execution requires the Global.VCServer privilege.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the active virtual machine is not managed by the specified vCenter server for the active node.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "validate",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vcha.vc_credentials_validate"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vcha/vc_credentials "
                ],
                "summary": "Validates the credentials of the management vCenter server of the active node of a VCHA cluster."
            }
        },
        "/vcenter/vm": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if VM.CreateSpec.guest-os is not supported for the requested virtual hardware version and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if any of the resources specified in spec could not be found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "ID of newly-created virtual machine.\nThe result will be an identifier for the resource type: VirtualMachine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.VM_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "VM "
                ],
                "summary": "Creates a virtual machine."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Commonly used information about the virtual machines matching the VM.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.VM.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if more than 1000 virtual machines match the VM.FilterSpec.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Power states that a virtual machine must be in to match the filter (see Power.Info.state.\nIf unset or empty, virtual machines in any power state match the filter.",
                        "name": "filter.power_states",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "enum": [
                                "POWERED_OFF",
                                "POWERED_ON",
                                "SUSPENDED"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Hosts that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines on any host match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
                        "name": "filter.hosts",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Identifiers of virtual machines that can match the filter.\nIf unset or empty, virtual machines with any identifier match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: VirtualMachine.",
                        "name": "filter.vms",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datacenters that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any datacenter match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.",
                        "name": "filter.datacenters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource pools that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any resource pool match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                        "name": "filter.resource_pools",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Names that virtual machines must have to match the filter (see VM.Info.name).\nIf unset or empty, virtual machines with any name match the filter.",
                        "name": "filter.names",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Folders that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any folder match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.",
                        "name": "filter.folders",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Clusters that must contain the virtual machine for the virtual machine to match the filter.\nIf unset or empty, virtual machines in any cluster match the filter.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
                        "name": "filter.clusters",
                        "collectionFormat": "multi",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "VM "
                ],
                "summary": "Returns information about at most 1000 visible (subject to permission checks) virtual machines in vCenter matching the VM.FilterSpec."
            }
        },
        "/vcenter/vm-template/library-items": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if any of the resources needed to create the virtual machine template could not be allocated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user that requested the {@term operation} cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user that requested the {@term operation} is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the source virtual machine specified by {@link CreateSpec#sourceVm} does not exist.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if any of the services involved in the {@term operation} are unavailable.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Identifier of the newly created library item.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm_template/library_items "
                ],
                "summary": "Creates a library item in content library from a virtual machine. This {@term operation} creates a library item in content library whose content is a virtual machine template created from the source virtual machine, using the supplied create specification. The virtual machine template is stored in a newly created library item."
            }
        },
        "/vcenter/vm-template/library-items/{item}": {
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine template's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user that requested the {@term operation} cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user that requested the {@term operation} is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the library item could not be found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if any of the services involved in the {@term operation} are unavailable.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the virtual machine template item contained in the library item.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "required": false,
                                    "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "identifier of the library item containing the virtual machine template.",
                        "in": "path",
                        "name": "item",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm_template/library_items "
                ],
                "summary": "Returns information about a virtual machine template contained in the library item specified by {@param.name templateLibraryItem}"
            }
        },
        "/vcenter/vm-template/library-items/{item}?action=deploy": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if there was an error in allocating any of the resources required by the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unable_to_allocate_resource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user that requested the {@term operation} cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user that requested the {@term operation} is not authorized to perform the {@term operation}.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the library item specified by {@param.name templateLibraryItem} cannot be found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if any of the services involved in the {@term operation} are unavailable.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Identifier of the deployed virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "deploy",
                "parameters": [
                    {
                        "description": "identifier of the content library item containing the source virtual machine template to be deployed.",
                        "in": "path",
                        "name": "item",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm_template.library_items_deploy"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm_template/library_items "
                ],
                "summary": "Deploys a virtual machine as a copy of the source virtual machine template contained in the library item specified by {@param.name templateLibraryItem}. It uses the deployment specification in {@param.name spec}. If {@link DeploySpec#poweredOn} and/or {@link DeploySpec#guestCustomization} are specified, the server triggers the power on and/or guest customization operations, which are executed asynchronously."
            }
        },
        "/vcenter/vm/{vm}": {
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "VM "
                ],
                "summary": "Deletes a virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.VM.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "VM "
                ],
                "summary": "Returns information about a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/guest/identity": {
            "get": {
                "responses": {
                    "200": {
                        "description": "guest identification information.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest.identity.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if VMware Tools is not running.\nif VMware Tools has not provided any values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/guest/identity "
                ],
                "summary": "Return information about the guest."
            }
        },
        "/vcenter/vm/{vm}/guest/local-filesystem": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Information about the local file systems configured in the guest operating system.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "$ref": "#/definitions/com.vmware.vcenter.vm.guest.local_filesystem.info"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if VMware Tools is not running.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/guest/local_filesystem "
                ],
                "summary": "Returns details of the local file systems in the guest operating system."
            }
        },
        "/vcenter/vm/{vm}/guest/power": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Guest OS powerstate information.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.guest.power.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/guest/power "
                ],
                "summary": "Returns information about the guest operating system power state."
            }
        },
        "/vcenter/vm/{vm}/guest/power?action=reboot": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the virtual machine does not support being powered on (e.g. marked as a template, serving as a fault-tolerance secondary virtual machine).",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if VMware Tools is not running.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "reboot",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/guest/power "
                ],
                "summary": "Issues a request to the guest operating system asking it to perform a reboot. This request returns immediately and does not wait for the guest operating system to complete the operation."
            }
        },
        "/vcenter/vm/{vm}/guest/power?action=shutdown": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the virtual machine does not support being powered on (e.g. marked as a template, serving as a fault-tolerance secondary virtual machine).",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if VMware Tools is not running.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "shutdown",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/guest/power "
                ],
                "summary": "Issues a request to the guest operating system asking it to perform a clean shutdown of all services. This request returns immediately and does not wait for the guest operating system to complete the operation."
            }
        },
        "/vcenter/vm/{vm}/guest/power?action=standby": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the virtual machine does not support being powered on (e.g. marked as a template, serving as a fault-tolerance secondary virtual machine).",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if VMware Tools is not running.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "standby",
                "parameters": [
                    {
                        "description": "Identifier of the virtual machine.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/guest/power "
                ],
                "summary": "Issues a request to the guest operating system asking it to perform a suspend operation."
            }
        },
        "/vcenter/vm/{vm}/hardware": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware "
                ],
                "summary": "Updates the virtual hardware settings of a virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual hardware settings of the virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware "
                ],
                "summary": "Returns the virtual hardware settings of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/action/upgrade": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "upgrade",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware_upgrade"
                        },
                        "in": "body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware "
                ],
                "summary": "Upgrades the virtual machine to a newer virtual hardware version."
            }
        },
        "/vcenter/vm/{vm}/hardware/adapter/sata": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the guest operating system of the virtual machine is not supported and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual SATA adapter identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/adapter/sata "
                ],
                "summary": "Adds a virtual SATA adapter to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual SATA adapters.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/sata "
                ],
                "summary": "Returns commonly used information about the virtual SATA adapters belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/adapter/sata/{adapter}": {
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual SATA adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual SATA adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter.",
                        "in": "path",
                        "name": "adapter",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/sata "
                ],
                "summary": "Removes a virtual SATA adapter from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual SATA adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual SATA adapter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.sata.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual SATA adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SataAdapter.",
                        "in": "path",
                        "name": "adapter",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/sata "
                ],
                "summary": "Returns information about a virtual SATA adapter."
            }
        },
        "/vcenter/vm/{vm}/hardware/adapter/scsi": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the guest operating system of the virtual machine is not supported and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual SCSI adapter identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/adapter/scsi "
                ],
                "summary": "Adds a virtual SCSI adapter to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual SCSI adapters.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/scsi "
                ],
                "summary": "Returns commonly used information about the virtual SCSI adapters belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/adapter/scsi/{adapter}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual SCSI adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual SCSI adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                        "in": "path",
                        "name": "adapter",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/adapter/scsi "
                ],
                "summary": "Updates the configuration of a virtual SCSI adapter."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual SCSI adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual SCSI adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                        "in": "path",
                        "name": "adapter",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/scsi "
                ],
                "summary": "Removes a virtual SCSI adapter from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual SCSI adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual SCSI adapter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.adapter.scsi.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual SCSI adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ScsiAdapter.",
                        "in": "path",
                        "name": "adapter",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/adapter/scsi "
                ],
                "summary": "Returns information about a virtual SCSI adapter."
            }
        },
        "/vcenter/vm/{vm}/hardware/boot": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/boot "
                ],
                "summary": "Updates the boot-related settings of a virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Boot-related settings of the virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/boot "
                ],
                "summary": "Returns the boot-related settings of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/boot/device": {
            "put": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found, or if any of the specified virtual devices is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "set",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device_set"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/boot/device "
                ],
                "summary": "Sets the virtual devices that will be used to boot the virtual machine. The virtual machine will check the devices in order, attempting to boot from each, until the virtual machine boots successfully. If the list is empty, the virtual machine will use a default boot sequence. There should be no more than one instance of Device.Entry for a given device type except ETHERNET in the list."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ordered list of configured boot devices.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.boot.device.entry"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/boot/device "
                ],
                "summary": "Returns an ordered list of boot devices for the virtual machine. If the list is empty, the virtual machine uses a default boot sequence."
            }
        },
        "/vcenter/vm/{vm}/hardware/cdrom": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the guest operating system of the virtual machine is not supported and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual CD-ROM device identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Adds a virtual CD-ROM device to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual CD-ROM devices.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Returns commonly used information about the virtual CD-ROM devices belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/cdrom/{cdrom}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual CD-ROM device is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual CD-ROM device identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "in": "path",
                        "name": "cdrom",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Updates the configuration of a virtual CD-ROM device."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual CD-ROM device is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual CD-ROM device identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "in": "path",
                        "name": "cdrom",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Removes a virtual CD-ROM device from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual CD-ROM device is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual CD-ROM device.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cdrom.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual CD-ROM device identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "in": "path",
                        "name": "cdrom",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Returns information about a virtual CD-ROM device."
            }
        },
        "/vcenter/vm/{vm}/hardware/cdrom/{cdrom}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual CD-ROM device is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual CD-ROM device identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "in": "path",
                        "name": "cdrom",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Connects a virtual CD-ROM device of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. \n For a powered-off virtual machine, the Cdrom.update operation may be used to configure the virtual CD-ROM device to start in the connected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/cdrom/{cdrom}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual CD-ROM device is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual CD-ROM device identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Cdrom.",
                        "in": "path",
                        "name": "cdrom",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/cdrom "
                ],
                "summary": "Disconnects a virtual CD-ROM device of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the CD-ROM device is not connected to its backing resource. \n For a powered-off virtual machine, the Cdrom.update operation may be used to configure the virtual CD-ROM device to start in the disconnected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/cpu": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cpu_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/cpu "
                ],
                "summary": "Updates the CPU-related settings of a virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "CPU-related settings of the virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.cpu.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/cpu "
                ],
                "summary": "Returns the CPU-related settings of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/disk": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the guest operating system of the virtual machine is not supported and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual disk identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/disk "
                ],
                "summary": "Adds a virtual disk to the virtual machine. While adding the virtual disk, a new VMDK file may be created or an existing VMDK file may be used to back the virtual disk."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about the virtual disks.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/disk "
                ],
                "summary": "Returns commonly used information about the virtual disks belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/disk/{disk}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual disk is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual disk identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                        "in": "path",
                        "name": "disk",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/disk "
                ],
                "summary": "Updates the configuration of a virtual disk. An update operation can be used to detach the existing VMDK file and attach another VMDK file to the virtual machine."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual disk is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual disk identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                        "in": "path",
                        "name": "disk",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/disk "
                ],
                "summary": "Removes a virtual disk from the virtual machine. This operation does not destroy the VMDK file that backs the virtual disk. It only detaches the VMDK file from the virtual machine. Once detached, the VMDK file will not be destroyed when the virtual machine to which it was associated is deleted."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual disk is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual disk.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.disk.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual disk identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Disk.",
                        "in": "path",
                        "name": "disk",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/disk "
                ],
                "summary": "Returns information about a virtual disk."
            }
        },
        "/vcenter/vm/{vm}/hardware/ethernet": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the guest operating system of the virtual machine is not supported and spec includes unset fields that default to guest-specific values.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unsupported"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or network backing is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual Ethernet adapter identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Adds a virtual Ethernet adapter to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual Ethernet adapters.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Returns commonly used information about the virtual Ethernet adapters belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/ethernet/{nic}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine, virtual Ethernet adapter, or backing network is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual Ethernet adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "in": "path",
                        "name": "nic",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Updates the configuration of a virtual Ethernet adapter."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual Ethernet adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual Ethernet adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "in": "path",
                        "name": "nic",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Removes a virtual Ethernet adapter from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual Ethernet adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual Ethernet adapter.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.ethernet.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual Ethernet adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "in": "path",
                        "name": "nic",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Returns information about a virtual Ethernet adapter."
            }
        },
        "/vcenter/vm/{vm}/hardware/ethernet/{nic}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual Ethernet adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual Ethernet adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "in": "path",
                        "name": "nic",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Connects a virtual Ethernet adapter of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. \n For a powered-off virtual machine, the Ethernet.update operation may be used to configure the virtual Ethernet adapter to start in the connected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/ethernet/{nic}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual Ethernet adapter is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual Ethernet adapter identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Ethernet.",
                        "in": "path",
                        "name": "nic",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/ethernet "
                ],
                "summary": "Disconnects a virtual Ethernet adapter of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the Ethernet adapter is not connected to its backing resource. \n For a powered-off virtual machine, the Ethernet.update operation may be used to configure the virtual Ethernet adapter to start in the disconnected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/floppy": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual floppy drive identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Adds a virtual floppy drive to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual floppy drives.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Returns commonly used information about the virtual floppy drives belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/floppy/{floppy}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual floppy drive is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual floppy drive identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "in": "path",
                        "name": "floppy",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Updates the configuration of a virtual floppy drive."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual floppy drive is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual floppy drive identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "in": "path",
                        "name": "floppy",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Removes a virtual floppy drive from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual floppy drive is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual floppy drive.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.floppy.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual floppy drive identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "in": "path",
                        "name": "floppy",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Returns information about a virtual floppy drive."
            }
        },
        "/vcenter/vm/{vm}/hardware/floppy/{floppy}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual floppy drive is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual floppy drive identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "in": "path",
                        "name": "floppy",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Connects a virtual floppy drive of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. \n For a powered-off virtual machine, the Floppy.update operation may be used to configure the virtual floppy drive to start in the connected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/floppy/{floppy}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual floppy drive is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual floppy drive identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.Floppy.",
                        "in": "path",
                        "name": "floppy",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/floppy "
                ],
                "summary": "Disconnects a virtual floppy drive of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the floppy drive is not connected to its backing resource. \n For a powered-off virtual machine, the Floppy.update operation may be used to configure the virtual floppy floppy to start in the disconnected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/memory": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.memory_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/memory "
                ],
                "summary": "Updates the memory-related settings of a virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Memory-related settings of the virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.memory.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/memory "
                ],
                "summary": "Returns the memory-related settings of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/parallel": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual parallel port identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Adds a virtual parallel port to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual parallel ports.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Returns commonly used information about the virtual parallel ports belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/parallel/{port}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual parallel port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual parallel port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Updates the configuration of a virtual parallel port."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual parallel port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual parallel port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Removes a virtual parallel port from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual parallel port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual parallel port.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.parallel.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual parallel port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Returns information about a virtual parallel port."
            }
        },
        "/vcenter/vm/{vm}/hardware/parallel/{port}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual parallel port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual parallel port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Connects a virtual parallel port of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. \n For a powered-off virtual machine, the Parallel.update operation may be used to configure the virtual parallel port to start in the connected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/parallel/{port}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual parallel port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual parallel port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.ParallelPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/parallel "
                ],
                "summary": "Disconnects a virtual parallel port of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the parallel port is not connected to its backing. \n For a powered-off virtual machine, the Parallel.update operation may be used to configure the virtual parallel port to start in the disconnected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/serial": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Virtual serial port identifier.\nThe result will be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial_create"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Adds a virtual serial port to the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of commonly used information about virtual serial ports.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "items": {
                                        "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.summary"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "operationId": "list",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Returns commonly used information about the virtual serial ports belonging to the virtual machine."
            }
        },
        "/vcenter/vm/{vm}/hardware/serial/{port}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual serial port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual serial port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Updates the configuration of a virtual serial port."
            },
            "delete": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual serial port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual serial port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Removes a virtual serial port from the virtual machine."
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual serial port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Information about the specified virtual serial port.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.hardware.serial.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual serial port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Returns information about a virtual serial port."
            }
        },
        "/vcenter/vm/{vm}/hardware/serial/{port}/connect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual serial port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "connect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual serial port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Connects a virtual serial port of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. \n For a powered-off virtual machine, the Serial.update operation may be used to configure the virtual serial port to start in the connected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/hardware/serial/{port}/disconnect": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine or virtual serial port is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "disconnect",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "Virtual serial port identifier.\nThe parameter must be an identifier for the resource type: com.vmware.vcenter.vm.hardware.SerialPort.",
                        "in": "path",
                        "name": "port",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/hardware/serial "
                ],
                "summary": "Disconnects a virtual serial port of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the serial port is not connected to its backing. \n For a powered-off virtual machine, the Serial.update operation may be used to configure the virtual serial port to start in the disconnected state when the virtual machine is powered on.\n"
            }
        },
        "/vcenter/vm/{vm}/power": {
            "get": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine's configuration or execution state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Power state information for the specified virtual machine.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.power.info"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/power "
                ],
                "summary": "Returns the power state information of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/power/reset": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine is performing another operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_busy"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "reset",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/power "
                ],
                "summary": "Resets a powered-on virtual machine."
            }
        },
        "/vcenter/vm/{vm}/power/start": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine is performing another operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_busy"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "start",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/power "
                ],
                "summary": "Powers on a powered-off or suspended virtual machine."
            }
        },
        "/vcenter/vm/{vm}/power/stop": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine is performing another operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_busy"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "stop",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/power "
                ],
                "summary": "Powers off a powered-on or suspended virtual machine."
            }
        },
        "/vcenter/vm/{vm}/power/suspend": {
            "post": {
                "responses": {
                    "400": {
                        "description": "if the virtual machine is performing another operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_busy"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "if the virtual machine is not found.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.not_found"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": ""
                    }
                },
                "operationId": "suspend",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/power "
                ],
                "summary": "Suspends a powered-on virtual machine."
            }
        },
        "/vcenter/vm/{vm}/storage/policy": {
            "patch": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the virtual machine or disk's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user doesn't have the required priveleges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user is not authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "update",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy_update"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/storage/policy "
                ],
                "summary": "Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks."
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Overview of Storage Policy associated with a virtual machine's home directory and/or its associated virtual hard disks.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the virtual machine's configuration state cannot be accessed.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.resource_inaccessible"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/storage/policy "
                ],
                "summary": "Returns Information about Storage Policy associated with a virtual machine's home directory and/or its virtual hard disks."
            }
        },
        "/vcenter/vm/{vm}/storage/policy/compliance": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Virtual machine storage policy compliance Info Compliance.Info.\nIf unset, neither the virtual machine home directory nor any of it's virtual disks are associated with a storage policy.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "required": false,
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "get",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "vm/storage/policy/compliance "
                ],
                "summary": "Returns the cached storage policy compliance information of a virtual machine."
            }
        },
        "/vcenter/vm/{vm}/storage/policy/compliance?action=check": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Virtual machine storage policy compliance Compliance.Info structure .\nIf unset, neither the virtual machine home directory nor any of it's virtual disks are associated with a storage policy.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "value": {
                                    "required": false,
                                    "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance.info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "if the user does not have the required privileges.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "if the user cannot be authenticated.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.unauthenticated"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service necessary to complete the request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "$ref": "#/definitions/com.vmware.vapi.std.errors.service_unavailable"
                                }
                            }
                        }
                    }
                },
                "operationId": "check",
                "parameters": [
                    {
                        "description": "Virtual machine identifier.\nThe parameter must be an identifier for the resource type: VirtualMachine.",
                        "in": "path",
                        "name": "vm",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/com.vmware.vcenter.vm.storage.policy.compliance_check"
                        },
                        "in": "body"
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vm/storage/policy/compliance "
                ],
                "summary": "Returns the storage policy Compliance Compliance.Info of a virtual machine after explicitly re-computing compliance check."
            }
        }
    },
    "swagger": "2.0"
}
