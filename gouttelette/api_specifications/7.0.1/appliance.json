{
    "swagger": "2.0",
    "info": {
        "description": "The vCenter Server Appliance is a preconfigured Linux-based virtual machine optimized for running vCenter Server and associated services.",
        "title": "appliance",
        "version": "2.0.0"
    },
    "host": "<vcenter>",
    "securityDefinitions": {
        "basic_auth": {
            "type": "basic"
        }
    },
    "basePath": "",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/api/appliance/infraprofile/configs": {
            "get": {
                "tags": [
                    "infraprofile/configs"
                ],
                "summary": "List all the profiles which are registered.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of profiles with description are registered.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplianceInfraprofileConfigsProfileInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/api/appliance/infraprofile/configs?action=export": {
            "post": {
                "tags": [
                    "infraprofile/configs"
                ],
                "summary": "Exports the desired profile specification.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceInfraprofileConfigsExport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration specification JSON in string format.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "export"
            }
        },
        "/api/appliance/infraprofile/configs?action=import&vmw-task=true": {
            "post": {
                "tags": [
                    "infraprofile/configs"
                ],
                "summary": "Imports the desired profile specification.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceInfraprofileConfigsImportProfileTask"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Import version.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "400": {
                        "description": "If there is another operation in progress.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "import_profile$task"
            }
        },
        "/api/appliance/infraprofile/configs?action=validate&vmw-task=true": {
            "post": {
                "tags": [
                    "infraprofile/configs"
                ],
                "summary": "Validates the desired profile specification.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceInfraprofileConfigsValidateTask"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Result of validation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "validate$task"
            }
        },
        "/api/appliance/system/global-fips": {
            "get": {
                "tags": [
                    "system/security/global_fips"
                ],
                "summary": "Get current appliance FIPS settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Current FIPS settings state.",
                        "schema": {
                            "$ref": "#/definitions/ApplianceSystemSecurityGlobalFipsInfo"
                        }
                    },
                    "500": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    }
                },
                "operationId": "get"
            },
            "put": {
                "tags": [
                    "system/security/global_fips"
                ],
                "summary": "Enable/Disable Global FIPS mode for the appliance.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceSystemSecurityGlobalFipsUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    }
                },
                "operationId": "update"
            }
        },
        "/api/appliance/vcenter/settings/v1/config": {
            "get": {
                "tags": [
                    "vcenter/settings/v1/config"
                ],
                "summary": "Returns information about a profile. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about the specified profile.",
                        "schema": {
                            "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigInfo"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "400": {
                        "description": "If given version is different than the latest one.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "404": {
                        "description": "If there is no profile or version associated with profile or version in the system.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "get"
            },
            "post": {
                "tags": [
                    "vcenter/settings/v1/config"
                ],
                "summary": "Creates a Profile. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Write. \n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of newly-created profile.\nThe result will be an identifier for the resource type: appliance.vcenter.settings.v1.config.profile.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "if any of the specified parameters are invalid.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate with a service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "create"
            },
            "delete": {
                "tags": [
                    "vcenter/settings/v1/config"
                ],
                "summary": "Deletes a profile. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Write. \n",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "400": {
                        "description": "if any other operation running on the same profile.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "if the profile is not found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "if the system is unable to communicate service to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "delete"
            }
        },
        "/api/appliance/vcenter/settings/v1/config-current": {
            "get": {
                "tags": [
                    "vcenter/settings/v1/config_current"
                ],
                "summary": "Returns the current state of the vCenter. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires Infraprofile.Read. \n",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplianceVcenterSettingsV1DesiredState"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/api/appliance/vcenter/settings/v1/config/{version}?action=scan&vmw-task=true": {
            "post": {
                "tags": [
                    "vcenter/settings/v1/config"
                ],
                "summary": "Scans all the components in the profiles against the applied profile. result of this operation can be queried by calling the api cis/tasks/{task-id} where the task-id is the response of this operation. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "version of the profile.\nThe parameter must be an identifier for the resource type: appliance.vcenter.settings.v1.config.version."
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Result of the scan operation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If there is no profile associated with profile in the system.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "scan$task"
            }
        },
        "/api/appliance/vcenter/settings/v1/config?action=scan-desired-state&vmw-task=true": {
            "post": {
                "tags": [
                    "vcenter/settings/v1/config"
                ],
                "summary": "Scans all the components in the desired state against the applied profile. result of this operation can be queried by calling the api cis/tasks/{task-id} where the task-id is the response of this operation. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigScanDesiredStateTask"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Result of the scan operation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "If there is unknown internal error. The accompanying error message will give more details about the failure.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "503": {
                        "description": "If the service is not available.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsServiceUnavailable"
                        }
                    },
                    "401": {
                        "description": "If the caller is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "scan_desired_state$task"
            }
        },
        "/rest/appliance/access/consolecli": {
            "put": {
                "tags": [
                    "access/consolecli"
                ],
                "summary": "Set enabled state of the console-based controlled CLI (TTY1).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.consolecli_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "access/consolecli"
                ],
                "summary": "Get enabled state of the console-based controlled CLI (TTY1).",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Console-based controlled CLI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.consolecli_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/access/dcui": {
            "put": {
                "tags": [
                    "access/dcui"
                ],
                "summary": "Set enabled state of Direct Console User Interface (DCUI TTY2).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.dcui_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "access/dcui"
                ],
                "summary": "Get enabled state of Direct Console User Interface (DCUI TTY2).",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "DCUI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.dcui_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/access/shell": {
            "put": {
                "tags": [
                    "access/shell"
                ],
                "summary": "Set enabled state of BASH, that is, access to BASH from within the controlled CLI.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.shell_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "access/shell"
                ],
                "summary": "Get enabled state of BASH, that is, access to BASH from within the controlled CLI.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Current shell configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.shell_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/access/ssh": {
            "put": {
                "tags": [
                    "access/ssh"
                ],
                "summary": "Set enabled state of the SSH-based controlled CLI.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.access.ssh_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "access/ssh"
                ],
                "summary": "Get enabled state of the SSH-based controlled CLI.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "SSH-based controlled CLI is enabled.",
                        "schema": {
                            "$ref": "#/definitions/appliance.access.ssh_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/applmgmt": {
            "get": {
                "tags": [
                    "health/applmgmt"
                ],
                "summary": "Get health status of applmgmt services.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "health status",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.applmgmt_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/database-storage": {
            "get": {
                "tags": [
                    "health/databasestorage"
                ],
                "summary": "Get database storage health.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Database storage health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.databasestorage_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/load": {
            "get": {
                "tags": [
                    "health/load"
                ],
                "summary": "Get load health.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Load health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.load_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/mem": {
            "get": {
                "tags": [
                    "health/mem"
                ],
                "summary": "Get memory health.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Memory health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.mem_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/software-packages": {
            "get": {
                "tags": [
                    "health/softwarepackages"
                ],
                "summary": "Get information on available software updates available in the remote vSphere Update Manager repository. Red indicates that security updates are available. Orange indicates that non-security updates are available. Green indicates that there are no updates available. Gray indicates that there was an error retreiving information on software updates.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "software updates available.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.softwarepackages_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/storage": {
            "get": {
                "tags": [
                    "health/storage"
                ],
                "summary": "Get storage health.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Storage health.",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.storage_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/swap": {
            "get": {
                "tags": [
                    "health/swap"
                ],
                "summary": "Get swap health.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Swap health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.swap_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/system": {
            "get": {
                "tags": [
                    "health/system"
                ],
                "summary": "Get overall health of system.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System health",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.system_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/health/system/lastcheck": {
            "get": {
                "tags": [
                    "health/system"
                ],
                "summary": "Get last check timestamp of the health of the system.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System health last check timestamp",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.system.lastcheck_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "lastcheck"
            }
        },
        "/rest/appliance/health/{item}/messages": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Get health messages.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "item",
                        "description": "ID of the data item"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the health messages",
                        "schema": {
                            "$ref": "#/definitions/appliance.health.messages_resp"
                        }
                    },
                    "404": {
                        "description": "Unknown health item",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "messages"
            }
        },
        "/rest/appliance/local-accounts": {
            "get": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Get a list of the local user accounts.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of identifiers",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/local-accounts/global-policy": {
            "put": {
                "tags": [
                    "local_accounts/policy"
                ],
                "summary": "Set the global password policy.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.policy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "local_accounts/policy"
                ],
                "summary": "Get the global password policy.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Global password policy",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts.policy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/local-accounts/{username}": {
            "put": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Set local user account properties.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "description": "User login name"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Get the local user account information.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "description": "User login name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Local user account information",
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_resp"
                        }
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "post": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Create a new local user account.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "description": "User login name"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "create"
            },
            "patch": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Update selected fields in local user account properties.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "description": "User login name"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.local_accounts_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "update"
            },
            "delete": {
                "tags": [
                    "local_accounts"
                ],
                "summary": "Delete a local user account.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "description": "User login name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "If the account is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "delete"
            }
        },
        "/rest/appliance/logging/forwarding": {
            "put": {
                "tags": [
                    "logging/forwarding"
                ],
                "summary": "Sets the configuration for forwarding log messages to remote log servers.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if there is any internal error during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "logging/forwarding"
                ],
                "summary": "Returns the configuration for forwarding log messages to remote logging servers.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about the configuration for forwarding log messages to remote logging servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_resp"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/logging/forwarding?action=test": {
            "post": {
                "tags": [
                    "logging/forwarding"
                ],
                "summary": "Validates the current log forwarding configuration by checking the liveness of the remote machine and optionally sending a test diagnostic log message from the appliance to all configured logging servers to allow manual end-to-end validation. The message that is sent is: \"This is a diagnostic log test message from vCenter Server.\"",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the status of the connection to each of the remote logging servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.logging.forwarding.test_resp"
                        }
                    }
                },
                "operationId": "test"
            }
        },
        "/rest/appliance/monitoring": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get monitored items list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of names",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/monitoring/query": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get monitoring data.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "item.names",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        },
                        "description": "monitored item IDs Ex: CPU, MEMORY",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "item.interval",
                        "type": "string",
                        "enum": [
                            "MINUTES30",
                            "HOURS2",
                            "MINUTES5",
                            "DAY1",
                            "HOURS6"
                        ],
                        "description": "{@name IntervalType} {@term enumerated type} Defines interval between the values in hours and mins,                    for which aggregation will apply",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "item.function",
                        "type": "string",
                        "enum": [
                            "COUNT",
                            "MAX",
                            "AVG",
                            "MIN"
                        ],
                        "description": "{@name FunctionType} {@term enumerated type} Defines aggregation function",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "item.start_time",
                        "type": "string",
                        "description": "Start time in UTC",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "item.end_time",
                        "type": "string",
                        "description": "End time in UTC",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of MonitoredItemData structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring.query_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "query"
            }
        },
        "/rest/appliance/monitoring/{stat_id}": {
            "get": {
                "tags": [
                    "monitoring"
                ],
                "summary": "Get monitored item info",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "stat_id",
                        "description": "statistic item id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredItem structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.monitoring_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking": {
            "get": {
                "tags": [
                    "networking"
                ],
                "summary": "Get Networking information for all configured interfaces.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Map of network configuration info for all interfaces.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "patch": {
                "tags": [
                    "networking"
                ],
                "summary": "Enable or Disable ipv6 on all interfaces",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "update"
            }
        },
        "/rest/appliance/networking/dns/domains": {
            "post": {
                "tags": [
                    "networking/dns/domains"
                ],
                "summary": "Add domain to DNS search domains.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains_add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "add"
            },
            "put": {
                "tags": [
                    "networking/dns/domains"
                ],
                "summary": "Set DNS search domains.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/dns/domains"
                ],
                "summary": "Get list of DNS search domains.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of domains.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.domains.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/networking/dns/hostname": {
            "put": {
                "tags": [
                    "networking/dns/hostname"
                ],
                "summary": "Set the Fully Qualified Domain Name.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/dns/hostname"
                ],
                "summary": "Get the Fully Qualified Doman Name.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "FQDN.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/dns/hostname/test": {
            "post": {
                "tags": [
                    "networking/dns/hostname"
                ],
                "summary": "Test the Fully Qualified Domain Name.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FQDN status",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.hostname.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "test"
            }
        },
        "/rest/appliance/networking/dns/servers": {
            "post": {
                "tags": [
                    "networking/dns/servers"
                ],
                "summary": "Add a DNS server. This method fails if mode argument is \"dhcp\"",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "add"
            },
            "put": {
                "tags": [
                    "networking/dns/servers"
                ],
                "summary": "Set the DNS server configuration. If you set the mode argument to \"DHCP\", a DHCP refresh is forced.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/dns/servers"
                ],
                "summary": "Get DNS server configuration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "DNS server configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/dns/servers/test": {
            "post": {
                "tags": [
                    "networking/dns/servers"
                ],
                "summary": "Test if dns servers are reachable.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DNS reacable status",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.dns.servers.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "test"
            }
        },
        "/rest/appliance/networking/firewall/inbound": {
            "put": {
                "tags": [
                    "networking/firewall/inbound"
                ],
                "summary": "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses. This overwrites the existing firewall rules and creates a new rule list. Within the list of traffic rules, rules are processed in order of appearance, from top to bottom. For example, the list of rules can be as follows: <table> <tr> <th>Address</th><th>Prefix</th><th>Interface Name</th><th>Policy</th> </tr> <tr> <td>10.112.0.1</td><td>0</td><td>*</td><td>REJECT</td> </tr> <tr> <td>10.112.0.1</td><td>0</td><td>nic0</td><td>ACCEPT</td> </tr> </table> In the above example, the first rule drops all packets originating from 10.112.0.1 and<br> the second rule accepts all packets originating from 10.112.0.1 only on nic0. In effect, the second rule is always ignored which is not desired, hence the order has to be swapped. When a connection matches a firewall rule, further processing for the connection stops, and the appliance ignores any additional firewall rules you have set.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.firewall.inbound_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/firewall/inbound"
                ],
                "summary": "Get the ordered list of firewall rules. Within the list of traffic rules, rules are processed in order of appearance, from top to bottom. When a connection matches a firewall rule, further processing for the connection stops, and the appliance ignores any additional firewall rules you have set.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of address-based firewall rules.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.firewall.inbound_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/interfaces": {
            "get": {
                "tags": [
                    "networking/interfaces"
                ],
                "summary": "Get list of available network interfaces, including those that are not yet configured.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of InterfaceInfo structures.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}": {
            "get": {
                "tags": [
                    "networking/interfaces"
                ],
                "summary": "Get information about a particular network interface.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "interface_name",
                        "description": "Network interface, for example, \"nic0\"."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network interface information.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified interface is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}/ipv4": {
            "put": {
                "tags": [
                    "networking/interfaces/ipv4"
                ],
                "summary": "Set IPv4 network configuration for specific network interface.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "interface_name",
                        "description": "Network interface to update, for example, \"nic0\"."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv4_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/interfaces/ipv4"
                ],
                "summary": "Get IPv4 network configuration for specific NIC.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "interface_name",
                        "description": "The Network interface to query, for example, \"nic0\"."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The IPv4 configuration for the queried NIC.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv4_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/interfaces/{interface_name}/ipv6": {
            "put": {
                "tags": [
                    "networking/interfaces/ipv6"
                ],
                "summary": "Set IPv6 network configuration for specific interface.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "interface_name",
                        "description": "Network interface to update, for example, \"nic0\"."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv6_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "The specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/interfaces/ipv6"
                ],
                "summary": "Get IPv6 network configuration for specific interface.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "interface_name",
                        "description": "Network interface to query, for example, \"nic0\"."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IPv6 configuration.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.interfaces.ipv6_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified NIC is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/noproxy": {
            "put": {
                "tags": [
                    "networking/no_proxy"
                ],
                "summary": "Sets servers for which no proxy configuration should be applied. This operation sets environment variables. In order for this operation to take effect, a logout from appliance or a service restart is required. If IPv4 is enabled, \"127.0.0.1\" and \"localhost\" will always bypass the proxy (even if they are not explicitly configured).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.no_proxy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/no_proxy"
                ],
                "summary": "Returns servers for which no proxy configuration will be applied.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of servers for which no proxy configuration will be applied.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.no_proxy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/networking/proxy": {
            "get": {
                "tags": [
                    "networking/proxy"
                ],
                "summary": "Gets proxy configuration for all configured protocols.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Proxy configuration for all configured protocols.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/networking/proxy/{protocol}": {
            "put": {
                "tags": [
                    "networking/proxy"
                ],
                "summary": "Configures which proxy server to use for the specified protocol. This operation sets environment variables for using proxy. In order for this configuration to take effect a logout / service restart is required.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "protocol",
                        "description": "The protocol for which proxy should be set."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "networking/proxy"
                ],
                "summary": "Gets the proxy configuration for a specific protocol.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "protocol",
                        "description": "The protocol whose proxy configuration is requested."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proxy configuration for a specific protocol.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "delete": {
                "tags": [
                    "networking/proxy"
                ],
                "summary": "Deletes a proxy configuration for a specific protocol.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "protocol",
                        "description": "ID whose proxy is to be deleted."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "delete"
            }
        },
        "/rest/appliance/networking/proxy/{protocol}?action=test": {
            "post": {
                "tags": [
                    "networking/proxy"
                ],
                "summary": "Tests a proxy configuration by testing the connection to the proxy server and test host.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "protocol",
                        "description": "Protocol whose proxy is to be tested."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status of proxy settings.",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.proxy.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "test"
            }
        },
        "/rest/appliance/networking?action=change&vmw-task=true": {
            "post": {
                "tags": [
                    "networking"
                ],
                "summary": "Changes the Hostname/IP of the management network of vCenter appliance. The Hostname/IP change invokes the PNID change process which involves LDAP entry modification, updating registry entries, configuration files modification and network configuration changes. vCenter server is expected to be down for few minutes during these changes",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.networking_change_task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/appliance.networking.change_task_resp"
                        }
                    },
                    "400": {
                        "description": "if another change task is in progress",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "if the user is not authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    }
                },
                "operationId": "change$task"
            }
        },
        "/rest/appliance/networking?action=reset": {
            "post": {
                "tags": [
                    "networking"
                ],
                "summary": "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "reset"
            }
        },
        "/rest/appliance/ntp": {
            "put": {
                "tags": [
                    "ntp"
                ],
                "summary": "Set NTP servers. This method updates old NTP servers from configuration and sets the input NTP servers in the configuration. If NTP based time synchronization is used internally, the NTP daemon will be restarted to reload given NTP configuration. In case NTP based time synchronization is not used, this method only replaces servers in the NTP configuration.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "ntp"
                ],
                "summary": "Get the NTP configuration status. If you run the 'timesync.get' command, you can retrieve the current time synchronization method (NTP- or VMware Tools-based). The 'ntp' command always returns the NTP server information, even when the time synchronization mode is not set to NTP. If the time synchronization mode is not NTP-based, the NTP server status is displayed as down.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of NTP servers.",
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/ntp/test": {
            "post": {
                "tags": [
                    "ntp"
                ],
                "summary": "Test the connection to a list of ntp servers.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp_test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of test run statuses.",
                        "schema": {
                            "$ref": "#/definitions/appliance.ntp.test_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "test"
            }
        },
        "/rest/appliance/recovery": {
            "get": {
                "tags": [
                    "recovery"
                ],
                "summary": "Gets the properties of the appliance Recovery subsystem.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Structure containing the properties of the Recovery subsystem.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/recovery/backup/job": {
            "post": {
                "tags": [
                    "recovery/backup/job"
                ],
                "summary": "Initiate backup.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "create"
            },
            "get": {
                "tags": [
                    "recovery/backup/job"
                ],
                "summary": "Get list of backup jobs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of BackupJob IDs",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/job/details": {
            "get": {
                "tags": [
                    "recovery/backup/job/details"
                ],
                "summary": "Returns detailed information about the current and historical backup jobs.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter.jobs",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        },
                        "description": "Identifiers of backup jobs that can match the filter."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Map of backup job identifier to Info Structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.details.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/job/{id}": {
            "get": {
                "tags": [
                    "recovery/backup/job"
                ],
                "summary": "See backup job progress/result.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "description": "ID (ID of job)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job_resp"
                        }
                    },
                    "404": {
                        "description": "if backup associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/recovery/backup/job/{id}/cancel": {
            "post": {
                "tags": [
                    "recovery/backup/job"
                ],
                "summary": "Cancel the backup job.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "description": "ID (ID of job)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.job.cancel_resp"
                        }
                    },
                    "404": {
                        "description": "if backup associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "cancel"
            }
        },
        "/rest/appliance/recovery/backup/parts": {
            "get": {
                "tags": [
                    "recovery/backup/parts"
                ],
                "summary": "Gets a list of the backup parts.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about each of the backup parts.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.parts.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/parts/{id}": {
            "get": {
                "tags": [
                    "recovery/backup/parts"
                ],
                "summary": "Gets the size (in MB) of the part.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "description": "Identifier of the part."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "long Size of the part in megabytes.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.parts_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/recovery/backup/schedules": {
            "get": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Returns a list of existing schedules with details",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of schedule id to Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/schedules/update/{schedule}": {
            "put": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Updates a schedule",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "schedule",
                        "description": "Identifier of the schedule"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "update"
            }
        },
        "/rest/appliance/recovery/backup/schedules/{schedule}": {
            "get": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Returns an existing schedule information based on id",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "schedule",
                        "description": "Identifier of the schedule"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_resp"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "post": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Creates a schedule",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "schedule",
                        "description": "Identifier of the schedule"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "create"
            },
            "delete": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Deletes an existing schedule",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "schedule",
                        "description": "Identifier of the schedule"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "delete"
            }
        },
        "/rest/appliance/recovery/backup/schedules/{schedule}?action=run": {
            "post": {
                "tags": [
                    "recovery/backup/schedules"
                ],
                "summary": "Initiate backup with the specified schedule",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "schedule",
                        "description": "Identifier of the schedule"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules_run"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BackupJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.schedules.run_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "if schedule associated with id does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "run"
            }
        },
        "/rest/appliance/recovery/backup/system-name": {
            "get": {
                "tags": [
                    "recovery/backup/system_name"
                ],
                "summary": "Returns a list of system names for which backup archives exist under {@param.name locSpec}.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "loc_spec.location",
                        "type": "string",
                        "description": "Backup location URL.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "loc_spec.location_user",
                        "type": "string",
                        "description": "Username for the given location.",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "loc_spec.location_password",
                        "type": "string",
                        "description": "Password for the given location.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of system names",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.list_resp"
                        }
                    },
                    "404": {
                        "description": "if {@param.name locSpec} doesn't refer to an existing location on the backup server.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/system-name/{system_name}/archives": {
            "get": {
                "tags": [
                    "recovery/backup/system_name/archive"
                ],
                "summary": "Returns information about backup archives corresponding to given backup location and system name, which match the {@link FilterSpec}.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "system_name",
                        "description": "System name identifier."
                    },
                    {
                        "in": "query",
                        "name": "loc_spec.location",
                        "type": "string",
                        "description": "Backup location URL.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "loc_spec.location_user",
                        "type": "string",
                        "description": "Username for the given location.",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "loc_spec.location_password",
                        "type": "string",
                        "description": "Password for the given location.",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "filter_spec.start_timestamp",
                        "type": "string",
                        "description": "Backup must have been taken on or after this time to match the filter."
                    },
                    {
                        "in": "query",
                        "name": "filter_spec.end_timestamp",
                        "type": "string",
                        "description": "Backup must have been taken on or before this time to match the filter."
                    },
                    {
                        "in": "query",
                        "name": "filter_spec.comment_substring",
                        "type": "string",
                        "description": "Backup comment must contain this {@term string} to match the filter."
                    },
                    {
                        "in": "query",
                        "name": "filter_spec.max_results",
                        "type": "integer",
                        "description": "Limit result to a max count of most recent backups."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commonly used information about the backup archives.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.list_resp"
                        }
                    },
                    "404": {
                        "description": "if combination of {@param.name locSpec} and system name does not refer to an existing location on the backup server.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/recovery/backup/system-name/{system_name}/archives/{archive}": {
            "get": {
                "tags": [
                    "recovery/backup/system_name/archive"
                ],
                "summary": "Returns the information for backup corresponding to given backup location and system name.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "system_name",
                        "description": "System name identifier."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "archive",
                        "description": "Archive identifier."
                    },
                    {
                        "in": "query",
                        "name": "spec.location",
                        "type": "string",
                        "description": "Backup location URL.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "spec.location_user",
                        "type": "string",
                        "description": "Username for the given location.",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "spec.location_password",
                        "type": "string",
                        "description": "Password for the given location.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.system_name.archive_resp"
                        }
                    },
                    "404": {
                        "description": "if backup does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/recovery/backup/validate": {
            "post": {
                "tags": [
                    "recovery/backup"
                ],
                "summary": "Check for backup errors without starting backup.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReturnResult Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.backup.validate_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "validate"
            }
        },
        "/rest/appliance/recovery/reconciliation/job": {
            "get": {
                "tags": [
                    "recovery/reconciliation/job"
                ],
                "summary": "Get reconciliation job progress/result.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job_resp"
                        }
                    },
                    "404": {
                        "description": "if there is no running reconciliation job.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "post": {
                "tags": [
                    "recovery/reconciliation/job"
                ],
                "summary": "Initiate reconciliation.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.reconciliation.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "create"
            }
        },
        "/rest/appliance/recovery/restore/job": {
            "get": {
                "tags": [
                    "recovery/restore/job"
                ],
                "summary": "See restore job progress/result.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "post": {
                "tags": [
                    "recovery/restore/job"
                ],
                "summary": "Initiate restore.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job.create_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "create"
            }
        },
        "/rest/appliance/recovery/restore/job/cancel": {
            "post": {
                "tags": [
                    "recovery/restore/job"
                ],
                "summary": "Cancel the restore job",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "RestoreJobStatus Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.job.cancel_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "cancel"
            }
        },
        "/rest/appliance/recovery/restore/validate": {
            "post": {
                "tags": [
                    "recovery/restore"
                ],
                "summary": "Get metadata before restore",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata Structure",
                        "schema": {
                            "$ref": "#/definitions/appliance.recovery.restore.validate_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "validate"
            }
        },
        "/rest/appliance/services": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Lists details of vCenter services.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of service identifiers to service Info structures.",
                        "schema": {
                            "$ref": "#/definitions/appliance.services.list_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/services/{service}": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Returns the state of a service.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service whose state is being queried."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Info structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.services_resp"
                        }
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/services/{service}/restart": {
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "Restarts a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to restart"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the restart operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "restart"
            }
        },
        "/rest/appliance/services/{service}/start": {
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "Starts a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to start"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the start operation. Timeout occurs when the service takes longer than StartTimeout to start.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "operationId": "start"
            }
        },
        "/rest/appliance/services/{service}/stop": {
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "Stops a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to stop"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with {@param.name service} does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a stop operation is in progress, issuing another stop operation will lead to this error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "stop"
            }
        },
        "/rest/appliance/shutdown": {
            "get": {
                "tags": [
                    "shutdown"
                ],
                "summary": "Get details about the pending shutdown action.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Configuration of pending shutdown action.",
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/shutdown/cancel": {
            "post": {
                "tags": [
                    "shutdown"
                ],
                "summary": "Cancel pending shutdown action.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "cancel"
            }
        },
        "/rest/appliance/shutdown/poweroff": {
            "post": {
                "tags": [
                    "shutdown"
                ],
                "summary": "Power off the appliance.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_poweroff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "poweroff"
            }
        },
        "/rest/appliance/shutdown/reboot": {
            "post": {
                "tags": [
                    "shutdown"
                ],
                "summary": "Reboot the appliance.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.shutdown_reboot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "reboot"
            }
        },
        "/rest/appliance/system/storage": {
            "get": {
                "tags": [
                    "system/storage"
                ],
                "summary": "Get disk to partition mapping.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of mapping items",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.storage.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/system/storage/resize": {
            "post": {
                "tags": [
                    "system/storage"
                ],
                "summary": "Resize all partitions to 100 percent of disk size.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "resize"
            }
        },
        "/rest/appliance/system/storage?action=resize-ex": {
            "post": {
                "tags": [
                    "system/storage"
                ],
                "summary": "Resize all partitions to 100 percent of disk size.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of the partitions with the size before and after resizing",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.storage.resize_ex_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "resize_ex"
            }
        },
        "/rest/appliance/system/time": {
            "get": {
                "tags": [
                    "system/time"
                ],
                "summary": "Get system time.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System time",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/system/time/timezone": {
            "put": {
                "tags": [
                    "system/time/timezone"
                ],
                "summary": "Set time zone.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time.timezone_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "system/time/timezone"
                ],
                "summary": "Get time zone.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Time zone name.",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.time.timezone_resp"
                        }
                    },
                    "400": {
                        "description": "if timezone cannot be read.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/system/uptime": {
            "get": {
                "tags": [
                    "system/uptime"
                ],
                "summary": "Get the system uptime.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "system uptime",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.uptime_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/system/version": {
            "get": {
                "tags": [
                    "system/version"
                ],
                "summary": "Get the version.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "version information about the appliance",
                        "schema": {
                            "$ref": "#/definitions/appliance.system.version_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/timesync": {
            "put": {
                "tags": [
                    "timesync"
                ],
                "summary": "Set time synchronization mode.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.timesync_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "timesync"
                ],
                "summary": "Get time synchronization mode.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Time synchronization mode.",
                        "schema": {
                            "$ref": "#/definitions/appliance.timesync_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/update": {
            "get": {
                "tags": [
                    "update"
                ],
                "summary": "Gets the current status of the appliance update.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info structure containing the status information about the appliance.",
                        "schema": {
                            "$ref": "#/definitions/appliance.update_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/update/pending": {
            "get": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Checks if new updates are available.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "source_type",
                        "description": "The {@name SourceType} {@term enumerated type} defines the supported types of sources of updates.",
                        "type": "string",
                        "enum": [
                            "LAST_CHECK",
                            "LOCAL",
                            "LOCAL_AND_ONLINE"
                        ],
                        "required": true
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "url",
                        "description": "specific URL to check at"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the update summaries",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.list_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "404": {
                        "description": "source is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "list"
            }
        },
        "/rest/appliance/update/pending/{version}": {
            "get": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Gets update information",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_resp"
                        }
                    },
                    "400": {
                        "description": "if the update of this version is already installed",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.already_in_desired_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/update/pending/{version}?action=install": {
            "post": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Starts operation of installing the appliance update. Will fail is the update is not staged",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_install"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents running an update or not staged",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "install"
            }
        },
        "/rest/appliance/update/pending/{version}?action=precheck": {
            "post": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Runs update precheck",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PrecheckResult",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.precheck_resp"
                        }
                    },
                    "400": {
                        "description": "if another operation is in progress",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "precheck"
            }
        },
        "/rest/appliance/update/pending/{version}?action=stage": {
            "post": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Starts staging the appliance update. The updates are searched for in the following order: staged, CDROM, URL",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents staging",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "stage"
            }
        },
        "/rest/appliance/update/pending/{version}?action=stage-and-install": {
            "post": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Starts operation of installing the appliance update. Will stage update if not already staged The updates are searched for in the following order: staged, CDROM, URL",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_stage_and_install"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if appliance update state prevents running an update",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "stage_and_install"
            }
        },
        "/rest/appliance/update/pending/{version}?action=validate": {
            "post": {
                "tags": [
                    "update/pending"
                ],
                "summary": "Validates the user provided data before the update installation.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Update version"
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending_validate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Issues struct with the issues found during the validation",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.pending.validate_resp"
                        }
                    },
                    "400": {
                        "description": "if appliance update state prevents running an check",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "404": {
                        "description": "if the update is not found",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "validate"
            }
        },
        "/rest/appliance/update/policy": {
            "put": {
                "tags": [
                    "update/policy"
                ],
                "summary": "Sets the automatic update checking and staging policy.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.update.policy_set"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "set"
            },
            "get": {
                "tags": [
                    "update/policy"
                ],
                "summary": "Gets the automatic update checking and staging policy.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Structure containing the policy for the appliance update.",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.policy_resp"
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "get"
            }
        },
        "/rest/appliance/update/staged": {
            "get": {
                "tags": [
                    "update/staged"
                ],
                "summary": "Gets the current status of the staged update",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Info structure with information about staged update",
                        "schema": {
                            "$ref": "#/definitions/appliance.update.staged_resp"
                        }
                    },
                    "400": {
                        "description": "if nothing is staged",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "delete": {
                "tags": [
                    "update/staged"
                ],
                "summary": "Deletes the staged update",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Generic error",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "delete"
            }
        },
        "/rest/appliance/update?action=cancel": {
            "post": {
                "tags": [
                    "update"
                ],
                "summary": "Request the cancellation the update operation that is currently in progress.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Current task is not cancellable",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "401": {
                        "description": "session is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "session is not authorized to perform this operation",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "cancel"
            }
        },
        "/rest/appliance/vmon/service": {
            "get": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Lists details of services managed by vMon.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Map of service identifiers to service Info structures.\nThe key in the result map will be an identifier for the resource type: appliance.vmon.Service.",
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service.list_details_resp"
                        }
                    },
                    "400": {
                        "description": "if any error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list_details"
            }
        },
        "/rest/appliance/vmon/service/{service}": {
            "get": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Returns the state of a service.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service whose state is being queried.\nThe parameter must be an identifier for the resource type: appliance.vmon.Service."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Info structure.",
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service_resp"
                        }
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get"
            },
            "patch": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Updates the properties of a service.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service whose properties are being updated.\nThe parameter must be an identifier for the resource type: appliance.vmon.Service."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appliance.vmon.service_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a start, stop or restart operation is in progress, update operation will fail with this error.\nif a request to set the Service.UpdateSpec.startup-type field of spec to DISABLED comes in for a service that is not in STOPPED state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "update"
            }
        },
        "/rest/appliance/vmon/service/{service}/restart": {
            "post": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Restarts a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to restart\nThe parameter must be an identifier for the resource type: appliance.vmon.Service."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the restart operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "restart"
            }
        },
        "/rest/appliance/vmon/service/{service}/start": {
            "post": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Starts a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to start\nThe parameter must be an identifier for the resource type: appliance.vmon.Service."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if any other error occurs during the execution of the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    },
                    "504": {
                        "description": "if any timeout occurs during the execution of the start operation. Timeout occurs when the service takes longer than StartTimeout to start.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.timed_out_error"
                        }
                    }
                },
                "operationId": "start"
            }
        },
        "/rest/appliance/vmon/service/{service}/stop": {
            "post": {
                "tags": [
                    "vmon/service"
                ],
                "summary": "Stops a service",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "service",
                        "description": "identifier of the service to stop\nThe parameter must be an identifier for the resource type: appliance.vmon.Service."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the service associated with service does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the operation is denied in the current state of the service. If a stop operation is in progress, issuing another stop operation will lead to this error.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "stop"
            }
        }
    },
    "definitions": {
        "ApplianceInfraprofileConfigsExport": {
            "$ref": "#/definitions/ApplianceInfraprofileConfigsProfilesSpec",
            "description": "information to export the profile."
        },
        "ApplianceInfraprofileConfigsImportProfileSpec": {
            "type": "object",
            "properties": {
                "config_spec": {
                    "description": "The JSON string representing the desired config specification.",
                    "type": "string"
                },
                "profile_spec": {
                    "description": "The profile specification, if any\nonly set if there is a profilespec avaliable for this import profilespec.",
                    "$ref": "#/definitions/ApplianceInfraprofileConfigsProfilesSpec"
                }
            },
            "required": [
                "config_spec"
            ]
        },
        "ApplianceInfraprofileConfigsImportProfileTask": {
            "$ref": "#/definitions/ApplianceInfraprofileConfigsImportProfileSpec",
            "description": "information to import the profile."
        },
        "ApplianceInfraprofileConfigsProfileInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the profile which is also a profile identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: infraprofile.profile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: infraprofile.profile.",
                    "type": "string"
                },
                "info": {
                    "description": "Description of the profile.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "info"
            ]
        },
        "ApplianceInfraprofileConfigsProfilesSpec": {
            "type": "object",
            "properties": {
                "encryption_key": {
                    "description": "Encryption Key to encrypt/decrypt profiles.\nIf unset encryption will not be used for the profile.",
                    "type": "string",
                    "format": "password"
                },
                "description": {
                    "description": "Custom description provided by the user.\nIf unset description will be empty.",
                    "type": "string"
                },
                "profiles": {
                    "description": "Profiles to be exported/imported.\nIf unset or empty, all profiles will be returned.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: infraprofile.profile. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: infraprofile.profile.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApplianceInfraprofileConfigsValidateTask": {
            "$ref": "#/definitions/ApplianceInfraprofileConfigsImportProfileSpec",
            "description": "information to validate the profile."
        },
        "ApplianceSystemSecurityGlobalFipsInfo": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "FIPS setting state.",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "ApplianceSystemSecurityGlobalFipsUpdate": {
            "$ref": "#/definitions/ApplianceSystemSecurityGlobalFipsUpdateSpec",
            "description": ""
        },
        "ApplianceSystemSecurityGlobalFipsUpdateSpec": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "FIPS setting state.",
                    "type": "boolean"
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtApplianceManagement": {
            "type": "object",
            "properties": {
                "software_update_policy": {
                    "description": "Policy to update vCenter.\nOnly set if the SoftwareUpdatePolicy is set inside vCenter.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSoftwareUpdatePolicy"
                },
                "backup_schedules": {
                    "description": "Backup schedule of vCenter.\nOnly set if the Backup is schedule for vCenter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtBackupSchedule"
                    }
                },
                "ssh": {
                    "description": "Get/Set enabled state of SSH-based controlled CLI. Ssh service provides operations",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSsh"
                },
                "dcui": {
                    "description": "Get/Set enabled of Direct Console User Interface (DCUI TTY2). Dcui service provides operations",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDcui"
                },
                "console_cli": {
                    "description": "Get/Set enabled state of the console-based controlled CLI. Consolecli service provides operations",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtConsolecli"
                },
                "shell": {
                    "description": "Get/Set enabled state of BASH. Shell service provides operations",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtShell"
                },
                "time_zone": {
                    "description": "The Timezone service provides operations to get and set the appliance timezone.\nOnly set if the Timezone is set in vCenter",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimezone"
                },
                "time_sync": {
                    "description": "Timesync service provides operations Performs time synchronization configuration.\nOnly set if the time sync mode is set in vCenter",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimesync"
                },
                "ntp": {
                    "description": "Ntp service provides operations Gets NTP configuration status and tests connection to ntp servers.\nOnly set if the ntp server are set in vCenter.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtNtp"
                },
                "syslog": {
                    "description": "The syslog service provides operations to manage forwarding of log messages to remote logging servers.\nOnly set if log forwarding to remote server are set in vCenter.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLogForwarding"
                    }
                },
                "local_accounts_policy": {
                    "description": "The localAccountsPolicy service provides operations to manage local user accounts.\nOnly set if Password Policy is set to manage local user accounts.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLocalAccountsPolicy"
                },
                "root_local_account": {
                    "description": "The LocalAccounts service provides operations to manage local user account.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLocalAccounts"
                },
                "smtp": {
                    "description": "The LocalAccounts service provides operations to manage local user account.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSmtp"
                },
                "network": {
                    "description": "Network configurations to be applied.\nOnly set if the network configurations are set in vCenter.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtApplianceNetwork"
                }
            },
            "required": [
                "ssh",
                "dcui",
                "console_cli",
                "shell"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtApplianceNetwork": {
            "type": "object",
            "properties": {
                "firewall_rule_policies": {
                    "description": "List of Firewall Rules to be applied.\nOnly set if the FirewallRulePolicy is set in vCenter.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtFirewallRulePolicy"
                    }
                },
                "dns_server_configuration": {
                    "description": "DNS configuration to be applied.\nOnly set if the DnsServerConfiguration is set in vCenter.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDnsServerConfiguration"
                },
                "proxy_configuration": {
                    "description": "Proxy configuration to be applied.\nOnly set if the Proxy server configuration is set in vCenter.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtProxyConfiguration"
                    }
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtBackupSchedule": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "List of optional parts to be backed up. Use the appliance.recovery.backup.Parts#list operation to get information about the supported parts.\nIf unset all the optional parts will not be backed up.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).\nIf unset the backup piece will not be encrypted.",
                    "type": "string",
                    "format": "password"
                },
                "location": {
                    "description": "URL of the backup location.\nOnly set if URL is set in BackupSchedule",
                    "type": "string",
                    "format": "uri"
                },
                "location_user": {
                    "description": "Username for the given location.\nIf unset authentication will not be used for the specified location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.\nIf unset authentication will not be used for the specified location.",
                    "type": "string",
                    "format": "password"
                },
                "enable": {
                    "description": "Enable or disable a schedule.\nIf unset the schedule will be enabled.",
                    "type": "boolean"
                },
                "recurrence_info": {
                    "description": "Recurrence information for the schedule.\nIf unset backup job will not be scheduled. See RecurrenceInfo",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRecurrenceInfo"
                },
                "retention_info": {
                    "description": "Retention information for the schedule.\nIf unset all the completed backup jobs will be retained forever. See RetentionInfo",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRetentionInfo"
                },
                "schedule_id": {
                    "description": "Identifier of the schedule.",
                    "type": "string"
                }
            },
            "required": [
                "location",
                "schedule_id"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtConsolecli": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Set enabled state of the console-based controlled CLI (TTY1).",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDcui": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Set enabled state of Direct Console User Interface (DCUI).",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDnsServerConfiguration": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Define how to determine the DNS servers. Leave the servers argument empty if the mode argument is \"DHCP\". Set the servers argument to a comma-separated list of DNS servers if the mode argument is \"static\". The DNS server are assigned from the specified list.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDnsServerConfigurationDNSServerMode"
                },
                "servers": {
                    "description": "List of the currently used DNS servers. DNS server configuration.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "mode",
                "servers"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtDnsServerConfigurationDNSServerMode": {
            "type": "string",
            "description": "DnsServerConfiguration.DNSServerMode enumerated type Describes DNS Server source (DHCP,static).",
            "enum": [
                "DHCP",
                "STATIC"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtFirewallRulePolicy": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "IPv4 or IPv6 address.",
                    "type": "string"
                },
                "prefix": {
                    "description": "CIDR prefix used to mask address. For example, an IPv4 prefix of 24 ignores the low-order 8 bits of address.",
                    "type": "integer",
                    "format": "int64"
                },
                "policy": {
                    "description": "The allow or deny policy of this rule.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtFirewallRulePolicyPolicy"
                },
                "interface_name": {
                    "description": "The interface to which this rule applies. An empty string indicates that the rule applies to all interfaces.\nOnly set if interface name required",
                    "type": "string"
                }
            },
            "required": [
                "address",
                "prefix",
                "policy"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtFirewallRulePolicyPolicy": {
            "type": "string",
            "description": "FirewallRulePolicy.Policy enumerated type Defines firewall rule policies.",
            "enum": [
                "IGNORE",
                "ACCEPT",
                "REJECT",
                "RETURN"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLocalAccounts": {
            "type": "object",
            "properties": {
                "fullname": {
                    "description": "Full name of the user\nIf unset, the value was never set.",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "has_password": {
                    "description": "Is the user password set.",
                    "type": "boolean"
                },
                "last_password_change": {
                    "description": "Date and time password was changed.\nIf unset, the password was never set.",
                    "type": "string",
                    "format": "date-time"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire\nIf unset, the password never expires.",
                    "type": "string",
                    "format": "date-time"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change\nIf unset, pasword can be changed any time.",
                    "type": "integer",
                    "format": "int64"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change\nIf unset, password never expires.",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires\nIf unset, a user is never warned.",
                    "type": "integer",
                    "format": "int64"
                },
                "password": {
                    "description": "Password\nIf unset, value will not be changed",
                    "type": "string",
                    "format": "password"
                },
                "email": {
                    "description": "Email address of the local account\nIf unset, value will not be changed",
                    "type": "string"
                }
            },
            "required": [
                "enabled",
                "has_password"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLocalAccountsPolicy": {
            "type": "object",
            "properties": {
                "max_days": {
                    "description": "Maximum number of days a password may be used. If the password is older than this, a password change will be forced.\nIf unset then the restriction will be ignored.",
                    "type": "integer",
                    "format": "int64"
                },
                "min_days": {
                    "description": "Minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected.\nIf unset then the restriction will be ignored.",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days": {
                    "description": "Number of days warning given before a password expires. A zero means warning is given only upon the day of expiration.\nIf unset then no warning will be provided.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLogForwarding": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "FQDN or IP address of the logging server to which messages are forwarded.",
                    "type": "string"
                },
                "port": {
                    "description": "The port on which the remote logging server is listening for forwarded log messages.",
                    "type": "integer",
                    "format": "int64"
                },
                "protocol": {
                    "description": "Transport protocol used to forward log messages.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLogForwardingProtocol"
                }
            },
            "required": [
                "hostname",
                "port",
                "protocol"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtLogForwardingProtocol": {
            "type": "string",
            "description": "The LogForwarding.Protocol enumerated type defines transport protocols for outbound log messages.",
            "enum": [
                "TLS",
                "UDP",
                "TCP"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtNtp": {
            "type": "object",
            "properties": {
                "servers": {
                    "description": "Set NTP servers. This variable updates old NTP servers from configuration and sets the input NTP servers in the configuration.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "servers"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtProxyConfiguration": {
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "The protocol for which proxy should be set.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtProxyConfigurationProtocol"
                },
                "server": {
                    "description": "URL of the proxy server\nOnly set if server set in ProxyConfiguration.",
                    "type": "string"
                },
                "port": {
                    "description": "Port to connect to the proxy server. In a 'get' call, indicates the port connected to the proxy server. In a 'set' call, specifies the port to connect to the proxy server. A value of -1 indicates the default port.\nOnly set if port set in ProxyConfiguration.",
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "description": "Username for proxy server.\nOnly set if proxy requires username.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for proxy server.\nOnly set if proxy requires password.",
                    "type": "string",
                    "format": "password"
                },
                "enabled": {
                    "description": "In the result of the #get and #list operations this field indicates whether proxying is enabled for a particular protocol. In the input to the test and set operations this field specifies whether proxying should be enabled for a particular protocol.",
                    "type": "boolean"
                }
            },
            "required": [
                "protocol",
                "server",
                "port",
                "enabled"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtProxyConfigurationProtocol": {
            "type": "string",
            "description": "ProxyConfiguration.Protocol enumerated type defines the protocols for which proxying is supported.",
            "enum": [
                "HTTP",
                "HTTPS",
                "FTP"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRecurrenceInfo": {
            "type": "object",
            "properties": {
                "minute": {
                    "description": "Minute when backup should run.\nOnly set if minute is present in Recurrence Info of backup schedule.",
                    "type": "integer",
                    "format": "int64"
                },
                "hour": {
                    "description": "Hour when backup should run. The hour should be specified in 24-hour clock format.\nOnly set if hour is present in Recurrence Info of backup schedule.",
                    "type": "integer",
                    "format": "int64"
                },
                "days": {
                    "description": "Day of week when the backup should be run. Days can be specified as list of days.\nIf unset the backup will be run everyday.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRecurrenceInfoDayOfWeek"
                    }
                }
            },
            "required": [
                "minute",
                "hour"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRecurrenceInfoDayOfWeek": {
            "type": "string",
            "description": "The RecurrenceInfo.DayOfWeek enumerated type defines the set of days when backup can be scheduled. The days can be specified as a list of individual days. You specify the days when you set the recurrence for a schedule. See RecurrenceInfo.days.",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtRetentionInfo": {
            "type": "object",
            "properties": {
                "max_count": {
                    "description": "Number of backups which should be retained. If retention is not set, all the backups will be retained forever.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "max_count"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtShell": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Enabled can be set to true or false",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "The timeout (in seconds) specifies how long you enable the Shell access. The maximum timeout is 86400 seconds(1 day).",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "enabled",
                "timeout"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSmtp": {
            "type": "object",
            "properties": {
                "mail_server": {
                    "description": "Mail server IP address.\nIf unset then the value will be ignored.",
                    "type": "string"
                },
                "relay_port": {
                    "description": "Relay port number.\nIf unset then the value will be ignored.",
                    "type": "string"
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSoftwareUpdatePolicy": {
            "type": "object",
            "properties": {
                "custom_URL": {
                    "description": "Current appliance update repository URL. Enter \"default\" to reset the url to the default url.\nOnly set if custom URL required",
                    "type": "string"
                },
                "default_URL": {
                    "description": "Default appliance update repository URL.\nOnly set if default URL required",
                    "type": "string"
                },
                "auto_stage": {
                    "description": "Check for update at the pre-configured repository URL.\nOnly set if auto stage is enable.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSoftwareUpdatePolicyAutoUpdateNotification"
                },
                "check_schedule": {
                    "description": "The Time structure defines day and time the automatic check for new updates will be run.\nOnly set if Time required.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTime"
                },
                "username": {
                    "description": "Username for the url update repository\nOnly set if SoftwareUpdatePolicy requires username.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the url update repository\nOnly set if SoftwareUpdatePolicy requires password.",
                    "type": "string",
                    "format": "password"
                },
                "certificate_check": {
                    "description": "Indicates whether certificates will be checked during patching. \n Warning: If this field is set to false, an insecure connection is made to the update repository which can potentially put the appliance security at risk.\n",
                    "type": "boolean"
                }
            },
            "required": [
                "auto_stage",
                "certificate_check"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSoftwareUpdatePolicyAutoUpdateNotification": {
            "type": "string",
            "description": "Defines state for automatic update notification. SoftwareUpdatePolicy.AutoUpdateNotification enumerated type",
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtSsh": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Set enabled state of the SSH-based controlled CLI.",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTime": {
            "type": "object",
            "properties": {
                "hour": {
                    "description": "Time to query for updates Format: HH:MM:SS Military (24 hour) Time Format\nOnly set if hour is present in SoftwareUpdatePolicy",
                    "type": "string"
                },
                "minute": {
                    "description": "Time to query for updates Format: HH:MM:SS Military (24 hour) Time Format\nOnly set if minute is present in SoftwareUpdatePolicy",
                    "type": "string"
                },
                "day": {
                    "description": "Day to query for updates\nOnly set if minute is present in SoftwareUpdatePolicy",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimeUpdateDay"
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimeUpdateDay": {
            "type": "string",
            "description": "Time.UpdateDay enumerated type Defines days to query for updates.",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "FRIDAY",
                "WEDNESDAY",
                "THURSDAY",
                "SATURDAY",
                "SUNDAY",
                "EVERYDAY"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimesync": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimesyncTimeSyncMode"
                }
            },
            "required": [
                "mode"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimesyncTimeSyncMode": {
            "type": "string",
            "description": "The Timesync.TimeSyncMode enumerated type defines time synchronization modes",
            "enum": [
                "DISABLED",
                "NTP",
                "HOST"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsApplmgmtTimezone": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Set time zone.",
                    "type": "string"
                }
            }
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementAuthenticationManagement": {
            "type": "object",
            "properties": {
                "privileges_list": {
                    "description": "List of Privileges.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPrivileges"
                    }
                },
                "global_permission_list": {
                    "description": "List of Global Permission.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementGlobalPermission"
                    }
                },
                "role_list": {
                    "description": "List of Roles.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementRoles"
                    }
                },
                "password_policy": {
                    "description": "Password Policy.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPasswordPolicy"
                },
                "token_policy": {
                    "description": "Token Policy.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementTokenPolicy"
                },
                "lockout_policy": {
                    "description": "Lockout Policy.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementLockoutPolicy"
                }
            },
            "required": [
                "privileges_list",
                "global_permission_list",
                "role_list"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementGlobalPermission": {
            "type": "object",
            "properties": {
                "principal": {
                    "description": "Role identifier.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPrincipal"
                },
                "role_ids": {
                    "description": "Role Ids assigned to this Principal",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "propagate": {
                    "description": "Propagating to child objects.",
                    "type": "boolean"
                }
            },
            "required": [
                "principal",
                "role_ids",
                "propagate"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementLockoutPolicy": {
            "type": "object",
            "properties": {
                "failed_login_attempts": {
                    "description": "Maximum number of failed login attempts.",
                    "type": "integer",
                    "format": "int64"
                },
                "failure_interval": {
                    "description": "Time interval between failures.",
                    "type": "integer",
                    "format": "int64"
                },
                "unlock_time": {
                    "description": "Unlock time.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "failed_login_attempts",
                "failure_interval",
                "unlock_time"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPasswordPolicy": {
            "type": "object",
            "properties": {
                "special_chars": {
                    "description": "Minimum special characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "alpha_chars": {
                    "description": "Minimum alphabetic characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "uppercase_chars": {
                    "description": "Minimum uppercase characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "lowercase_chars": {
                    "description": "Minimum lowercase characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "numeric_chars": {
                    "description": "Minimum numeric characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "adj_identical_chars": {
                    "description": "Maximum adjacent identical characters.",
                    "type": "integer",
                    "format": "int64"
                },
                "password_reuse": {
                    "description": "Previous password reuse restriction.",
                    "type": "integer",
                    "format": "int64"
                },
                "max_life": {
                    "description": "Maximum lifetime.",
                    "type": "integer",
                    "format": "int64"
                },
                "max_length": {
                    "description": "Maximum length.",
                    "type": "integer",
                    "format": "int64"
                },
                "min_length": {
                    "description": "Minimum length.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "special_chars",
                "alpha_chars",
                "uppercase_chars",
                "lowercase_chars",
                "numeric_chars",
                "adj_identical_chars",
                "password_reuse",
                "max_life",
                "max_length",
                "min_length"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPrincipal": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Principal name.",
                    "type": "string"
                },
                "group": {
                    "description": "Is a Group",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "group"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementPrivileges": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Privilege identifier.",
                    "type": "string"
                },
                "description": {
                    "description": "Privilege description.",
                    "type": "string"
                },
                "group": {
                    "description": "Group to which the privilege belongs to.",
                    "type": "string"
                },
                "is_on_parent": {
                    "description": "Is on parent.",
                    "type": "boolean"
                }
            },
            "required": [
                "id",
                "description",
                "group",
                "is_on_parent"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementRoles": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Role identifier.",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "Role name.",
                    "type": "string"
                },
                "description": {
                    "description": "Role description.",
                    "type": "string"
                },
                "privilege_id": {
                    "description": "List of Privileges present in the Role.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "privilege_id"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementTokenPolicy": {
            "type": "object",
            "properties": {
                "clock_tolerance": {
                    "description": "Clock tolerance ms.",
                    "type": "integer",
                    "format": "int64"
                },
                "token_renewal": {
                    "description": "Maximum token renewal count.",
                    "type": "integer",
                    "format": "int64"
                },
                "token_delegation": {
                    "description": "Maximum token delegation count.",
                    "type": "integer",
                    "format": "int64"
                },
                "bearer_refresh": {
                    "description": "Maximum Bearer RefreshToken lifetime.",
                    "type": "integer",
                    "format": "int64"
                },
                "hok_refresh": {
                    "description": "Maximum HoK RefreshToken lifetime.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "clock_tolerance",
                "token_renewal",
                "token_delegation",
                "bearer_refresh",
                "hok_refresh"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigCreate": {
            "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigCreateSpec",
            "description": "Specification of the profile to be created."
        },
        "ApplianceVcenterSettingsV1ConfigCreateSpec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nIf unset, the description will be empty.",
                    "type": "string"
                },
                "desired_state": {
                    "description": "Defines the desired state. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1DesiredState"
                }
            },
            "required": [
                "name",
                "desired_state"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigInfo": {
            "type": "object",
            "properties": {
                "profile": {
                    "description": "The identifier of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: appliance.vcenter.settings.v1.config.profile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: appliance.vcenter.settings.v1.config.profile.",
                    "type": "string"
                },
                "version": {
                    "description": "Version of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: appliance.vcenter.settings.v1.config.version. When operations return a value of this structure as a result, the field will be an identifier for the resource type: appliance.vcenter.settings.v1.config.version.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "type": "string"
                },
                "creation_time": {
                    "description": "Creation time of the profile. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "type": "string",
                    "format": "date-time"
                },
                "owner": {
                    "description": "Owner of the profile, the one who created. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "type": "string"
                },
                "description": {
                    "description": "Custom description provided by the user. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nIf unset description will be empty.",
                    "type": "string"
                },
                "desired_state": {
                    "description": "The desired state. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1DesiredState"
                }
            },
            "required": [
                "profile",
                "version",
                "name",
                "creation_time",
                "owner",
                "desired_state"
            ]
        },
        "ApplianceVcenterSettingsV1ConfigScanDesiredStateTask": {
            "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigScanSpec",
            "description": ""
        },
        "ApplianceVcenterSettingsV1ConfigScanSpec": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message for the scan. This may act as an identification for the scan operation. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.\nIf unset, the message will be empty.",
                    "type": "string"
                },
                "desired_state": {
                    "description": "Defines the desired state. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1DesiredState"
                }
            },
            "required": [
                "desired_state"
            ]
        },
        "ApplianceVcenterSettingsV1DesiredState": {
            "type": "object",
            "properties": {
                "appliance": {
                    "description": "Appliance Management component desired spec. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsApplmgmtApplianceManagement"
                },
                "authmgmt": {
                    "description": "Authentication Management component desired spec. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                    "$ref": "#/definitions/ApplianceVcenterSettingsV1ConfigComponentsAuthmanagementAuthenticationManagement"
                }
            }
        },
        "VapiStdErrorsAlreadyExists": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsError": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsErrorType": {
            "type": "string",
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ]
        },
        "VapiStdErrorsInvalidArgument": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsNotAllowedInCurrentState": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsNotFound": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsServiceUnavailable": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsUnauthenticated": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "Indicates the authentication challenges applicable to the target API provider. It can be used by a client to discover the correct authentication scheme to use. The exact syntax of the value is defined by the specific provider, the protocol and authentication schemes used. <p> For example, a provider using REST may adhere to the WWW-Authenticate HTTP header specification, RFC7235, section 4.1. In this case an example challenge value may be: SIGN realm=\"27da1358-2ba4-11e9-b210-d663bd873d93\",sts=\"http://vcenter/sso?vsphere.local\", Basic realm=\"vCenter\"",
                    "type": "string"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdLocalizableMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "params": {
                    "description": "Named arguments to be substituted into the message template.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VapiStdLocalizationParam"
                    }
                },
                "localized": {
                    "description": "Localized string value as per request requirements.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "VapiStdLocalizationParam": {
            "type": "object",
            "properties": {
                "s": {
                    "description": "{@term String} value associated with the parameter.",
                    "type": "string"
                },
                "dt": {
                    "description": "Date and time value associated with the parameter. Use the {@name #format} {@term field} to specify date and time display style.",
                    "type": "string",
                    "format": "date-time"
                },
                "i": {
                    "description": "{@term long} value associated with the parameter.",
                    "type": "integer",
                    "format": "int64"
                },
                "d": {
                    "description": "The {@term double} value associated with the parameter. The number of displayed fractional digits is changed via {@name #precision} {@term field}.",
                    "type": "number",
                    "format": "double"
                },
                "l": {
                    "description": "Nested localizable value associated with the parameter. This is useful construct to convert to human readable localized form {@term enumerated type} and {@term boolean} values. It can also be used for proper handling of pluralization and gender forms in localization. Recursive {@name NestedLocalizableMessage} instances can be used for localizing short lists of items.",
                    "$ref": "#/definitions/VapiStdNestedLocalizableMessage"
                },
                "format": {
                    "description": "Format associated with the date and time value in {@name #dt} {@term field}. The {@term enumeration value} {@code SHORT_DATETIME} will be used as default.",
                    "$ref": "#/definitions/VapiStdLocalizationParamDateTimeFormat"
                },
                "precision": {
                    "description": "Number of fractional digits to include in formatted {@term double} value.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VapiStdLocalizationParamDateTimeFormat": {
            "type": "string",
            "description": "The {@name DateTimeFormat} {@term enumerated type} lists possible date and time formatting options. It combines the Unicode CLDR format types - full, long, medium and short with 3 different presentations - date only, time only and combined date and time presentation.",
            "enum": [
                "SHORT_DATE",
                "MED_DATE",
                "LONG_DATE",
                "FULL_DATE",
                "SHORT_TIME",
                "MED_TIME",
                "LONG_TIME",
                "FULL_TIME",
                "SHORT_DATE_TIME",
                "MED_DATE_TIME",
                "LONG_DATE_TIME",
                "FULL_DATE_TIME"
            ]
        },
        "VapiStdNestedLocalizableMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "params": {
                    "description": "Named Arguments to be substituted into the message template.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VapiStdLocalizationParam"
                    }
                }
            },
            "required": [
                "id"
            ]
        },
        "appliance.access.consolecli_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.access.consolecli_set": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Console-based controlled CLI is enabled."
                }
            },
            "required": [
                "enabled"
            ]
        },
        "appliance.access.dcui_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.access.dcui_set": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "DCUI is enabled."
                }
            },
            "required": [
                "enabled"
            ]
        },
        "appliance.access.shell.shell_config": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Enabled can be set to true or false",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "The timeout (in seconds) specifies how long you enable the Shell access. The maximum timeout is 86400 seconds(1 day).",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "enabled",
                "timeout"
            ]
        },
        "appliance.access.shell_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.access.shell.shell_config"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.access.shell_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.access.shell.shell_config",
                    "description": "Shell configuration"
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.access.ssh_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.access.ssh_set": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "SSH-based controlled CLI is enabled."
                }
            },
            "required": [
                "enabled"
            ]
        },
        "appliance.health.applmgmt_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.databasestorage.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines service health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.databasestorage_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.databasestorage.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.load.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.load_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.load.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.mem.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.mem_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.mem.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.messages_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.softwarepackages.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.softwarepackages_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.softwarepackages.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.storage.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.storage_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.storage.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.swap.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.swap_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.swap.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.system.health_level": {
            "type": "string",
            "description": "{@name HealthLevel} {@term enumerated type} Defines health levels.",
            "enum": [
                "orange",
                "gray",
                "green",
                "red",
                "yellow"
            ]
        },
        "appliance.health.system.lastcheck_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.health.system_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.health.system.health_level"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.local_accounts.config": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Password",
                    "type": "string",
                    "format": "password"
                },
                "old_password": {
                    "description": "Old password of the user (required in case of the password change, not required if superAdmin user changes the password of the other user)",
                    "type": "string",
                    "format": "password"
                },
                "full_name": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Flag indicating if the account password expires",
                    "type": "boolean"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "type": "string",
                    "format": "date-time"
                },
                "inactive_after_password_expiration": {
                    "description": "Flag indicating if the account will be locked after password expiration",
                    "type": "boolean"
                },
                "days_after_password_expiration": {
                    "description": "Number of days after password expiration before the account will be locked",
                    "type": "integer",
                    "format": "int64"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "password",
                "roles"
            ]
        },
        "appliance.local_accounts.info": {
            "type": "object",
            "properties": {
                "fullname": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "has_password": {
                    "description": "Is the user password set.",
                    "type": "boolean"
                },
                "last_password_change": {
                    "description": "Date and time password was changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "type": "string",
                    "format": "date-time"
                },
                "inactive_at": {
                    "description": "Date and time account will be locked after password expiration.",
                    "type": "string",
                    "format": "date-time"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "roles",
                "enabled",
                "has_password"
            ]
        },
        "appliance.local_accounts.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.local_accounts.policy.info": {
            "type": "object",
            "properties": {
                "max_days": {
                    "description": "Maximum number of days a password may be used. If the password is older than this, a password change will be forced.",
                    "type": "integer",
                    "format": "int64"
                },
                "min_days": {
                    "description": "Minimum number of days allowed between password changes. Any password changes attempted sooner than this will be rejected.",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days": {
                    "description": "Number of days warning given before a password expires. A zero means warning is given only upon the day of expiration.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "appliance.local_accounts.policy_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.local_accounts.policy.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.local_accounts.policy_set": {
            "type": "object",
            "properties": {
                "policy": {
                    "$ref": "#/definitions/appliance.local_accounts.policy.info",
                    "description": "Global password policy"
                }
            },
            "required": [
                "policy"
            ]
        },
        "appliance.local_accounts.update_config": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Password",
                    "type": "string",
                    "format": "password"
                },
                "old_password": {
                    "description": "Old password of the user (required in case of the password change, not required if superAdmin user changes the password of the other user)",
                    "type": "string",
                    "format": "password"
                },
                "full_name": {
                    "description": "Full name of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email address of the local account",
                    "type": "string"
                },
                "roles": {
                    "description": "User roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "description": "Flag indicating if the account is enabled",
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Flag indicating if the account password expires",
                    "type": "boolean"
                },
                "password_expires_at": {
                    "description": "Date when the account's password will expire",
                    "type": "string",
                    "format": "date-time"
                },
                "inactive_after_password_expiration": {
                    "description": "Flag indicating if the account will be locked after password expiration",
                    "type": "boolean"
                },
                "days_after_password_expiration": {
                    "description": "Number of days after password expiration before the account will be locked",
                    "type": "integer",
                    "format": "int64"
                },
                "min_days_between_password_change": {
                    "description": "Minimum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "max_days_between_password_change": {
                    "description": "Maximum number of days between password change",
                    "type": "integer",
                    "format": "int64"
                },
                "warn_days_before_password_expiration": {
                    "description": "Number of days of warning before password expires",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "appliance.local_accounts_create": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.local_accounts_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.local_accounts.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.local_accounts_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.local_accounts_update": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.local_accounts.update_config",
                    "description": "User configuration"
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.logging.forwarding.config": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "FQDN or IP address of the logging server to which messages are forwarded.",
                    "type": "string"
                },
                "port": {
                    "description": "The port on which the remote logging server is listening for forwarded log messages.",
                    "type": "integer",
                    "format": "int64"
                },
                "protocol": {
                    "description": "Transport protocol used to forward log messages.",
                    "$ref": "#/definitions/appliance.logging.forwarding.protocol"
                }
            },
            "required": [
                "hostname",
                "port",
                "protocol"
            ]
        },
        "appliance.logging.forwarding.connection_status": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "FQDN or IP address of the configured remote logging servers.",
                    "type": "string"
                },
                "state": {
                    "description": "State of the configured remote logging server.",
                    "$ref": "#/definitions/appliance.logging.forwarding.connection_status.state"
                },
                "message": {
                    "description": "Message associated with the state of the configured remote logging server.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "hostname",
                "state"
            ]
        },
        "appliance.logging.forwarding.connection_status.state": {
            "type": "string",
            "description": "The {@name State} {@term enumerated type} defines the state values that a remote logging server can be in.",
            "enum": [
                "UP",
                "DOWN",
                "UNKNOWN"
            ]
        },
        "appliance.logging.forwarding.protocol": {
            "type": "string",
            "description": "The {@name Protocol} {@term enumerated type} defines transport protocols for outbound log messages.",
            "enum": [
                "TLS",
                "UDP",
                "TCP"
            ]
        },
        "appliance.logging.forwarding.test_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.connection_status"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.logging.forwarding_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.config"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.logging.forwarding_set": {
            "type": "object",
            "properties": {
                "cfg_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.logging.forwarding.config"
                    },
                    "description": "The cfgList is a list of Config structure that contains the log message forwarding rules in terms of the host, port, protocol of the log message."
                }
            },
            "required": [
                "cfg_list"
            ]
        },
        "appliance.logging.forwarding_test": {
            "type": "object",
            "properties": {
                "send_test_message": {
                    "type": "boolean",
                    "description": "Flag specifying whether a default test message should be sent to the configured logging servers."
                }
            }
        },
        "appliance.monitoring.function_type": {
            "type": "string",
            "description": "{@name FunctionType} {@term enumerated type} Defines aggregation function",
            "enum": [
                "COUNT",
                "MAX",
                "AVG",
                "MIN"
            ]
        },
        "appliance.monitoring.interval_type": {
            "type": "string",
            "description": "{@name IntervalType} {@term enumerated type} Defines interval between the values in hours and mins,                    for which aggregation will apply",
            "enum": [
                "MINUTES30",
                "HOURS2",
                "MINUTES5",
                "DAY1",
                "HOURS6"
            ]
        },
        "appliance.monitoring.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.monitoring.monitored_item"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.monitoring.monitored_item": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "monitored item ID Ex: CPU, MEMORY",
                    "type": "string"
                },
                "name": {
                    "description": "monitored item name Ex: \"Network write speed\"",
                    "type": "string"
                },
                "units": {
                    "description": "Y-axis label EX: \"Mbps\", \"%\"",
                    "type": "string"
                },
                "category": {
                    "description": "category Ex: network, storage etc",
                    "type": "string"
                },
                "instance": {
                    "description": "instance name Ex: eth0",
                    "type": "string"
                },
                "description": {
                    "description": "monitored item description Ex: applmgmt.mon.descr.net.rx.packetRate.eth0",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name",
                "units",
                "category",
                "instance",
                "description"
            ]
        },
        "appliance.monitoring.monitored_item_data": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Monitored item IDs Ex: CPU, MEMORY, STORAGE_TOTAL",
                    "type": "string"
                },
                "interval": {
                    "description": "interval between values in hours, minutes",
                    "$ref": "#/definitions/appliance.monitoring.interval_type"
                },
                "function": {
                    "description": "aggregation function",
                    "$ref": "#/definitions/appliance.monitoring.function_type"
                },
                "start_time": {
                    "description": "Start time in UTC",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "End time in UTC",
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "description": "list of values",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "interval",
                "function",
                "start_time",
                "end_time",
                "data"
            ]
        },
        "appliance.monitoring.monitored_item_data_request": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "monitored item IDs Ex: CPU, MEMORY",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "interval": {
                    "description": "interval between values in hours, minutes",
                    "$ref": "#/definitions/appliance.monitoring.interval_type"
                },
                "function": {
                    "description": "aggregation function",
                    "$ref": "#/definitions/appliance.monitoring.function_type"
                },
                "start_time": {
                    "description": "Start time in UTC",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "End time in UTC",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "names",
                "interval",
                "function",
                "start_time",
                "end_time"
            ]
        },
        "appliance.monitoring.query_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.monitoring.monitored_item_data"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.monitoring_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.monitoring.monitored_item"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.DNS_info": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "DNS mode.",
                    "$ref": "#/definitions/appliance.networking.DNS_info.DNS_mode"
                },
                "hostname": {
                    "description": "Hostname.",
                    "type": "string"
                },
                "servers": {
                    "description": "Servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "mode",
                "hostname",
                "servers"
            ]
        },
        "appliance.networking.DNS_info.DNS_mode": {
            "type": "string",
            "description": "The {@name DnsMode} {@term enumerated type} describes the source of DNS servers.",
            "enum": [
                "DHCP",
                "STATIC"
            ]
        },
        "appliance.networking.change_spec": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "New hostname to assign to the management network of vCenter appliance",
                    "type": "string"
                },
                "SSO_user": {
                    "description": "vCenter Server SSO administrator username",
                    "type": "string"
                },
                "SSO_password": {
                    "description": "vCenter Server SSO administrator Password",
                    "type": "string",
                    "format": "password"
                },
                "dns": {
                    "description": "DNS Configuration to set for the machine",
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config"
                },
                "ipv4": {
                    "description": "IPv4 Configuration to set for the machine",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.config"
                },
                "ipv6": {
                    "description": "IPv6 Configuration to set for the machine",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.config"
                }
            },
            "required": [
                "hostname",
                "SSO_user",
                "SSO_password"
            ]
        },
        "appliance.networking.change_task_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.domains.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.domains_add": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain to add."
                }
            },
            "required": [
                "domain"
            ]
        },
        "appliance.networking.dns.domains_set": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains."
                }
            },
            "required": [
                "domains"
            ]
        },
        "appliance.networking.dns.hostname.message": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "result": {
                    "description": "result of the test",
                    "$ref": "#/definitions/appliance.networking.dns.hostname.message_status"
                }
            },
            "required": [
                "message",
                "result"
            ]
        },
        "appliance.networking.dns.hostname.message_status": {
            "type": "string",
            "description": "{@name MessageStatus} {@term enumerated type} Individual test result",
            "enum": [
                "failure",
                "success"
            ]
        },
        "appliance.networking.dns.hostname.test_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.hostname.test_status_info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.hostname.test_status": {
            "type": "string",
            "description": "{@name TestStatus} {@term enumerated type} Health indicator",
            "enum": [
                "orange",
                "green",
                "red"
            ]
        },
        "appliance.networking.dns.hostname.test_status_info": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Overall status of tests run.",
                    "$ref": "#/definitions/appliance.networking.dns.hostname.test_status"
                },
                "messages": {
                    "description": "messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.dns.hostname.message"
                    }
                }
            },
            "required": [
                "status",
                "messages"
            ]
        },
        "appliance.networking.dns.hostname_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.hostname_set": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "FQDN."
                }
            },
            "required": [
                "name"
            ]
        },
        "appliance.networking.dns.hostname_test": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "FQDN."
                }
            },
            "required": [
                "name"
            ]
        },
        "appliance.networking.dns.servers.DNS_server_config": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Define how to determine the DNS servers. Leave the servers argument empty if the mode argument is \"DHCP\". Set the servers argument to a comma-separated list of DNS servers if the mode argument is \"static\". The DNS server are assigned from the specified list.",
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_mode"
                },
                "servers": {
                    "description": "List of the currently used DNS servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "mode",
                "servers"
            ]
        },
        "appliance.networking.dns.servers.DNS_server_mode": {
            "type": "string",
            "description": "{@name DNSServerMode} {@term enumerated type} Describes DNS Server source (DHCP,static)",
            "enum": [
                "dhcp",
                "is_static"
            ]
        },
        "appliance.networking.dns.servers.message": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "result": {
                    "description": "result of the test",
                    "$ref": "#/definitions/appliance.networking.dns.servers.message_status"
                }
            },
            "required": [
                "message",
                "result"
            ]
        },
        "appliance.networking.dns.servers.message_status": {
            "type": "string",
            "description": "{@name MessageStatus} {@term enumerated type} Individual test result",
            "enum": [
                "failure",
                "success"
            ]
        },
        "appliance.networking.dns.servers.test_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.test_status_info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.servers.test_status": {
            "type": "string",
            "description": "{@name TestStatus} {@term enumerated type} Health indicator",
            "enum": [
                "orange",
                "green",
                "red"
            ]
        },
        "appliance.networking.dns.servers.test_status_info": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Overall status of tests run.",
                    "$ref": "#/definitions/appliance.networking.dns.servers.test_status"
                },
                "messages": {
                    "description": "messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.dns.servers.message"
                    }
                }
            },
            "required": [
                "status",
                "messages"
            ]
        },
        "appliance.networking.dns.servers_add": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "DNS server."
                }
            },
            "required": [
                "server"
            ]
        },
        "appliance.networking.dns.servers_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.dns.servers_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.dns.servers.DNS_server_config",
                    "description": "DNS server configuration."
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.networking.dns.servers_test": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS servers."
                }
            },
            "required": [
                "servers"
            ]
        },
        "appliance.networking.firewall.inbound.policy": {
            "type": "string",
            "description": "{@name Policy} {@term enumerated type} Defines firewall rule policies.",
            "enum": [
                "IGNORE",
                "ACCEPT",
                "REJECT",
                "RETURN"
            ]
        },
        "appliance.networking.firewall.inbound.rule": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "IPv4 or IPv6 address.",
                    "type": "string"
                },
                "prefix": {
                    "description": "CIDR prefix used to mask address. For example, an IPv4 prefix of 24 ignores the low-order 8 bits of address.",
                    "type": "integer",
                    "format": "int64"
                },
                "policy": {
                    "description": "The allow or deny policy of this rule.",
                    "$ref": "#/definitions/appliance.networking.firewall.inbound.policy"
                },
                "interface_name": {
                    "description": "The interface to which this rule applies. An empty string indicates that the rule applies to all interfaces.",
                    "type": "string"
                }
            },
            "required": [
                "address",
                "prefix",
                "policy"
            ]
        },
        "appliance.networking.firewall.inbound_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.firewall.inbound.rule"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.firewall.inbound_set": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.firewall.inbound.rule"
                    },
                    "description": "List of address-based firewall rules."
                }
            },
            "required": [
                "rules"
            ]
        },
        "appliance.networking.info": {
            "type": "object",
            "properties": {
                "dns": {
                    "description": "DNS configuration.",
                    "$ref": "#/definitions/appliance.networking.DNS_info"
                },
                "interfaces": {
                    "description": "Interface configuration as a key-value map where key is a network interface name, for example, \"nic0\".",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                            }
                        }
                    }
                }
            },
            "required": [
                "dns",
                "interfaces"
            ]
        },
        "appliance.networking.interfaces.interface_info": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Interface name, for example, \"nic0\", \"nic1\".",
                    "type": "string"
                },
                "status": {
                    "description": "Interface status.",
                    "$ref": "#/definitions/appliance.networking.interfaces.interface_status"
                },
                "mac": {
                    "description": "MAC address. For example 00:0C:29:94:BB:5A.",
                    "type": "string"
                },
                "ipv4": {
                    "description": "IPv4 Address information.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.info"
                },
                "ipv6": {
                    "description": "IPv6 Address information.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.info"
                }
            },
            "required": [
                "name",
                "status",
                "mac"
            ]
        },
        "appliance.networking.interfaces.interface_status": {
            "type": "string",
            "description": "{@name InterfaceStatus} {@term enumerated type} Defines interface status",
            "enum": [
                "down",
                "up"
            ]
        },
        "appliance.networking.interfaces.ipv4.config": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "The Address assignment mode.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.mode"
                },
                "address": {
                    "description": "The IPv4 address, for example, \"10.20.80.191\".",
                    "type": "string"
                },
                "prefix": {
                    "description": "The IPv4 CIDR prefix, for example, 24.  See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.",
                    "type": "integer",
                    "format": "int64"
                },
                "default_gateway": {
                    "description": "The IPv4 address of the default gateway. This configures the global default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                }
            },
            "required": [
                "mode"
            ]
        },
        "appliance.networking.interfaces.ipv4.info": {
            "type": "object",
            "properties": {
                "configurable": {
                    "description": "The specified network interface is configurable or not.",
                    "type": "boolean"
                },
                "mode": {
                    "description": "The Address assignment mode.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.mode"
                },
                "address": {
                    "description": "The IPv4 address, for example, \"10.20.80.191\".",
                    "type": "string"
                },
                "prefix": {
                    "description": "The IPv4 CIDR prefix, for example, 24.  See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.",
                    "type": "integer",
                    "format": "int64"
                },
                "default_gateway": {
                    "description": "The IPv4 address of the default gateway. This configures the global default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                }
            },
            "required": [
                "configurable",
                "mode"
            ]
        },
        "appliance.networking.interfaces.ipv4.mode": {
            "type": "string",
            "description": "The {@name Mode} {@term enumerated type} defines different IPv4 address assignment modes.",
            "enum": [
                "DHCP",
                "STATIC",
                "UNCONFIGURED"
            ]
        },
        "appliance.networking.interfaces.ipv4_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.interfaces.ipv4_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv4.config",
                    "description": "The IPv4 Network configuration to set."
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.networking.interfaces.ipv6.address": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "The IPv6 address, for example, fc00:10:20:83:20c:29ff:fe94:bb5a.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The IPv6 CIDR prefix, for example, 64.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "address",
                "prefix"
            ]
        },
        "appliance.networking.interfaces.ipv6.address_info": {
            "type": "object",
            "properties": {
                "origin": {
                    "description": "The Origin of the IPv6 address. For more information, see RFC 4293.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.origin"
                },
                "status": {
                    "description": "The Status of the IPv6 address. For more information, see RFC 4293.",
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.status"
                },
                "address": {
                    "description": "The IPv6 address, for example, fc00:10:20:83:20c:29ff:fe94:bb5a.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The IPv6 CIDR prefix, for example, 64.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "origin",
                "status",
                "address",
                "prefix"
            ]
        },
        "appliance.networking.interfaces.ipv6.config": {
            "type": "object",
            "properties": {
                "dhcp": {
                    "description": "An address will be assigned by a DHCP server.",
                    "type": "boolean"
                },
                "autoconf": {
                    "description": "An address will be assigned by Stateless Address Autoconfiguration (SLAAC).",
                    "type": "boolean"
                },
                "addresses": {
                    "description": "The list of addresses to be statically assigned.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.ipv6.address"
                    }
                },
                "default_gateway": {
                    "description": "The default gateway for static IP address assignment. This configures the global IPv6 default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                }
            },
            "required": [
                "dhcp",
                "autoconf",
                "addresses",
                "default_gateway"
            ]
        },
        "appliance.networking.interfaces.ipv6.info": {
            "type": "object",
            "properties": {
                "dhcp": {
                    "description": "DHCP is on.",
                    "type": "boolean"
                },
                "autoconf": {
                    "description": "Stateless Address Autoconfiguration (SLAAC) is on.",
                    "type": "boolean"
                },
                "addresses": {
                    "description": "List of addresses with their origins and statuses.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.ipv6.address_info"
                    }
                },
                "default_gateway": {
                    "description": "The default gateway for static IP address assignment. This configures the global IPv6 default gateway on the appliance with the specified gateway address and interface. This gateway replaces the existing default gateway configured on the appliance. However, if the gateway address is link-local, then it is added for that interface. This does not support configuration of multiple global default gateways through different interfaces.",
                    "type": "string"
                },
                "configurable": {
                    "description": "Is NIC configurable or not.",
                    "type": "boolean"
                }
            },
            "required": [
                "dhcp",
                "autoconf",
                "addresses",
                "default_gateway",
                "configurable"
            ]
        },
        "appliance.networking.interfaces.ipv6.origin": {
            "type": "string",
            "description": "The {@name Origin} {@term enumerated type} defines IPv6 address origin values.",
            "enum": [
                "DHCP",
                "RANDOM",
                "MANUAL",
                "LINKLAYER",
                "OTHER"
            ]
        },
        "appliance.networking.interfaces.ipv6.status": {
            "type": "string",
            "description": "The {@name Status} {@term enumerated type} defines IPv6 address status values. See RFC 4293.",
            "enum": [
                "TENTATIVE",
                "UNKNOWN",
                "INACCESSIBLE",
                "INVALID",
                "DUPLICATE",
                "PREFERRED",
                "DEPRECATED",
                "OPTIMISTIC"
            ]
        },
        "appliance.networking.interfaces.ipv6_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.interfaces.ipv6_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.interfaces.ipv6.config",
                    "description": "The IPv6 configuration."
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.networking.interfaces.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.interfaces_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.interfaces.interface_info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.no_proxy_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.no_proxy_set": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings representing servers to bypass proxy. A server can be a FQDN, IP address, FQDN:port or IP:port combinations."
                }
            },
            "required": [
                "servers"
            ]
        },
        "appliance.networking.proxy.config": {
            "type": "object",
            "properties": {
                "server": {
                    "description": "URL of the proxy server",
                    "type": "string"
                },
                "port": {
                    "description": "Port to connect to the proxy server. In a 'get' call, indicates the port connected to the proxy server. In a 'set' call, specifies the port to connect to the proxy server. A value of -1 indicates the default port.",
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "description": "Username for proxy server.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for proxy server.",
                    "type": "string",
                    "format": "password"
                },
                "enabled": {
                    "description": "In the result of the {@name #get} and {@name #list} {@term operations} this {@term field} indicates whether proxying is enabled for a particular protocol. In the input to the {@name test} and {@name set} {@term operations} this {@term field} specifies whether proxying should be enabled for a particular protocol.",
                    "type": "boolean"
                }
            },
            "required": [
                "server",
                "port",
                "enabled"
            ]
        },
        "appliance.networking.proxy.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "$ref": "#/definitions/appliance.networking.proxy.protocol"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.networking.proxy.config"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.proxy.protocol": {
            "type": "string",
            "description": "{@name Protocol} {@term enumerated type} defines the protocols for which proxying is supported.",
            "enum": [
                "HTTP",
                "HTTPS",
                "FTP"
            ]
        },
        "appliance.networking.proxy.server_status": {
            "type": "string",
            "description": "{@name ServerStatus} {@term enumerated type} defines the status of the server associated with the test run.",
            "enum": [
                "SERVER_REACHABLE",
                "SERVER_UNREACHABLE"
            ]
        },
        "appliance.networking.proxy.test_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.proxy.test_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.proxy.test_result": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the proxy server indicating whether the proxy server is reachable.",
                    "$ref": "#/definitions/appliance.networking.proxy.server_status"
                },
                "message": {
                    "description": "Message associated with status.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "status",
                "message"
            ]
        },
        "appliance.networking.proxy_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.proxy.config"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking.proxy_set": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/appliance.networking.proxy.config",
                    "description": "Proxy configuration for the specific protocol."
                }
            },
            "required": [
                "config"
            ]
        },
        "appliance.networking.proxy_test": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "A hostname, IPv4 or Ipv6 address."
                },
                "config": {
                    "$ref": "#/definitions/appliance.networking.proxy.config",
                    "description": "Proxy configuration to test."
                }
            },
            "required": [
                "host",
                "config"
            ]
        },
        "appliance.networking.update_spec": {
            "type": "object",
            "properties": {
                "ipv6_enabled": {
                    "description": "IPv6 Enabled or not",
                    "type": "boolean"
                }
            }
        },
        "appliance.networking_change_task": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.networking.change_spec",
                    "description": "Information required to change the hostname."
                }
            },
            "required": [
                "spec"
            ]
        },
        "appliance.networking_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.networking.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.networking_update": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.networking.update_spec",
                    "description": "update spec with optional boolean value"
                }
            },
            "required": [
                "spec"
            ]
        },
        "appliance.notification": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The notification id.",
                    "type": "string"
                },
                "time": {
                    "description": "The time the notification was raised/found.",
                    "type": "string",
                    "format": "date-time"
                },
                "message": {
                    "description": "The notification message.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "resolution": {
                    "description": "The resolution message, if any.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "id",
                "message"
            ]
        },
        "appliance.notifications": {
            "type": "object",
            "properties": {
                "info": {
                    "description": "Info notification messages reported.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    }
                },
                "warnings": {
                    "description": "Warning notification messages reported.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    }
                },
                "errors": {
                    "description": "Error notification messages reported.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.notification"
                    }
                }
            }
        },
        "appliance.ntp.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "args": {
                    "description": "nested data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.ntp.server_status": {
            "type": "string",
            "description": "{@name ServerStatus} {@term enumerated type} Status of server during test",
            "enum": [
                "SERVER_REACHABLE",
                "SERVER_UNREACHABLE"
            ]
        },
        "appliance.ntp.test_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.ntp.test_run_status"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.ntp.test_run_status": {
            "type": "object",
            "properties": {
                "server": {
                    "description": "Server name associated with the test run.",
                    "type": "string"
                },
                "status": {
                    "description": "Server status",
                    "$ref": "#/definitions/appliance.ntp.server_status"
                },
                "message": {
                    "description": "Message associated with status",
                    "$ref": "#/definitions/appliance.ntp.localizable_message"
                }
            },
            "required": [
                "server",
                "status",
                "message"
            ]
        },
        "appliance.ntp_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.ntp_set": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of host names or ip addresses of ntp servers."
                }
            },
            "required": [
                "servers"
            ]
        },
        "appliance.ntp_test": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of host names or IP addresses of NTP servers."
                }
            },
            "required": [
                "servers"
            ]
        },
        "appliance.recovery.backup.backup_request": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "a list of optional parts. Run backup parts APIs to get list of optional parts and description",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backup_password": {
                    "description": "a password for a backup piece The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "type": "string",
                    "format": "password"
                },
                "location_type": {
                    "description": "a type of location",
                    "$ref": "#/definitions/appliance.recovery.backup.location_type"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "type": "string",
                    "format": "password"
                },
                "comment": {
                    "description": "Custom comment",
                    "type": "string"
                }
            },
            "required": [
                "parts",
                "location_type",
                "location"
            ]
        },
        "appliance.recovery.backup.job.backup_job_status": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "TimeStamp based ID.",
                    "type": "string"
                },
                "state": {
                    "description": "The state of the backup job.",
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_restore_process_state"
                },
                "messages": {
                    "description": "List of messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.job.localizable_message"
                    }
                },
                "progress": {
                    "description": "Progress of the job in percentage.",
                    "type": "integer",
                    "format": "int64"
                },
                "start_time": {
                    "description": "Time when the backup was started.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "Time when the backup was finished.",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "id",
                "state",
                "messages",
                "progress",
                "start_time"
            ]
        },
        "appliance.recovery.backup.job.backup_request": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "List of optional parts that will be included in the backup. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "type": "string",
                    "format": "password"
                },
                "location_type": {
                    "description": "Type of backup location.",
                    "$ref": "#/definitions/appliance.recovery.backup.job.location_type"
                },
                "location": {
                    "description": "Path or URL of the backup location.",
                    "type": "string"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "type": "string",
                    "format": "password"
                },
                "comment": {
                    "description": "Custom comment provided by the user.",
                    "type": "string"
                }
            },
            "required": [
                "parts",
                "location_type",
                "location"
            ]
        },
        "appliance.recovery.backup.job.backup_restore_process_state": {
            "type": "string",
            "description": "The {@name BackupRestoreProcessState} {@term enumerated type} defines the possible states of a backup/restore process.",
            "enum": [
                "FAILED",
                "INPROGRESS",
                "NONE",
                "SUCCEEDED"
            ]
        },
        "appliance.recovery.backup.job.cancel_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.return_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.job.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.job.details.build_info": {
            "type": "object",
            "properties": {
                "version_name": {
                    "description": "Appliance product type, for example 6.8.2 GA",
                    "type": "string"
                },
                "version": {
                    "description": "Appliance version, for example 6.8.2.10000",
                    "type": "string"
                },
                "build_number": {
                    "description": "Build Number of the appliance",
                    "type": "string"
                }
            },
            "required": [
                "version_name",
                "version",
                "build_number"
            ]
        },
        "appliance.recovery.backup.job.details.filter_spec": {
            "type": "object",
            "properties": {
                "jobs": {
                    "description": "Identifiers of backup jobs that can match the filter.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "appliance.recovery.backup.job.details.info": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "URL of the backup location.",
                    "type": "string",
                    "format": "uri"
                },
                "duration": {
                    "description": "Time in seconds since the backup job was started or the time it took to complete the backup job.",
                    "type": "integer",
                    "format": "int64"
                },
                "size": {
                    "description": "Size of the backup data transferred to remote location.",
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "description": "Progress of the job.",
                    "$ref": "#/definitions/cis.task.progress"
                },
                "location_user": {
                    "description": "The username for the remote backup location.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the backup job. Indicates whether the backup was started manually or as a scheduled backup.",
                    "$ref": "#/definitions/appliance.recovery.backup.job.details.type"
                },
                "messages": {
                    "description": "List of any info/warning/error messages returned by the backup job.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "build": {
                    "description": "Information about the build of the appliance.",
                    "$ref": "#/definitions/appliance.recovery.backup.job.details.build_info"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/vapi.std.dynamic_ID"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/cis.task.status"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "location",
                "location_user",
                "type",
                "messages",
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ]
        },
        "appliance.recovery.backup.job.details.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.recovery.backup.job.details.info"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.job.details.type": {
            "type": "string",
            "description": "The {@name Type} {@term enumerated type} defines the type of backup job.",
            "enum": [
                "SCHEDULED",
                "MANUAL"
            ]
        },
        "appliance.recovery.backup.job.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.job.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id in message bundle.",
                    "type": "string"
                },
                "default_message": {
                    "description": "Text in english.",
                    "type": "string"
                },
                "args": {
                    "description": "Nested data.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.recovery.backup.job.location_type": {
            "type": "string",
            "description": "The {@name LocationType} {@term enumerated type} defines the type of destination location for backup/restore. You specify the location type when you create a backup job. See {@link BackupRequest}.",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ]
        },
        "appliance.recovery.backup.job.return_result": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the cancel operation.",
                    "$ref": "#/definitions/appliance.recovery.backup.job.return_status"
                },
                "messages": {
                    "description": "List of messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.job.localizable_message"
                    }
                }
            },
            "required": [
                "status",
                "messages"
            ]
        },
        "appliance.recovery.backup.job.return_status": {
            "type": "string",
            "description": "The {@name ReturnStatus} {@term enumerated type} defines the return type for the cancel operation. You specify the return status when you return the result of cancel job. See {@link ReturnResult}.",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ]
        },
        "appliance.recovery.backup.job_create": {
            "type": "object",
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_request",
                    "description": "BackupRequest Structure"
                }
            },
            "required": [
                "piece"
            ]
        },
        "appliance.recovery.backup.job_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "args": {
                    "description": "nested data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.recovery.backup.location_spec": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Backup location URL.",
                    "type": "string",
                    "format": "uri"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "type": "string",
                    "format": "password"
                }
            },
            "required": [
                "location"
            ]
        },
        "appliance.recovery.backup.location_type": {
            "type": "string",
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ]
        },
        "appliance.recovery.backup.parts.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.parts.part"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.parts.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "args": {
                    "description": "nested data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.recovery.backup.parts.part": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "part ID",
                    "type": "string"
                },
                "name": {
                    "description": "part name id in message bundle",
                    "$ref": "#/definitions/appliance.recovery.backup.parts.localizable_message"
                },
                "description": {
                    "description": "part description id in message bundle",
                    "$ref": "#/definitions/appliance.recovery.backup.parts.localizable_message"
                },
                "selected_by_default": {
                    "description": "Is this part selected by default in the user interface.",
                    "type": "boolean"
                },
                "optional": {
                    "description": "Is this part optional.",
                    "type": "boolean"
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "selected_by_default",
                "optional"
            ]
        },
        "appliance.recovery.backup.parts_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.return_result": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Check status",
                    "$ref": "#/definitions/appliance.recovery.backup.return_status"
                },
                "messages": {
                    "description": "List of messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.localizable_message"
                    }
                }
            },
            "required": [
                "status",
                "messages"
            ]
        },
        "appliance.recovery.backup.return_status": {
            "type": "string",
            "description": "{@name ReturnStatus} {@term enumerated type} Defines the state of precheck",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ]
        },
        "appliance.recovery.backup.schedules.create_spec": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "List of optional parts to be backed up. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "type": "string",
                    "format": "password"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "type": "string",
                    "format": "uri"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "type": "string",
                    "format": "password"
                },
                "enable": {
                    "description": "Enable or disable a schedule.",
                    "type": "boolean"
                },
                "recurrence_info": {
                    "description": "Recurrence information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info"
                },
                "retention_info": {
                    "description": "Retention information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info"
                }
            },
            "required": [
                "location"
            ]
        },
        "appliance.recovery.backup.schedules.day_of_week": {
            "type": "string",
            "description": "The {@name DayOfWeek} {@term enumerated type} defines the set of days when backup can be scheduled. The days can be specified as a list of individual days. You specify the days when you set the recurrence for a schedule. See {@link RecurrenceInfo#days}.",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ]
        },
        "appliance.recovery.backup.schedules.info": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "List of optional parts that will be included in backups based on this schedule details. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "description": "URL of the backup location.",
                    "type": "string",
                    "format": "uri"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "enable": {
                    "description": "Enable or disable a schedule, by default when created a schedule will be enabled.",
                    "type": "boolean"
                },
                "recurrence_info": {
                    "description": "Recurrence information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info"
                },
                "retention_info": {
                    "description": "Retention information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info"
                }
            },
            "required": [
                "parts",
                "location",
                "enable"
            ]
        },
        "appliance.recovery.backup.schedules.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.recovery.backup.schedules.info"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.schedules.recurrence_info": {
            "type": "object",
            "properties": {
                "minute": {
                    "description": "Minute when backup should run.",
                    "type": "integer",
                    "format": "int64"
                },
                "hour": {
                    "description": "Hour when backup should run. The hour should be specified in 24-hour clock format.",
                    "type": "integer",
                    "format": "int64"
                },
                "days": {
                    "description": "Day of week when the backup should be run. Days can be specified as list of days.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.schedules.day_of_week"
                    }
                }
            },
            "required": [
                "minute",
                "hour"
            ]
        },
        "appliance.recovery.backup.schedules.retention_info": {
            "type": "object",
            "properties": {
                "max_count": {
                    "description": "Number of backups which should be retained. If retention is not set, all the backups will be retained forever.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "max_count"
            ]
        },
        "appliance.recovery.backup.schedules.run_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.job.backup_job_status"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.schedules.update_spec": {
            "type": "object",
            "properties": {
                "parts": {
                    "description": "List of optional parts. Use the {@link appliance.recovery.backup.Parts#list} {@term operation} to get information about the supported parts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backup_password": {
                    "description": "Password for a backup piece. The backupPassword must adhere to the following password requirements: At least 8 characters, cannot be more than 20 characters in length. At least 1 uppercase letter. At least 1 lowercase letter. At least 1 numeric digit. At least 1 special character (i.e. any character not in [0-9,a-z,A-Z]). Only visible ASCII characters (for example, no space).",
                    "type": "string",
                    "format": "password"
                },
                "location": {
                    "description": "URL of the backup location.",
                    "type": "string",
                    "format": "uri"
                },
                "location_user": {
                    "description": "Username for the given location.",
                    "type": "string"
                },
                "location_password": {
                    "description": "Password for the given location.",
                    "type": "string",
                    "format": "password"
                },
                "enable": {
                    "description": "Enable or disable a schedule.",
                    "type": "boolean"
                },
                "recurrence_info": {
                    "description": "Recurrence information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.recurrence_info"
                },
                "retention_info": {
                    "description": "Retention information for the schedule.",
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.retention_info"
                }
            }
        },
        "appliance.recovery.backup.schedules_create": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.create_spec",
                    "description": "CreateSpec Structure"
                }
            },
            "required": [
                "spec"
            ]
        },
        "appliance.recovery.backup.schedules_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.schedules_run": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "field that specifies the description for the backup."
                }
            }
        },
        "appliance.recovery.backup.schedules_update": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.backup.schedules.update_spec",
                    "description": "UpdateSpec Structure"
                }
            },
            "required": [
                "spec"
            ]
        },
        "appliance.recovery.backup.system_name.archive.filter_spec": {
            "type": "object",
            "properties": {
                "start_timestamp": {
                    "description": "Backup must have been taken on or after this time to match the filter.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_timestamp": {
                    "description": "Backup must have been taken on or before this time to match the filter.",
                    "type": "string",
                    "format": "date-time"
                },
                "comment_substring": {
                    "description": "Backup comment must contain this {@term string} to match the filter.",
                    "type": "string"
                },
                "max_results": {
                    "description": "Limit result to a max count of most recent backups.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "appliance.recovery.backup.system_name.archive.info": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "description": "Time when this backup was completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "location": {
                    "description": "Backup location URL.",
                    "type": "string",
                    "format": "uri"
                },
                "parts": {
                    "description": "List of parts included in the backup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "description": "The version of the appliance represented by the backup.",
                    "type": "string"
                },
                "system_name": {
                    "description": "The system name identifier of the appliance represented by the backup.",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment added by the user for this backup.",
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "location",
                "parts",
                "version",
                "system_name",
                "comment"
            ]
        },
        "appliance.recovery.backup.system_name.archive.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.system_name.archive.summary": {
            "type": "object",
            "properties": {
                "archive": {
                    "description": "Backup archive identifier.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time when this backup was started.",
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "description": "The version of the appliance represented by the backup archive.",
                    "type": "string"
                },
                "comment": {
                    "description": "Custom comment added by the user for this backup.",
                    "type": "string"
                }
            },
            "required": [
                "archive",
                "timestamp",
                "version",
                "comment"
            ]
        },
        "appliance.recovery.backup.system_name.archive_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.system_name.archive.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.system_name.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup.validate_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.backup.return_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.backup_validate": {
            "type": "object",
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.backup.backup_request",
                    "description": "BackupRequest Structure"
                }
            },
            "required": [
                "piece"
            ]
        },
        "appliance.recovery.info": {
            "type": "object",
            "properties": {
                "supported": {
                    "description": "Is recovery supported in this appliance.",
                    "type": "boolean"
                }
            },
            "required": [
                "supported"
            ]
        },
        "appliance.recovery.reconciliation.job.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.reconciliation.job.create_spec": {
            "type": "object",
            "properties": {
                "sso_admin_user_name": {
                    "description": "Administrators username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "Password for SSO admin user.",
                    "type": "string",
                    "format": "password"
                },
                "ignore_warnings": {
                    "description": "Flag indicating whether warnings should be ignored during reconciliation.",
                    "type": "boolean"
                }
            }
        },
        "appliance.recovery.reconciliation.job.info": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "service": {
                    "description": "Name of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Name of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target resource the operation modifies.",
                    "$ref": "#/definitions/vapi.std.dynamic_ID"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.status"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "messages": {
                    "description": "A list of localized messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "progress": {
                    "description": "The progress of the job as a percentage.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "description",
                "service",
                "operation",
                "status",
                "messages",
                "progress"
            ]
        },
        "appliance.recovery.reconciliation.job.status": {
            "type": "string",
            "description": "The {@name Status} {@term enumerated type} defines the status values that can be reported for an operation.",
            "enum": [
                "NONE",
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "appliance.recovery.reconciliation.job_create": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.create_spec",
                    "description": "CreateSpec Structure"
                }
            },
            "required": [
                "spec"
            ]
        },
        "appliance.recovery.reconciliation.job_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.reconciliation.job.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.restore.job.backup_restore_process_state": {
            "type": "string",
            "description": "{@name BackupRestoreProcessState} {@term enumerated type} Defines state of backup/restore process",
            "enum": [
                "FAILED",
                "INPROGRESS",
                "NONE",
                "SUCCEEDED"
            ]
        },
        "appliance.recovery.restore.job.cancel_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.return_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.restore.job.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_job_status"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.restore.job.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "args": {
                    "description": "nested data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.recovery.restore.job.location_type": {
            "type": "string",
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ]
        },
        "appliance.recovery.restore.job.restore_job_status": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "process state",
                    "$ref": "#/definitions/appliance.recovery.restore.job.backup_restore_process_state"
                },
                "messages": {
                    "description": "list of messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.job.localizable_message"
                    }
                },
                "progress": {
                    "description": "percentage complete",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "state",
                "messages",
                "progress"
            ]
        },
        "appliance.recovery.restore.job.restore_request": {
            "type": "object",
            "properties": {
                "backup_password": {
                    "description": "a password for a backup piece",
                    "type": "string",
                    "format": "password"
                },
                "location_type": {
                    "description": "a type of location",
                    "$ref": "#/definitions/appliance.recovery.restore.job.location_type"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "type": "string",
                    "format": "password"
                },
                "sso_admin_user_name": {
                    "description": "Administrators Username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "The password for SSO admin user.",
                    "type": "string",
                    "format": "password"
                },
                "ignore_warnings": {
                    "description": "The flag to ignore warnings during restore",
                    "type": "boolean"
                }
            },
            "required": [
                "location_type",
                "location"
            ]
        },
        "appliance.recovery.restore.job.return_result": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Check status",
                    "$ref": "#/definitions/appliance.recovery.restore.job.return_status"
                },
                "messages": {
                    "description": "List of messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.job.localizable_message"
                    }
                }
            },
            "required": [
                "status",
                "messages"
            ]
        },
        "appliance.recovery.restore.job.return_status": {
            "type": "string",
            "description": "{@name ReturnStatus} {@term enumerated type} Defines the state of precheck",
            "enum": [
                "FAIL",
                "WARNING",
                "OK"
            ]
        },
        "appliance.recovery.restore.job_create": {
            "type": "object",
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_request",
                    "description": "RestoreRequest Structure"
                }
            },
            "required": [
                "piece"
            ]
        },
        "appliance.recovery.restore.job_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.job.restore_job_status"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.restore.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id in message bundle",
                    "type": "string"
                },
                "default_message": {
                    "description": "text in english",
                    "type": "string"
                },
                "args": {
                    "description": "nested data",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "appliance.recovery.restore.location_type": {
            "type": "string",
            "description": "{@name LocationType} {@term enumerated type} Defines type of all locations for backup/restore",
            "enum": [
                "FTP",
                "HTTP",
                "FTPS",
                "HTTPS",
                "SCP",
                "SFTP",
                "NFS",
                "SMB"
            ]
        },
        "appliance.recovery.restore.metadata": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "description": "Time when this backup was completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "parts": {
                    "description": "List of parts included in the backup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "description": "VCSA version",
                    "type": "string"
                },
                "boxname": {
                    "description": "Box name is PNID/ FQDN etc",
                    "type": "string"
                },
                "sso_login_required": {
                    "description": "Is SSO login required for the vCenter server.",
                    "type": "boolean"
                },
                "comment": {
                    "description": "Custom comment",
                    "type": "string"
                },
                "applicable": {
                    "description": "Does the VCSA match the deployment type, network properties            and version of backed up VC",
                    "type": "boolean"
                },
                "messages": {
                    "description": "Any messages if the backup is not aplicable",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.recovery.restore.localizable_message"
                    }
                }
            },
            "required": [
                "timestamp",
                "parts",
                "version",
                "boxname",
                "comment",
                "applicable",
                "messages"
            ]
        },
        "appliance.recovery.restore.restore_request": {
            "type": "object",
            "properties": {
                "backup_password": {
                    "description": "a password for a backup piece",
                    "type": "string",
                    "format": "password"
                },
                "location_type": {
                    "description": "a type of location",
                    "$ref": "#/definitions/appliance.recovery.restore.location_type"
                },
                "location": {
                    "description": "path or url",
                    "type": "string"
                },
                "location_user": {
                    "description": "username for location",
                    "type": "string"
                },
                "location_password": {
                    "description": "password for location",
                    "type": "string",
                    "format": "password"
                },
                "sso_admin_user_name": {
                    "description": "Administrators username for SSO.",
                    "type": "string"
                },
                "sso_admin_user_password": {
                    "description": "The password for SSO admin user.",
                    "type": "string",
                    "format": "password"
                }
            },
            "required": [
                "location_type",
                "location"
            ]
        },
        "appliance.recovery.restore.validate_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.restore.metadata"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.recovery.restore_validate": {
            "type": "object",
            "properties": {
                "piece": {
                    "$ref": "#/definitions/appliance.recovery.restore.restore_request",
                    "description": "RestoreRequest Structure"
                }
            },
            "required": [
                "piece"
            ]
        },
        "appliance.recovery_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.recovery.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.services.info": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Service description",
                    "type": "string"
                },
                "state": {
                    "description": "Running State",
                    "$ref": "#/definitions/appliance.services.state"
                }
            },
            "required": [
                "description",
                "state"
            ]
        },
        "appliance.services.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.services.info"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.services.state": {
            "type": "string",
            "description": "The {@name State} {@term enumerated type} defines valid Run State for services.",
            "enum": [
                "STARTING",
                "STOPPING",
                "STARTED",
                "STOPPED"
            ]
        },
        "appliance.services_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.services.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.shutdown.shutdown_config": {
            "type": "object",
            "properties": {
                "shutdown_time": {
                    "description": "Shutdown time.",
                    "type": "string",
                    "format": "date-time"
                },
                "action": {
                    "description": "The pending shutdown operation. The string values for pending operations can be 'poweroff', 'reboot' or ''.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason behind the shutdown action",
                    "type": "string"
                }
            },
            "required": [
                "action",
                "reason"
            ]
        },
        "appliance.shutdown_poweroff": {
            "type": "object",
            "properties": {
                "delay": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Minutes after which poweroff should start. If 0 is specified, poweroff will start immediately."
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for peforming poweroff."
                }
            },
            "required": [
                "delay",
                "reason"
            ]
        },
        "appliance.shutdown_reboot": {
            "type": "object",
            "properties": {
                "delay": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Minutes after which reboot should start. If 0 is specified, reboot will start immediately."
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for peforming reboot."
                }
            },
            "required": [
                "delay",
                "reason"
            ]
        },
        "appliance.shutdown_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.shutdown.shutdown_config"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.subtask_info": {
            "type": "object",
            "properties": {
                "progress": {
                    "description": "Progress of the operation.",
                    "$ref": "#/definitions/cis.task.progress"
                },
                "result": {
                    "description": "Result of the operation. If an operation reports partial results before it completes, this {@term field} could be {@term set} before the {@link CommonInfo#status} has the value {@link Status#SUCCEEDED}. The value could change as the operation progresses.",
                    "$ref": "#/definitions/appliance.notifications"
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/vapi.std.dynamic_ID"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/cis.task.status"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ]
        },
        "appliance.system.storage.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.system.storage.storage_mapping"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.system.storage.resize_ex_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.system.storage.storage_change"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.system.storage.storage_change": {
            "type": "object",
            "properties": {
                "old_size": {
                    "description": "Original size of the partition in MB.",
                    "type": "integer",
                    "format": "int64"
                },
                "new_size": {
                    "description": "Nedw size of the partition in MB.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "old_size",
                "new_size"
            ]
        },
        "appliance.system.storage.storage_mapping": {
            "type": "object",
            "properties": {
                "disk": {
                    "description": "The disk number in the vSphere Web Client.",
                    "type": "string"
                },
                "partition": {
                    "description": "Storage partition name.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of partition",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "disk",
                "partition"
            ]
        },
        "appliance.system.time.system_time_struct": {
            "type": "object",
            "properties": {
                "seconds_since_epoch": {
                    "description": "seconds since the epoch",
                    "type": "number",
                    "format": "double"
                },
                "date": {
                    "description": "date format: Thu 07-31-2014",
                    "type": "string"
                },
                "time": {
                    "description": "time format: 18:18:32",
                    "type": "string"
                },
                "timezone": {
                    "description": "timezone",
                    "type": "string"
                }
            },
            "required": [
                "seconds_since_epoch",
                "date",
                "time",
                "timezone"
            ]
        },
        "appliance.system.time.timezone_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.system.time.timezone_set": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Time zone name."
                }
            },
            "required": [
                "name"
            ]
        },
        "appliance.system.time_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.system.time.system_time_struct"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.system.uptime_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "number",
                    "format": "double"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.system.version.version_struct": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Appliance version.",
                    "type": "string"
                },
                "product": {
                    "description": "Appliance name.",
                    "type": "string"
                },
                "build": {
                    "description": "Appliance build number.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of product. Same product can have different deployment options, which is represented by type.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of patch (empty string, if the appliance has not been patched)",
                    "type": "string"
                },
                "releasedate": {
                    "description": "Release date of patch (empty string, if the appliance has not been patched)",
                    "type": "string"
                },
                "install_time": {
                    "description": "Display the date and time when this system was first installed. Value will not change on subsequent updates.",
                    "type": "string"
                }
            },
            "required": [
                "version",
                "product",
                "build",
                "type",
                "summary",
                "releasedate",
                "install_time"
            ]
        },
        "appliance.system.version_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.system.version.version_struct"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.task_info": {
            "type": "object",
            "properties": {
                "progress": {
                    "description": "Progress of the task.",
                    "$ref": "#/definitions/cis.task.progress"
                },
                "subtask_order": {
                    "description": "List of tasks that make up this appliance task in the order they are being run.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subtasks": {
                    "description": "Information about the subtasks that this appliance task consists of.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.subtask_info"
                            }
                        }
                    }
                },
                "description": {
                    "description": "Description of the operation associated with the task.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "service": {
                    "description": "Identifier of the service containing the operation.",
                    "type": "string"
                },
                "operation": {
                    "description": "Identifier of the operation associated with the task.",
                    "type": "string"
                },
                "parent": {
                    "description": "Parent of the current task.",
                    "type": "string"
                },
                "target": {
                    "description": "Identifier of the target created by the operation or an existing one the operation performed on.",
                    "$ref": "#/definitions/vapi.std.dynamic_ID"
                },
                "status": {
                    "description": "Status of the operation associated with the task.",
                    "$ref": "#/definitions/cis.task.status"
                },
                "cancelable": {
                    "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses.",
                    "type": "boolean"
                },
                "error": {
                    "description": "Description of the error if the operation status is \"FAILED\".",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time when the operation is started.",
                    "type": "string",
                    "format": "date-time"
                },
                "end_time": {
                    "description": "Time when the operation is completed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "Name of the user who performed the operation.",
                    "type": "string"
                }
            },
            "required": [
                "subtask_order",
                "subtasks",
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
            ]
        },
        "appliance.timesync.time_sync_mode": {
            "type": "string",
            "description": "The {@name TimeSyncMode} {@term enumerated type} defines time synchronization modes",
            "enum": [
                "DISABLED",
                "NTP",
                "HOST"
            ]
        },
        "appliance.timesync_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.timesync.time_sync_mode"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.timesync_set": {
            "type": "object",
            "properties": {
                "mode": {
                    "$ref": "#/definitions/appliance.timesync.time_sync_mode",
                    "description": "Time synchronization mode."
                }
            },
            "required": [
                "mode"
            ]
        },
        "appliance.update.common_info.category": {
            "type": "string",
            "description": "The {@name Category} {@term enumerated type} defines update type",
            "enum": [
                "SECURITY",
                "FIX",
                "UPDATE",
                "UPGRADE"
            ]
        },
        "appliance.update.common_info.priority": {
            "type": "string",
            "description": "The {@name Priority} {@term enumerated type} defines the update installation priority recommendations.",
            "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
            ]
        },
        "appliance.update.common_info.severity": {
            "type": "string",
            "description": "The {@name Severity} {@term enumerated type} defines the severity of the issues fixed in the update.",
            "enum": [
                "CRITICAL",
                "IMPORTANT",
                "MODERATE",
                "LOW"
            ]
        },
        "appliance.update.info": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "State of the appliance update.",
                    "$ref": "#/definitions/appliance.update.state"
                },
                "task": {
                    "description": "The running or completed update task.",
                    "$ref": "#/definitions/appliance.task_info"
                },
                "version": {
                    "description": "Version of base appliance if state is UP_TO_DATE Version of update being staged or installed if state is INSTALL_IN_PROGRESS or STAGE_IN_PROGRESS Version of update staged if state is UPDATES_PENDING Version of update failed if state is INSTALL_FAILED or ROLLBACK_IN_PROGRESS",
                    "type": "string"
                },
                "latest_query_time": {
                    "description": "Timestamp of latest query to update repository.",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "state",
                "version"
            ]
        },
        "appliance.update.pending.info": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the update.",
                    "type": "string"
                },
                "contents": {
                    "description": "List of the 1. issues addressed since previous/current version 2. new features/improvements",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "services_will_be_stopped": {
                    "description": "List of the services that will be stopped and restarted during the update installation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.update.service_info"
                    }
                },
                "eulas": {
                    "description": "List of EULAs. This list has multiple entries and can be dynamic based on what we are actually installing.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "staged": {
                    "description": "Is the update staged",
                    "type": "boolean"
                },
                "knowledge_base": {
                    "description": "URL for the knowledge base article describing this update.",
                    "type": "string",
                    "format": "uri"
                },
                "description": {
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\"",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "priority": {
                    "description": "Update priority",
                    "$ref": "#/definitions/appliance.update.common_info.priority"
                },
                "severity": {
                    "description": "Update severity",
                    "$ref": "#/definitions/appliance.update.common_info.severity"
                },
                "update_type": {
                    "description": "Update category",
                    "$ref": "#/definitions/appliance.update.common_info.category"
                },
                "release_date": {
                    "description": "Update release date.",
                    "type": "string",
                    "format": "date-time"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "name",
                "contents",
                "services_will_be_stopped",
                "eulas",
                "staged",
                "knowledge_base",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ]
        },
        "appliance.update.pending.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.update.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.pending.precheck_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.pending.precheck_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.pending.precheck_result": {
            "type": "object",
            "properties": {
                "check_time": {
                    "description": "Time when this precheck was run",
                    "type": "string",
                    "format": "date-time"
                },
                "estimated_time_to_install": {
                    "description": "Rough estimate of time to install the update (minutes).",
                    "type": "integer",
                    "format": "int64"
                },
                "estimated_time_to_rollback": {
                    "description": "Rough estimate of time to rollback the update (minutes).",
                    "type": "integer",
                    "format": "int64"
                },
                "reboot_required": {
                    "description": "Is reboot required to install the update.",
                    "type": "boolean"
                },
                "issues": {
                    "description": "Lists of the issues and warnings",
                    "$ref": "#/definitions/appliance.notifications"
                },
                "questions": {
                    "description": "List of questions that must be answered to install the update.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.update.pending.question"
                    }
                }
            },
            "required": [
                "check_time",
                "reboot_required",
                "questions"
            ]
        },
        "appliance.update.pending.question": {
            "type": "object",
            "properties": {
                "data_item": {
                    "description": "ID of the data item",
                    "type": "string"
                },
                "text": {
                    "description": "Label for the item to be used in GUI/CLI",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "description": {
                    "description": "Description of the item",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "type": {
                    "description": "How this field shoudl be represented in GUI or CLI",
                    "$ref": "#/definitions/appliance.update.pending.question.input_type"
                },
                "allowed_values": {
                    "description": "List of allowed values",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regexp": {
                    "description": "Regexp to validate the input",
                    "type": "string"
                },
                "default_answer": {
                    "description": "Default answer",
                    "type": "string"
                }
            },
            "required": [
                "data_item",
                "text",
                "description",
                "type"
            ]
        },
        "appliance.update.pending.question.input_type": {
            "type": "string",
            "description": "The {@name InputType} {@term enumerated type} defines representation of field fields in GUI or CLI",
            "enum": [
                "PLAIN_TEXT",
                "BOOLEAN",
                "PASSWORD"
            ]
        },
        "appliance.update.pending.source_type": {
            "type": "string",
            "description": "The {@name SourceType} {@term enumerated type} defines the supported types of sources of updates.",
            "enum": [
                "LAST_CHECK",
                "LOCAL",
                "LOCAL_AND_ONLINE"
            ]
        },
        "appliance.update.pending.validate_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.notifications"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.pending_install": {
            "type": "object",
            "properties": {
                "user_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "map of user provided data with IDs"
                }
            },
            "required": [
                "user_data"
            ]
        },
        "appliance.update.pending_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.pending.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.pending_stage_and_install": {
            "type": "object",
            "properties": {
                "user_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "map of user provided data with IDs"
                }
            },
            "required": [
                "user_data"
            ]
        },
        "appliance.update.pending_validate": {
            "type": "object",
            "properties": {
                "user_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "map of user provided data with IDs"
                }
            },
            "required": [
                "user_data"
            ]
        },
        "appliance.update.policy.config": {
            "type": "object",
            "properties": {
                "custom_URL": {
                    "description": "Current appliance update repository URL.",
                    "type": "string"
                },
                "username": {
                    "description": "Username for the update repository",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the update repository",
                    "type": "string",
                    "format": "password"
                },
                "check_schedule": {
                    "description": "Schedule when the automatic check will be run.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.update.policy.time"
                    }
                },
                "auto_stage": {
                    "description": "Automatically stage the latest update if available.",
                    "type": "boolean"
                },
                "certificate_check": {
                    "description": "Indicates whether certificates will be checked during patching. <p> Warning: Setting this {@term field} to false will result in an insecure connection to update repository which can potentially put the appliance security at risk.",
                    "type": "boolean"
                }
            },
            "required": [
                "check_schedule",
                "auto_stage"
            ]
        },
        "appliance.update.policy.day_of_week": {
            "type": "string",
            "description": "The {@name DayOfWeek} {@term enumerated type} defines the set of days",
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ]
        },
        "appliance.update.policy.info": {
            "type": "object",
            "properties": {
                "custom_URL": {
                    "description": "Current appliance update custom repository URL.",
                    "type": "string"
                },
                "default_URL": {
                    "description": "Current appliance update default repository URL.",
                    "type": "string"
                },
                "username": {
                    "description": "Username for the update repository",
                    "type": "string"
                },
                "check_schedule": {
                    "description": "Schedule when the automatic check will be run.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appliance.update.policy.time"
                    }
                },
                "auto_stage": {
                    "description": "Automatically stage the latest update if available.",
                    "type": "boolean"
                },
                "auto_update": {
                    "description": "Is the appliance updated automatically. If {@term set} the appliance may ignore the check schedule or auto-stage settings.",
                    "type": "boolean"
                },
                "manual_control": {
                    "description": "Whether API client should allow the user to start update manually",
                    "type": "boolean"
                },
                "certificate_check": {
                    "description": "Indicates whether certificates will be checked during patching. <p> Warning: If this {@term field} is set to false, an insecure connection is made to the update repository which can potentially put the appliance security at risk.",
                    "type": "boolean"
                }
            },
            "required": [
                "default_URL",
                "check_schedule",
                "auto_stage",
                "auto_update",
                "manual_control",
                "certificate_check"
            ]
        },
        "appliance.update.policy.time": {
            "type": "object",
            "properties": {
                "day": {
                    "description": "weekday to check for updates.",
                    "$ref": "#/definitions/appliance.update.policy.day_of_week"
                },
                "hour": {
                    "description": "Hour: 0-24",
                    "type": "integer",
                    "format": "int64"
                },
                "minute": {
                    "description": "Minute: 0-59",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "day",
                "hour",
                "minute"
            ]
        },
        "appliance.update.policy_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.policy.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.policy_set": {
            "type": "object",
            "properties": {
                "policy": {
                    "$ref": "#/definitions/appliance.update.policy.config",
                    "description": "Info structure containing the policy for the appliance update."
                }
            },
            "required": [
                "policy"
            ]
        },
        "appliance.update.service_info": {
            "type": "object",
            "properties": {
                "service": {
                    "description": "Service ID",
                    "type": "string"
                },
                "description": {
                    "description": "Service description",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "service",
                "description"
            ]
        },
        "appliance.update.staged.info": {
            "type": "object",
            "properties": {
                "staging_complete": {
                    "description": "Is staging complete",
                    "type": "boolean"
                },
                "version": {
                    "description": "Version in form of X.Y.Z.P. e.g. 6.5.1.5400",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the update.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\"",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "priority": {
                    "description": "Update priority",
                    "$ref": "#/definitions/appliance.update.common_info.priority"
                },
                "severity": {
                    "description": "Update severity",
                    "$ref": "#/definitions/appliance.update.common_info.severity"
                },
                "update_type": {
                    "description": "Update category",
                    "$ref": "#/definitions/appliance.update.common_info.category"
                },
                "release_date": {
                    "description": "Update release date.",
                    "type": "string",
                    "format": "date-time"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "staging_complete",
                "version",
                "name",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ]
        },
        "appliance.update.staged_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.staged.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.update.state": {
            "type": "string",
            "description": "The {@name State} {@term enumerated type} defines the various states the appliance update can be in.",
            "enum": [
                "UP_TO_DATE",
                "UPDATES_PENDING",
                "STAGE_IN_PROGRESS",
                "INSTALL_IN_PROGRESS",
                "INSTALL_FAILED",
                "ROLLBACK_IN_PROGRESS"
            ]
        },
        "appliance.update.summary": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Version in form of X.Y.Z.P. e.g. 6.5.1.5400",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the update.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the update. The short information what this update is. E.g. \"Update2 for vCenter Server Appliance 6.5\"",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "priority": {
                    "description": "Update priority",
                    "$ref": "#/definitions/appliance.update.common_info.priority"
                },
                "severity": {
                    "description": "Update severity",
                    "$ref": "#/definitions/appliance.update.common_info.severity"
                },
                "update_type": {
                    "description": "Update category",
                    "$ref": "#/definitions/appliance.update.common_info.category"
                },
                "release_date": {
                    "description": "Update release date.",
                    "type": "string",
                    "format": "date-time"
                },
                "reboot_required": {
                    "description": "Flag indicating whether reboot is required after update.",
                    "type": "boolean"
                },
                "size": {
                    "description": "Download Size of update in Megabytes.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "version",
                "name",
                "description",
                "priority",
                "severity",
                "update_type",
                "release_date",
                "reboot_required",
                "size"
            ]
        },
        "appliance.update_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.update.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.vmon.service.health": {
            "type": "string",
            "description": "The Service.Health enumerated type defines the possible values for health of a service.",
            "enum": [
                "DEGRADED",
                "HEALTHY",
                "HEALTHY_WITH_WARNINGS"
            ]
        },
        "appliance.vmon.service.info": {
            "type": "object",
            "properties": {
                "name_key": {
                    "description": "Service name key. Can be used to lookup resource bundle",
                    "type": "string"
                },
                "description_key": {
                    "description": "Service description key. Can be used to lookup resource bundle",
                    "type": "string"
                },
                "startup_type": {
                    "description": "Startup Type.",
                    "$ref": "#/definitions/appliance.vmon.service.startup_type"
                },
                "state": {
                    "description": "Running State.",
                    "$ref": "#/definitions/appliance.vmon.service.state"
                },
                "health": {
                    "description": "Health of service.\nThis field is optional and it is only relevant when the value of Service.Info.state is STARTED.",
                    "$ref": "#/definitions/appliance.vmon.service.health"
                },
                "health_messages": {
                    "description": "Localizable messages associated with the health of the service\nThis field is optional and it is only relevant when the value of Service.Info.state is STARTED.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "name_key",
                "description_key",
                "startup_type",
                "state"
            ]
        },
        "appliance.vmon.service.list_details_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/appliance.vmon.service.info"
                            }
                        }
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.vmon.service.startup_type": {
            "type": "string",
            "description": "The Service.StartupType enumerated type defines valid Startup Type for services managed by vMon.",
            "enum": [
                "MANUAL",
                "AUTOMATIC",
                "DISABLED"
            ]
        },
        "appliance.vmon.service.state": {
            "type": "string",
            "description": "The Service.State enumerated type defines valid Run State for services.",
            "enum": [
                "STARTING",
                "STOPPING",
                "STARTED",
                "STOPPED"
            ]
        },
        "appliance.vmon.service.update_spec": {
            "type": "object",
            "properties": {
                "startup_type": {
                    "description": "Startup Type\nIf unspecified, leaves value unchanged.",
                    "$ref": "#/definitions/appliance.vmon.service.startup_type"
                }
            }
        },
        "appliance.vmon.service_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/appliance.vmon.service.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "appliance.vmon.service_update": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/appliance.vmon.service.update_spec",
                    "description": "Service Update specification."
                }
            },
            "required": [
                "spec"
            ]
        },
        "cis.task.progress": {
            "type": "object",
            "properties": {
                "total": {
                    "description": "Total amount of the work for the operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "completed": {
                    "description": "The amount of work completed for the operation. The value can only be incremented.",
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "description": "Message about the work progress.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "total",
                "completed",
                "message"
            ]
        },
        "cis.task.status": {
            "type": "string",
            "description": "The Status enumerated type defines the status values that can be reported for an operation.",
            "enum": [
                "PENDING",
                "RUNNING",
                "BLOCKED",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "vapi.std.dynamic_ID": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types.",
                    "type": "string"
                },
                "id": {
                    "description": "The identifier for a resource whose type is specified by {@link #type}.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "vapi.std.errors.already_exists": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.already_exists_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.already_exists"
                }
            }
        },
        "vapi.std.errors.already_in_desired_state": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.already_in_desired_state_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.already_in_desired_state"
                }
            }
        },
        "vapi.std.errors.error": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.error.type": {
            "type": "string",
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ]
        },
        "vapi.std.errors.error_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.error"
                }
            }
        },
        "vapi.std.errors.feature_in_use": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.feature_in_use_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.feature_in_use"
                }
            }
        },
        "vapi.std.errors.invalid_argument": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.invalid_argument_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.invalid_argument"
                }
            }
        },
        "vapi.std.errors.not_allowed_in_current_state": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.not_allowed_in_current_state_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state"
                }
            }
        },
        "vapi.std.errors.not_found": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.not_found_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_found"
                }
            }
        },
        "vapi.std.errors.resource_busy": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.resource_busy_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.resource_busy"
                }
            }
        },
        "vapi.std.errors.timed_out": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.timed_out_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.timed_out"
                }
            }
        },
        "vapi.std.errors.unable_to_allocate_resource": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unable_to_allocate_resource_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unable_to_allocate_resource"
                }
            }
        },
        "vapi.std.errors.unauthenticated": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "Indicates the authentication challenges applicable to the target API provider. It can be used by a client to discover the correct authentication scheme to use. The exact syntax of the value is defined by the specific provider, the protocol and authentication schemes used. <p> For example, a provider using REST may adhere to the WWW-Authenticate HTTP header specification, RFC7235, section 4.1. In this case an example challenge value may be: SIGN realm=\"27da1358-2ba4-11e9-b210-d663bd873d93\",sts=\"http://vcenter/sso?vsphere.local\", Basic realm=\"vCenter\"",
                    "type": "string"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unauthenticated_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                }
            }
        },
        "vapi.std.errors.unauthorized": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unauthorized_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthorized"
                }
            }
        },
        "vapi.std.errors.unsupported": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human {@term error} consumers. <p> The message at the top of the stack (first in the list) describes the {@term error} from the perspective of the {@term operation} the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the {@term operation} reporting a standard {@term error} to indicating that it was unable to complete successfully. <p> {@term Operations} may provide data that clients can use when responding to {@term errors}.  Since the data that clients need may be specific to the context of the {@term operation} reporting the {@term error}, different {@term operations} that report the same {@term error} may provide different data in the {@term error}.  The documentation for each each {@term operation} will describe what, if any, data it provides for each {@term error} it reports. The {@link ArgumentLocations}, {@link FileLocations}, and {@link TransientIndication} {@term structures} are intended as possible values for this {@term field}.  {@link vapi.std.DynamicID} may also be useful as a value for this {@term field} (although that is not its primary purpose).  Some {@term services} may provide their own specific {@term structures} for use as the value of this {@term field} when reporting {@term errors} from their {@term operations}.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unsupported_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unsupported"
                }
            }
        },
        "vapi.std.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "params": {
                    "description": "Named arguments to be substituted into the message template.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        }
                    }
                },
                "localized": {
                    "description": "Localized string value as per request requirements.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "vapi.std.localization_param": {
            "type": "object",
            "properties": {
                "s": {
                    "description": "{@term String} value associated with the parameter.",
                    "type": "string"
                },
                "dt": {
                    "description": "Date and time value associated with the parameter. Use the {@name #format} {@term field} to specify date and time display style.",
                    "type": "string",
                    "format": "date-time"
                },
                "i": {
                    "description": "{@term long} value associated with the parameter.",
                    "type": "integer",
                    "format": "int64"
                },
                "d": {
                    "description": "The {@term double} value associated with the parameter. The number of displayed fractional digits is changed via {@name #precision} {@term field}.",
                    "type": "number",
                    "format": "double"
                },
                "l": {
                    "description": "Nested localizable value associated with the parameter. This is useful construct to convert to human readable localized form {@term enumerated type} and {@term boolean} values. It can also be used for proper handling of pluralization and gender forms in localization. Recursive {@name NestedLocalizableMessage} instances can be used for localizing short lists of items.",
                    "$ref": "#/definitions/vapi.std.nested_localizable_message"
                },
                "format": {
                    "description": "Format associated with the date and time value in {@name #dt} {@term field}. The {@term enumeration value} {@code SHORT_DATETIME} will be used as default.",
                    "$ref": "#/definitions/vapi.std.localization_param.date_time_format"
                },
                "precision": {
                    "description": "Number of fractional digits to include in formatted {@term double} value.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "vapi.std.localization_param.date_time_format": {
            "type": "string",
            "description": "The {@name DateTimeFormat} {@term enumerated type} lists possible date and time formatting options. It combines the Unicode CLDR format types - full, long, medium and short with 3 different presentations - date only, time only and combined date and time presentation.",
            "enum": [
                "SHORT_DATE",
                "MED_DATE",
                "LONG_DATE",
                "FULL_DATE",
                "SHORT_TIME",
                "MED_TIME",
                "LONG_TIME",
                "FULL_TIME",
                "SHORT_DATE_TIME",
                "MED_DATE_TIME",
                "LONG_DATE_TIME",
                "FULL_DATE_TIME"
            ]
        },
        "vapi.std.nested_localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "params": {
                    "description": "Named Arguments to be substituted into the message template.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        }
                    }
                }
            },
            "required": [
                "id"
            ]
        }
    }
}
