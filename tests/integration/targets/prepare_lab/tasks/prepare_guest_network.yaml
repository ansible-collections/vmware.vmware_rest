---
- name: Create the DVSwitch
  community.vmware.vmware_dvswitch:
    datacenter_name: my_dc
    switch_name: dvswitch1
    switch_version: 6.5.0
    uplink_quantity: 2
    discovery_proto: lldp
    discovery_operation: both
    state: present

- name: Attach the hosts to the DVSwitch
  community.vmware.vmware_dvs_host:
    validate_certs: no
    esxi_hostname: "{{ lookup('env', 'ESXI1_HOSTNAME') }}"
    switch_name: dvswitch1
    vmnics:
      - vmnic1
    state: present
  no_log: true

- name: Create the portgroup
  community.vmware.vmware_dvs_portgroup:
    validate_certs: no
    portgroup_name: my-portrgoup
    switch_name: dvswitch1
    portgroup_type: earlyBinding
    vlan_id: 0
    num_ports: 120
    state: present

- name: Retrieve details about the portgroup
  community.vmware.vmware_dvs_portgroup_info:
    validate_certs: no
    datacenter: my_dc
  register: my_portgroup_info


- ansible.builtin.assert:
    that:
      - my_portgroup_info.dvs_portgroup_info.dvswitch1|length > 0

- name: Get a list of the networks
  vmware.vmware_rest.vcenter_network_info:
  register: my_network_value
- ansible.builtin.debug: var=my_network_value
- ansible.builtin.assert:
    that:
      - my_network_value.value|length > 0

- name: Get a list of the networks with a filter
  vmware.vmware_rest.vcenter_network_info:
    filter_types: STANDARD_PORTGROUP
  register: my_standard_portgroup_value

- ansible.builtin.debug: var=my_standard_portgroup_value
- ansible.builtin.assert:
    that:
      - my_standard_portgroup_value.value|selectattr('type', '!=', 'STANDARD_PORTGROUP')|list == []
