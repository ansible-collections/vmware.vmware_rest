- debug: var=my_datastore.datastore
- name: Create a VM
  vmware.vmware_rest.vcenter_vm:
    placement:
      cluster: "{{ my_cluster_info.id }}"
      datastore: "{{ my_datastore.datastore }}"
      folder: "{{ my_virtual_machine_folder.folder }}"
      resource_pool: "{{ my_cluster_info.value.resource_pool }}"
    name: test_vm1
    guest_OS: DEBIAN_8_64
    hardware_version: VMX_11
    memory:
      hot_add_enabled: true
      size_MiB: 1024
  register: my_vm
- assert:
    that:
      - my_vm is changed

- name: _Create a VM (again)
  vmware.vmware_rest.vcenter_vm:
    placement:
      cluster: "{{ my_cluster_info.id }}"
      datastore: "{{ my_datastore.datastore }}"
      folder: "{{ my_virtual_machine_folder.folder }}"
      resource_pool: "{{ my_cluster_info.value.resource_pool }}"
    name: test_vm1
    guest_OS: DEBIAN_8_64
    hardware_version: VMX_11
    memory:
      hot_add_enabled: true
      size_MiB: 1024
  register: result
- assert:
    that:
      - not(result is changed)

- register: _should_be_empty
  name: Search with an invalid filter
  vmware.vmware_rest.vcenter_vm_info:
    filter_names: test_vm1_does_not_exists
- assert:
    that:
      - _should_be_empty.value == []

- name: Create a content library pointing on a NFS share
  vmware.vmware_rest.content_locallibrary:
    name: my_library_on_nfs
    description: automated
    publish_info:
      published: true
      authentication_method: 'NONE'
    storage_backings:
      - storage_uri: 'nfs://datastore.test/srv/share/content-library'
        type: 'OTHER'
    state: present
  register: nfs_lib

- name: _Create a content library pointing on a NFS share (again)
  vmware.vmware_rest.content_locallibrary:
    name: my_library_on_nfs
    description: automated
    publish_info:
      published: true
      authentication_method: 'NONE'
    storage_backings:
      - storage_uri: 'nfs://datastore.test/srv/share/content-library'
        type: 'OTHER'
    state: present
  register: nfs_lib
