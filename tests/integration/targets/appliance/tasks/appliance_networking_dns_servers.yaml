- name: Get the DNS servers
  vmware.vmware_rest.appliance_networking_dns_servers_info:
  register: original_DNS_config
- ansible.builtin.debug: var=original_DNS_config

- name: _Wipe the DNS configuration
  vmware.vmware_rest.appliance_networking_dns_servers:
    servers: []
    mode: is_static
    state: set
  register: default_DNS_config

- name: Set static DNS servers
  vmware.vmware_rest.appliance_networking_dns_servers:
    servers:
      - 1.1.1.1
    mode: is_static
    state: set
  register: result
- ansible.builtin.debug: var=result

- ansible.builtin.assert:
    that:
      - result.value.servers|sort == (["1.1.1.1"] + default_DNS_config.value.servers)| sort

- pause:
    seconds: 10


- name: _Set the DNS servers (again)
  vmware.vmware_rest.appliance_networking_dns_servers:
    servers:
      - 1.1.1.1
    mode: is_static
    state: set
  register: result
- ansible.builtin.debug: var=result

- pause:
    seconds: 10


- name: Add another DNS server
  vmware.vmware_rest.appliance_networking_dns_servers:
    server: 8.8.4.4
    state: add
  register: result
- ansible.builtin.debug: var=result

- ansible.builtin.assert:
    that:
      - result.value.servers|sort == (default_DNS_config.value.servers + ["1.1.1.1", "8.8.4.4"])|sort

- pause:
    seconds: 10

- name: Use the DNS servers from the DHCP
  vmware.vmware_rest.appliance_networking_dns_servers:
    mode: dhcp
    servers: []
    state: set
  register: result
- ansible.builtin.debug: var=result

- name: Test the DNS servers
  vmware.vmware_rest.appliance_networking_dns_servers:
    state: test
    servers:
      - google.com
  register: result
- ansible.builtin.debug: var=result

- name: _Set back the original DNS configuration
  vmware.vmware_rest.appliance_networking_dns_servers:
    servers: "{{ original_DNS_config.value.servers }}"
    mode: is_static
    state: set
